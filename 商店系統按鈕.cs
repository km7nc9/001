using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using 背包的系統;
using UnityEngine.EventSystems;
using static 實例記分板;

public class 商店系統按鈕 : MonoBehaviour
{

    public int 公共X = 0;//自己的   商人編號

    public int 公共Y = 0;//互換的

    public int 公共Z = 0;// 0為玩家  1為NPC

    public int 公共0 = 0; //傳遞篩出來的可用的交易欄位

    public int 公共1 = 0;//篩選玩家的販賣區 可以疊的欄位

    public int 公共2 = 0;//

    public GameObject 交易按鈕;
    public GameObject 背包表;

    public GameObject 背包框;//用來把選中的按鈕上拉一層

    public 背包的系統.背包系統 主角背包;
    public 公共記分板 公共記分板1;
    public 實例記分板 實例記分板1;     //      商店目標按鈕

    public 角色 角色物件;

    public NPC模板 商人;

    public List<背包的系統.屬性設定> 公共物件;
    public List<背包的系統.屬性設定> 公共物件02;
    public List<背包的系統.屬性設定> 公共物件03;//用來獲取數據
    public List<背包的系統.屬性設定> 公共物件04;//對比數據用的
    public List<背包的系統.屬性設定> 公共物件05;//長按數據一號
    public List<背包的系統.屬性設定> 公共物件06;//長按數據二號

    public float timerBot = 0.0f;

    public bool 在物件上 = false;

    public int 公共Z1 = 0;//0為非消耗品  1為消耗品
    public int 公共Z2 = 0;

    public bool 玩家背包是否有空位 = false;
    public bool 玩家販賣區是否有空位 = false;

    public bool 是否相同 = false;
    public bool 是否按下Shift = false;

    public bool 空位警告 = false;//代表沒空位了
    public GameObject 警告框框;

    public GameObject 數量調整框;

    public Button 數量確認按鈕;

    public InputField 數量輸入框;
    public Slider 拉條; //數量調整的拉條
    public double 數量;

    void Update()                                   //每幀執行一次
    {
        if (Input.GetKeyDown(KeyCode.LeftShift))
        {
            是否按下Shift = true;
        }
        if (Input.GetKeyUp(KeyCode.LeftShift))
        {
            是否按下Shift = false;
        }
    }

    public void OnPointerDown()
    {
        商人 = 實例記分板1.商人NPC;
        公共物件.Clear();
        公共物件02.Clear();
        公共物件03.Clear();
        公共物件04.Clear();
        在物件上 = false;       //進入其他按鈕後為true
        實例記分板1.商店選中按鈕 = gameObject; //在進入其他按鈕的時候回傳用的

        公共記分板1.商店是否玩家 = false;
        公共記分板1.商店自動模式 = false;
        // 公共記分板1.商店是否選擇 = true;    
        公共0 = 0;
        timerBot = 0.0f;
        公共記分板1.判斷長按 = false;
        Image itemImage = gameObject.GetComponent<Image>();
        string 圖片名 = itemImage.sprite.texture.name;
        if (圖片名 != "0")//只要沒有圖片就不執行任何動作
        {
            if (公共Z == 0)//玩家的物品
            {
                公共記分板1.商店是否玩家 = true;
                InvokeRepeating("長按計時", 0, 0.02f);
                公共記分板1.商店是否選擇 = true;
            }
            else//商人   按下即執行  
            {
                公共記分板1.商店自動模式 = true;
                if (公共X <= 99)
                {
                    商人物件購買();
                }
                else
                {
                    商人販賣物品退件();
                }
            }
        }
    }

    public void OnPointerUp()
    {
        Image itemImage = gameObject.GetComponent<Image>();
        string 圖片名 = itemImage.sprite.texture.name;
        if (圖片名 != "0")
        {
            公共記分板1.商店自動模式 = false;
            公共記分板1.商店是否選擇 = false;
            公共記分板1.商店是否玩家 = false;
            公共記分板1.商店短按 = false;
            數量大一01 = false;
            數量大一02 = false;
            CancelInvoke("長按計時");
            把X傳入公共3();
            是否相同 = false;
            公共記分板1.商店是否相同 = false;
            if (公共Z == 0)//0為玩家
            {
                公共記分板1.商店是否玩家 = true;
                if (timerBot <= 0.3f)   // 短按
                {
                    公共記分板1.商店短按 = true;
                    公共記分板1.商店自動模式 = true;
                    if (公共X < 100)  //代表起始為背包
                    {
                        背包確認消耗01(公共X);
                        if (是否為消耗品01)
                        {
                            篩查販賣區();
                        }
                    }
                    else
                    {
                        販賣品確認消耗01(公共X);
                        if (是否為消耗品01)
                        {
                            篩查背包();
                        }
                    }
                    if (是否為消耗品01)
                    {
                        確認數量大於一05();
                    }



                    if (是否相同)//有相同的     短按不用確認Y在哪  固定送去另一邊
                    {
                        //不用確認X  因為函數都是通用 
                        if (是否按下Shift && 數量大一01)//背包 往 販賣  且有相同  然後有Shift且數量大於一
                        {
                            公共記分板1.商店自動模式 = true;
                            公共記分板1.商店是否相同 = true;
                            呼叫數字調整();
                        }
                        else//直接疊加
                        {
                            獲取X的數量並刪除();
                            把數量疊加到Y();
                        }
                    }
                    else
                    {
                        if (公共X < 100)  //代表起始為背包
                        {
                            檢查販賣區空位();
                            if (玩家販賣區是否有空位)
                            {
                                if (是否為消耗品01)
                                {
                                    if (是否按下Shift && 數量大一01)
                                    {
                                        公共記分板1.商店自動模式 = true;
                                        呼叫數字調整();
                                    }
                                    else
                                    {
                                        玩家把X丟進公共1();
                                        玩家把公共1丟進販賣區();
                                    }
                                }
                                else
                                {
                                    玩家把X丟進公共1();
                                    玩家把公共1丟進販賣區();
                                }
                            }
                            else//沒有相同  且沒有空位  跳警告
                            {
                                警告框框.SetActive(true);
                            }
                        }
                        else
                        {
                            檢查背包空位();
                            if (玩家販賣區是否有空位)
                            {
                                if (是否為消耗品01)
                                {
                                    if (是否按下Shift && 數量大一01)
                                    {
                                        公共記分板1.商店自動模式 = true;
                                        呼叫數字調整();
                                    }
                                    else
                                    {
                                        玩家把販賣區X丟進公共1();
                                        玩家把公共1丟進背包();
                                    }
                                }
                                else
                                {
                                    玩家把販賣區X丟進公共1();
                                    玩家把公共1丟進背包();
                                }
                            }
                            else//沒有相同  且沒有空位  跳警告
                            {
                                警告框框.SetActive(true);
                            }
                        }
                    }
                }
                else                    // 長按
                {
                    公共記分板1.商店自動模式 = false;
                    if (在物件上) //代表有擷取到目標物件  用來互換欄位的
                    {
                        商店系統按鈕 目標A = 實例記分板1.商店目標按鈕.GetComponent<商店系統按鈕>();//從腳本中紀錄的實體中再去找裡面的腳本的公共變量
                        公共Y = 目標A.公共X;
                        是否相同 = false;
                        公共記分板1.商店是否相同 = false;
                        if (公共Y < 100)
                        {
                            if (主角背包.物件存在列表[公共Y]) //物品Y必須存在
                            {
                                if (公共X < 100)  //代表起始為背包
                                {
                                    背包確認消耗01(公共X);//背包 >> 背包
                                    背包確認消耗02(公共Y);
                                }
                                else
                                {
                                    販賣品確認消耗01(公共X);
                                    背包確認消耗02(公共Y);
                                }
                            }
                        }
                        else
                        {
                            if (主角背包.販賣物存在列表[公共Y - 100])//物品Y必須存在
                            {
                                if (公共X < 100)  //代表起始為背包
                                {
                                    背包確認消耗01(公共X);
                                    販賣品確認消耗02(公共Y);
                                }
                                else
                                {
                                    販賣品確認消耗01(公共X);
                                    販賣品確認消耗02(公共Y);
                                }
                            }
                        }


                        if (是否為消耗品01)
                        {
                            確認數量大於一05();
                            if (是否為消耗品02)
                            {
                                確認數量大於一06();
                                對比序列02();
                            }
                        }

                        //   是否相同 = false;
                        //   公共記分板1.商店是否相同 = false;
                        // 數量大一01 = true;
                        // 數量大一02 = true;
                        if (公共X < 100)  //代表起始為背包
                        {
                            if (公共Y < 100) //終點背包
                            {
                                if (主角背包.物件存在列表[公共Y])//交換物件     沒做往販賣區的
                                {
                                    if (是否相同) //兩邊都有物品  相同  偵測shift  選擇部分或者直接疊加
                                    {
                                        if (是否按下Shift && 數量大一01)
                                        {
                                            公共記分板1.商店是否相同 = true;
                                            呼叫數字調整();
                                        }
                                        else //直接疊加
                                        {
                                            獲取X的數量並刪除();
                                            把數量疊加到Y();
                                        }
                                    }
                                    else//兩邊都有物品  但不相同  執行互換
                                    {
                                        //兩邊都有物品的情況下  不用偵測Shift
                                        玩家把X丟進公共1();
                                        玩家把Y丟進公共2();

                                        玩家把公共1丟進Y();
                                        玩家把公共2丟進X();
                                    }
                                }
                                else//單向拋物 
                                {
                                    if (是否為消耗品01)
                                    {
                                        if (是否按下Shift && 數量大一01)
                                        {
                                            呼叫數字調整();
                                        }
                                        else //直接疊加
                                        {
                                            玩家把X丟進公共1();
                                            玩家把公共1丟進Y();
                                        }
                                    }
                                    else
                                    {
                                        玩家把X丟進公共1();
                                        玩家把公共1丟進Y();
                                    }
                                }
                            }
                            else//終點 販賣 
                            {
                                if (主角背包.販賣物存在列表[公共Y - 100]) //背包往販賣 但販賣區有物品  互換
                                {
                                    if (是否為消耗品01)
                                    {
                                        if (是否相同)
                                        {
                                            if (是否按下Shift && 數量大一01)//背包往販賣  消耗品且相同  疊
                                            {
                                                公共記分板1.商店是否相同 = true;
                                                呼叫數字調整();
                                            }
                                            else //直接疊加
                                            {
                                                獲取X的數量並刪除();
                                                把數量疊加到Y();
                                            }
                                        }
                                        else//背包往販賣  消耗品 但是不同  互換
                                        {
                                            玩家把X丟進公共1();            // X >>公共1
                                            玩家把販賣區Y丟進公共2();      // Y >>公共2
                                                                 //
                                            玩家把公共1丟進指定販賣區();   // 公共1 >>Y
                                            玩家把公共2丟進X();        // 公共2 >>X
                                        }
                                    }
                                    else//背包往販賣  不是消耗品  互換
                                    {
                                        玩家把X丟進公共1();            // X >>公共1
                                        玩家把販賣區Y丟進公共2();      // Y >>公共2
                                                             //
                                        玩家把公共1丟進指定販賣區();   // 公共1 >>Y
                                        玩家把公共2丟進X();        // 公共2 >>X
                                    }
                                }
                                else//背包往販賣  目標無物品  單向拋物
                                {
                                    if (是否按下Shift && 數量大一01)
                                    {
                                        呼叫數字調整();
                                    }
                                    else //直接疊加
                                    {
                                        玩家把X丟進公共1();
                                        玩家把公共1丟進指定販賣區();
                                    }
                                }
                            }
                        }
                        else //起始販賣區(玩家的) 
                        {
                            if (公共Y < 100)//目標為背包區
                            {
                                if (主角背包.物件存在列表[公共Y]) //目標背包有物件  雙換
                                {
                                    if (是否相同)
                                    {
                                        if (是否按下Shift && 數量大一01)
                                        {
                                            公共記分板1.商店是否相同 = true;
                                            呼叫數字調整();
                                        }
                                        else//販賣往背包  消耗品  相同但無Shift
                                        {
                                            獲取X的數量並刪除();
                                            把數量疊加到Y();
                                            //疊加
                                        }
                                    }
                                    else//販賣往背包   兩者不同 互換
                                    {
                                        玩家把販賣區X丟進公共1();     // X >> 公共1
                                        玩家把Y丟進公共2();    // Y >> 公共2

                                        玩家把公共1丟進Y();// 公共1 >> 背包
                                        玩家把公共2丟進指定販賣區();// 公共2 >> 販賣區
                                    }
                                }
                                else //背包為空  單拋
                                {
                                    if (是否按下Shift && 數量大一01)//數量大一必須是消耗品  如果沒過就算其他
                                    {
                                        呼叫數字調整();
                                    }
                                    else
                                    {
                                        玩家把販賣區X丟進公共1();// X >> 公共1
                                        玩家把公共1丟進Y();
                                    }
                                }
                            }
                            else //販賣   空位  消耗品 Shift
                            {
                                if (主角背包.販賣物存在列表[公共Y - 100]) //販賣到販賣  目標有物品  互換
                                {
                                    if (是否為消耗品01)
                                    {
                                        if (是否相同)
                                        {
                                            if (是否按下Shift && 數量大一01)
                                            {
                                                公共記分板1.商店是否相同 = true;
                                                呼叫數字調整();
                                            }
                                            else//販賣往販賣 兩者相同  疊加
                                            {
                                                獲取X的數量並刪除();
                                                把數量疊加到Y();
                                                //疊加
                                            }
                                        }
                                        else//販賣往販賣 兩者不同
                                        {
                                            玩家把販賣區X丟進公共1();// X >> 公共1
                                            玩家把販賣區Y丟進公共2();//Y >> 公共2

                                            玩家把公共1丟進指定販賣區();//公共1 >> Y
                                            玩家把公共2丟進指定販賣區();//公共2 >> X
                                        }
                                    }
                                    else
                                    {
                                        玩家把販賣區X丟進公共1();// X >> 公共1
                                        玩家把販賣區Y丟進公共2();//Y >> 公共2

                                        玩家把公共1丟進指定販賣區();//公共1 >> Y
                                        玩家把公共2丟進指定販賣區();//公共2 >> X
                                    }
                                }
                                else //販賣往販賣 目標空
                                {
                                    if (是否為消耗品01)
                                    {
                                        if (是否按下Shift)
                                        {
                                            呼叫數字調整();
                                        }
                                        else
                                        {
                                            玩家把販賣區X丟進公共1();// X >> 公共1
                                            玩家把公共1丟進指定販賣區(); //公共1 >> Y
                                        }
                                    }
                                    else
                                    {
                                        玩家把販賣區X丟進公共1();// X >> 公共1
                                        玩家把公共1丟進指定販賣區(); //公共1 >> Y
                                    }
                                }
                            }
                        }
                    }
                }
            }
            Destroy(gameObject);
            GameObject.Destroy(實例記分板1.複製的物品詳細顯示);
        }
        //如果是商人的物品  沒有後續動作  按下即執行
    }


    public void 呼叫數字調整()
    {
        公共記分板1.商店記分X = 公共X;
        if (公共記分板1.商店短按)
        {
            公共記分板1.商店記分Y = 公共1;
        }
        else
        {
            公共記分板1.商店記分Y = 公共Y;
        }
        數量調整框.SetActive(true);
        重置數量調整框();
    }

    public void OnPointerEnter()
    {
        if (公共Z == 0)//玩家的物品
        {
            if (公共記分板1.商店是否選擇)//判斷滑鼠移動上來之前   有沒有觸發過別的按鈕
            {
                if (公共記分板1.判斷長按) //有物品才能觸發長按  長按後拉到別的物件上
                {
                    商店系統按鈕 目標A = 實例記分板1.商店選中按鈕.GetComponent<商店系統按鈕>();  //讓被選中的BOOL變換
                    目標A.在物件上 = true;  //代表滑鼠進入
                    實例記分板1.商店目標按鈕 = gameObject;       //紀錄目標
                }
            }
            else//沒選物品  顯示物品詳細 
            {
                if (公共X < 100)
                {
                    if (主角背包.物件存在列表[公共X])
                    {
                        生成顯示板();
                    }
                }
                else
                {
                    if (主角背包.販賣物存在列表[公共X - 100])
                    {
                        生成顯示板();
                    }
                }
            }
        }
        else//商人的物品 顯示物品詳細
        {
            if (公共X < 100)
            {
                if (商人.商品存在列表[公共X])
                {
                    生成顯示板();
                }
            }
            else
            {
                if (商人.準備賣出列表[公共X - 100])
                {
                    生成顯示板();
                }
            }
        }
    }




    public void OnPointerExit()
    {
        if (公共Z == 0)//玩家的物品
        {
            if (公共記分板1.商店是否選擇)//判斷滑鼠移動上來之前   有沒有觸發過別的按鈕
            {
                if (公共記分板1.判斷長按) //有物品才能觸發長按  長按後拉到別的物件上
                {
                    商店系統按鈕 目標A = 實例記分板1.商店選中按鈕.GetComponent<商店系統按鈕>();  //讓被選中的BOOL變換
                    目標A.在物件上 = false;
                }
            }
        }

        if (公共記分板1.展示框存在)//物件存在
        {
            公共記分板1.展示框存在 = false;
            GameObject.Destroy(實例記分板1.複製的物品詳細顯示);
        }
    }

    public void 長按計時()
    {
        timerBot += 0.02f;
        if (timerBot >= 0.3f)
        {
            if (!公共記分板1.判斷長按) { 公共記分板1.判斷長按 = true; }
            Image btnImage = gameObject.GetComponent<Image>();
            Vector2 mouseWorldPosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
            mouseWorldPosition.x -= 100f;
            mouseWorldPosition.y -= 290f;
            gameObject.transform.SetParent(背包表.transform.parent);
            btnImage.rectTransform.anchoredPosition = mouseWorldPosition;
        }
    }

    public void 重置數量調整框()
    {
        公共記分板1.商店記分X = 公共X;
        公共記分板1.商店記分Y = 公共Y;
        拉條.maxValue = (float)公共物件03[4].屬性參數;
        拉條.minValue = 1;
        數量 = 1;
    }
    public void 輸入數量(string value)
    {
        float newValue;
        if (float.TryParse(value, out newValue))
        {
            拉條.value = newValue;
            數量 = double.Parse(value);
        }
    }
    public void 調整拉條(float value)
    {
        數量輸入框.text = 拉條.value.ToString();
        數量 = (double)拉條.value;
    }
    public void 數量加一()
    {
        if (數量 < 拉條.maxValue)
        {
            數量 += 1;
            數量輸入框.text = 數量.ToString();
            拉條.value = (float)數量;
        }
    }
    public void 數量減一()
    {
        if (數量 > 1)
        {
            數量 -= 1;
            數量輸入框.text = 數量.ToString();
            拉條.value = (float)數量;
        }
    }

    public void 加減物件()
    {
        // 前提  Shift+消耗品  且有目標
        //  公共記分板1.商店記分X = 0;
        //  公共記分板1.商店記分Y = 0;   
        //  公共記分板1.商店是否相同 = true;
        公共X = 公共記分板1.商店記分X;//手動複製中的需要用到  X丟進公共03
        公共Y = 公共記分板1.商店記分Y;
        if (公共記分板1.商店是否玩家)      //玩家
        {
            if (公共記分板1.商店自動模式) //需要偵測空位
            {
                if (公共X < 100) //玩家背包出發   需要檢查是否有相同  如果有就不用複製自身
                {
                    if (公共記分板1.商店是否相同)//有相同  讀取Y
                    {
                        物件Y加數量();
                        物件X減數量();
                        確認物品是否數量歸零();
                    }
                    else
                    {
                        檢查販賣區空位();
                        主角背包.販賣物存在列表[公共X] = true;
                        switch (販賣空位)
                        {            
                            case 0:  手動複製(主角背包.販賣物00); 主角背包.販賣物00[4].屬性參數 = 數量; break;
                            case 1:  手動複製(主角背包.販賣物01); 主角背包.販賣物01[4].屬性參數 = 數量; break;
                            case 2:  手動複製(主角背包.販賣物02); 主角背包.販賣物02[4].屬性參數 = 數量; break;
                            case 3:  手動複製(主角背包.販賣物03); 主角背包.販賣物03[4].屬性參數 = 數量; break;
                            case 4:  手動複製(主角背包.販賣物04); 主角背包.販賣物04[4].屬性參數 = 數量; break;
                            case 5:  手動複製(主角背包.販賣物05); 主角背包.販賣物05[4].屬性參數 = 數量; break;
                            case 6:  手動複製(主角背包.販賣物06); 主角背包.販賣物06[4].屬性參數 = 數量; break;
                            case 7:  手動複製(主角背包.販賣物07); 主角背包.販賣物07[4].屬性參數 = 數量; break;
                            case 8:  手動複製(主角背包.販賣物08); 主角背包.販賣物08[4].屬性參數 = 數量; break;
                            case 9:  手動複製(主角背包.販賣物09); 主角背包.販賣物09[4].屬性參數 = 數量; break;
                            case 10: 手動複製(主角背包.販賣物10); 主角背包.販賣物10[4].屬性參數 = 數量; break;
                            case 11: 手動複製(主角背包.販賣物11); 主角背包.販賣物11[4].屬性參數 = 數量; break;
                            case 12: 手動複製(主角背包.販賣物12); 主角背包.販賣物12[4].屬性參數 = 數量; break;
                            case 13: 手動複製(主角背包.販賣物13); 主角背包.販賣物13[4].屬性參數 = 數量; break;
                            case 14: 手動複製(主角背包.販賣物14); 主角背包.販賣物14[4].屬性參數 = 數量; break;
                            case 15: 手動複製(主角背包.販賣物15); 主角背包.販賣物15[4].屬性參數 = 數量; break;
                            case 16: 手動複製(主角背包.販賣物16); 主角背包.販賣物16[4].屬性參數 = 數量; break;
                            case 17: 手動複製(主角背包.販賣物17); 主角背包.販賣物17[4].屬性參數 = 數量; break;
                            case 18: 手動複製(主角背包.販賣物18); 主角背包.販賣物18[4].屬性參數 = 數量; break;
                            case 19: 手動複製(主角背包.販賣物19); 主角背包.販賣物19[4].屬性參數 = 數量; break;
                            case 20: 手動複製(主角背包.販賣物20); 主角背包.販賣物20[4].屬性參數 = 數量; break;
                            case 21: 手動複製(主角背包.販賣物21); 主角背包.販賣物21[4].屬性參數 = 數量; break;
                            case 22: 手動複製(主角背包.販賣物22); 主角背包.販賣物22[4].屬性參數 = 數量; break;
                            case 23: 手動複製(主角背包.販賣物23); 主角背包.販賣物23[4].屬性參數 = 數量; break;
                            case 24: 手動複製(主角背包.販賣物24); 主角背包.販賣物24[4].屬性參數 = 數量; break;
                            case 25: 手動複製(主角背包.販賣物25); 主角背包.販賣物25[4].屬性參數 = 數量; break;
                            case 26: 手動複製(主角背包.販賣物26); 主角背包.販賣物26[4].屬性參數 = 數量; break;
                            case 27: 手動複製(主角背包.販賣物27); 主角背包.販賣物27[4].屬性參數 = 數量; break;
                            case 28: 手動複製(主角背包.販賣物28); 主角背包.販賣物28[4].屬性參數 = 數量; break;
                            case 29: 手動複製(主角背包.販賣物29); 主角背包.販賣物29[4].屬性參數 = 數量; break;
                            case 30: 手動複製(主角背包.販賣物30); 主角背包.販賣物30[4].屬性參數 = 數量; break;
                            case 31: 手動複製(主角背包.販賣物31); 主角背包.販賣物31[4].屬性參數 = 數量; break;
                            case 32: 手動複製(主角背包.販賣物32); 主角背包.販賣物32[4].屬性參數 = 數量; break;
                            case 33: 手動複製(主角背包.販賣物33); 主角背包.販賣物33[4].屬性參數 = 數量; break;
                            case 34: 手動複製(主角背包.販賣物34); 主角背包.販賣物34[4].屬性參數 = 數量; break;
                            case 35: 手動複製(主角背包.販賣物35); 主角背包.販賣物35[4].屬性參數 = 數量; break;
                            case 36: 手動複製(主角背包.販賣物36); 主角背包.販賣物36[4].屬性參數 = 數量; break;
                            case 37: 手動複製(主角背包.販賣物37); 主角背包.販賣物37[4].屬性參數 = 數量; break;
                            case 38: 手動複製(主角背包.販賣物38); 主角背包.販賣物38[4].屬性參數 = 數量; break;
                            case 39: 手動複製(主角背包.販賣物39); 主角背包.販賣物39[4].屬性參數 = 數量; break;
                            case 40: 手動複製(主角背包.販賣物40); 主角背包.販賣物40[4].屬性參數 = 數量; break;
                            case 41: 手動複製(主角背包.販賣物41); 主角背包.販賣物41[4].屬性參數 = 數量; break;
                            case 42: 手動複製(主角背包.販賣物42); 主角背包.販賣物42[4].屬性參數 = 數量; break;
                            case 43: 手動複製(主角背包.販賣物43); 主角背包.販賣物43[4].屬性參數 = 數量; break;
                            case 44: 手動複製(主角背包.販賣物44); 主角背包.販賣物44[4].屬性參數 = 數量; break;
                            case 45: 手動複製(主角背包.販賣物45); 主角背包.販賣物45[4].屬性參數 = 數量; break;
                            case 46: 手動複製(主角背包.販賣物46); 主角背包.販賣物46[4].屬性參數 = 數量; break;
                            case 47: 手動複製(主角背包.販賣物47); 主角背包.販賣物47[4].屬性參數 = 數量; break;
                            case 48: 手動複製(主角背包.販賣物48); 主角背包.販賣物48[4].屬性參數 = 數量; break;
                            case 49: 手動複製(主角背包.販賣物49); 主角背包.販賣物49[4].屬性參數 = 數量; break;
                        }

                        物件X減數量();
                        確認物品是否數量歸零();
                    }
                }
                else //販賣區
                {
                    if (公共記分板1.商店是否相同)
                    {
                        物件Y加數量();
                        物件X減數量();
                        確認販賣物是否數量歸零();
                    }
                    else
                    {
                        檢查背包空位();
                        主角背包.物件存在列表[背包空位] = true;
                        switch (背包空位)
                        {
                            case 0:  手動複製(主角背包.物件00); 主角背包.物件00[4].屬性參數 = 數量; break;
                            case 1:  手動複製(主角背包.物件01); 主角背包.物件01[4].屬性參數 = 數量; break;
                            case 2:  手動複製(主角背包.物件02); 主角背包.物件02[4].屬性參數 = 數量; break;
                            case 3:  手動複製(主角背包.物件03); 主角背包.物件03[4].屬性參數 = 數量; break;
                            case 4:  手動複製(主角背包.物件04); 主角背包.物件04[4].屬性參數 = 數量; break;
                            case 5:  手動複製(主角背包.物件05); 主角背包.物件05[4].屬性參數 = 數量; break;
                            case 6:  手動複製(主角背包.物件06); 主角背包.物件06[4].屬性參數 = 數量; break;
                            case 7:  手動複製(主角背包.物件07); 主角背包.物件07[4].屬性參數 = 數量; break;
                            case 8:  手動複製(主角背包.物件08); 主角背包.物件08[4].屬性參數 = 數量; break;
                            case 9:  手動複製(主角背包.物件09); 主角背包.物件09[4].屬性參數 = 數量; break;
                            case 10: 手動複製(主角背包.物件10); 主角背包.物件10[4].屬性參數 = 數量; break;
                            case 11: 手動複製(主角背包.物件11); 主角背包.物件11[4].屬性參數 = 數量; break;
                            case 12: 手動複製(主角背包.物件12); 主角背包.物件12[4].屬性參數 = 數量; break;
                            case 13: 手動複製(主角背包.物件13); 主角背包.物件13[4].屬性參數 = 數量; break;
                            case 14: 手動複製(主角背包.物件14); 主角背包.物件14[4].屬性參數 = 數量; break;
                            case 15: 手動複製(主角背包.物件15); 主角背包.物件15[4].屬性參數 = 數量; break;
                            case 16: 手動複製(主角背包.物件16); 主角背包.物件16[4].屬性參數 = 數量; break;
                            case 17: 手動複製(主角背包.物件17); 主角背包.物件17[4].屬性參數 = 數量; break;
                            case 18: 手動複製(主角背包.物件18); 主角背包.物件18[4].屬性參數 = 數量; break;
                            case 19: 手動複製(主角背包.物件19); 主角背包.物件19[4].屬性參數 = 數量; break;
                            case 20: 手動複製(主角背包.物件20); 主角背包.物件20[4].屬性參數 = 數量; break;
                            case 21: 手動複製(主角背包.物件21); 主角背包.物件21[4].屬性參數 = 數量; break;
                            case 22: 手動複製(主角背包.物件22); 主角背包.物件22[4].屬性參數 = 數量; break;
                            case 23: 手動複製(主角背包.物件23); 主角背包.物件23[4].屬性參數 = 數量; break;
                            case 24: 手動複製(主角背包.物件24); 主角背包.物件24[4].屬性參數 = 數量; break;
                            case 25: 手動複製(主角背包.物件25); 主角背包.物件25[4].屬性參數 = 數量; break;
                            case 26: 手動複製(主角背包.物件26); 主角背包.物件26[4].屬性參數 = 數量; break;
                            case 27: 手動複製(主角背包.物件27); 主角背包.物件27[4].屬性參數 = 數量; break;
                            case 28: 手動複製(主角背包.物件28); 主角背包.物件28[4].屬性參數 = 數量; break;
                            case 29: 手動複製(主角背包.物件29); 主角背包.物件29[4].屬性參數 = 數量; break;
                            case 30: 手動複製(主角背包.物件30); 主角背包.物件30[4].屬性參數 = 數量; break;
                            case 31: 手動複製(主角背包.物件31); 主角背包.物件31[4].屬性參數 = 數量; break;
                            case 32: 手動複製(主角背包.物件32); 主角背包.物件32[4].屬性參數 = 數量; break;
                            case 33: 手動複製(主角背包.物件33); 主角背包.物件33[4].屬性參數 = 數量; break;
                            case 34: 手動複製(主角背包.物件34); 主角背包.物件34[4].屬性參數 = 數量; break;
                            case 35: 手動複製(主角背包.物件35); 主角背包.物件35[4].屬性參數 = 數量; break;
                            case 36: 手動複製(主角背包.物件36); 主角背包.物件36[4].屬性參數 = 數量; break;
                            case 37: 手動複製(主角背包.物件37); 主角背包.物件37[4].屬性參數 = 數量; break;
                            case 38: 手動複製(主角背包.物件38); 主角背包.物件38[4].屬性參數 = 數量; break;
                            case 39: 手動複製(主角背包.物件39); 主角背包.物件39[4].屬性參數 = 數量; break;
                            case 40: 手動複製(主角背包.物件40); 主角背包.物件40[4].屬性參數 = 數量; break;
                            case 41: 手動複製(主角背包.物件41); 主角背包.物件41[4].屬性參數 = 數量; break;
                            case 42: 手動複製(主角背包.物件42); 主角背包.物件42[4].屬性參數 = 數量; break;
                            case 43: 手動複製(主角背包.物件43); 主角背包.物件43[4].屬性參數 = 數量; break;
                            case 44: 手動複製(主角背包.物件44); 主角背包.物件44[4].屬性參數 = 數量; break;
                            case 45: 手動複製(主角背包.物件45); 主角背包.物件45[4].屬性參數 = 數量; break;
                            case 46: 手動複製(主角背包.物件46); 主角背包.物件46[4].屬性參數 = 數量; break;
                            case 47: 手動複製(主角背包.物件47); 主角背包.物件47[4].屬性參數 = 數量; break;
                            case 48: 手動複製(主角背包.物件48); 主角背包.物件48[4].屬性參數 = 數量; break;
                            case 49: 手動複製(主角背包.物件49); 主角背包.物件49[4].屬性參數 = 數量; break;
                            case 50: 手動複製(主角背包.物件50); 主角背包.物件50[4].屬性參數 = 數量; break;
                            case 51: 手動複製(主角背包.物件51); 主角背包.物件51[4].屬性參數 = 數量; break;
                            case 52: 手動複製(主角背包.物件52); 主角背包.物件52[4].屬性參數 = 數量; break;
                            case 53: 手動複製(主角背包.物件53); 主角背包.物件53[4].屬性參數 = 數量; break;
                            case 54: 手動複製(主角背包.物件54); 主角背包.物件54[4].屬性參數 = 數量; break;
                            case 55: 手動複製(主角背包.物件55); 主角背包.物件55[4].屬性參數 = 數量; break;
                            case 56: 手動複製(主角背包.物件56); 主角背包.物件56[4].屬性參數 = 數量; break;
                            case 57: 手動複製(主角背包.物件57); 主角背包.物件57[4].屬性參數 = 數量; break;
                            case 58: 手動複製(主角背包.物件58); 主角背包.物件58[4].屬性參數 = 數量; break;
                            case 59: 手動複製(主角背包.物件59); 主角背包.物件59[4].屬性參數 = 數量; break;
                            case 60: 手動複製(主角背包.物件60); 主角背包.物件60[4].屬性參數 = 數量; break;
                            case 61: 手動複製(主角背包.物件61); 主角背包.物件61[4].屬性參數 = 數量; break;
                            case 62: 手動複製(主角背包.物件62); 主角背包.物件62[4].屬性參數 = 數量; break;
                            case 63: 手動複製(主角背包.物件63); 主角背包.物件63[4].屬性參數 = 數量; break;
                            case 64: 手動複製(主角背包.物件64); 主角背包.物件64[4].屬性參數 = 數量; break;
                            case 65: 手動複製(主角背包.物件65); 主角背包.物件65[4].屬性參數 = 數量; break;
                            case 66: 手動複製(主角背包.物件66); 主角背包.物件66[4].屬性參數 = 數量; break;
                            case 67: 手動複製(主角背包.物件67); 主角背包.物件67[4].屬性參數 = 數量; break;
                            case 68: 手動複製(主角背包.物件68); 主角背包.物件68[4].屬性參數 = 數量; break;
                            case 69: 手動複製(主角背包.物件69); 主角背包.物件69[4].屬性參數 = 數量; break;
                            case 70: 手動複製(主角背包.物件70); 主角背包.物件70[4].屬性參數 = 數量; break;
                            case 71: 手動複製(主角背包.物件71); 主角背包.物件71[4].屬性參數 = 數量; break;
                            case 72: 手動複製(主角背包.物件72); 主角背包.物件72[4].屬性參數 = 數量; break;
                            case 73: 手動複製(主角背包.物件73); 主角背包.物件73[4].屬性參數 = 數量; break;
                            case 74: 手動複製(主角背包.物件74); 主角背包.物件74[4].屬性參數 = 數量; break;
                            case 75: 手動複製(主角背包.物件75); 主角背包.物件75[4].屬性參數 = 數量; break;
                            case 76: 手動複製(主角背包.物件76); 主角背包.物件76[4].屬性參數 = 數量; break;
                            case 77: 手動複製(主角背包.物件77); 主角背包.物件77[4].屬性參數 = 數量; break;
                            case 78: 手動複製(主角背包.物件78); 主角背包.物件78[4].屬性參數 = 數量; break;
                            case 79: 手動複製(主角背包.物件79); 主角背包.物件79[4].屬性參數 = 數量; break;
                            case 80: 手動複製(主角背包.物件80); 主角背包.物件80[4].屬性參數 = 數量; break;
                            case 81: 手動複製(主角背包.物件81); 主角背包.物件81[4].屬性參數 = 數量; break;
                            case 82: 手動複製(主角背包.物件82); 主角背包.物件82[4].屬性參數 = 數量; break;
                            case 83: 手動複製(主角背包.物件83); 主角背包.物件83[4].屬性參數 = 數量; break;
                            case 84: 手動複製(主角背包.物件84); 主角背包.物件84[4].屬性參數 = 數量; break;
                            case 85: 手動複製(主角背包.物件85); 主角背包.物件85[4].屬性參數 = 數量; break;
                            case 86: 手動複製(主角背包.物件86); 主角背包.物件86[4].屬性參數 = 數量; break;
                            case 87: 手動複製(主角背包.物件87); 主角背包.物件87[4].屬性參數 = 數量; break;
                            case 88: 手動複製(主角背包.物件88); 主角背包.物件88[4].屬性參數 = 數量; break;
                            case 89: 手動複製(主角背包.物件89); 主角背包.物件89[4].屬性參數 = 數量; break;
                            case 90: 手動複製(主角背包.物件90); 主角背包.物件90[4].屬性參數 = 數量; break;
                            case 91: 手動複製(主角背包.物件91); 主角背包.物件91[4].屬性參數 = 數量; break;
                            case 92: 手動複製(主角背包.物件92); 主角背包.物件92[4].屬性參數 = 數量; break;
                            case 93: 手動複製(主角背包.物件93); 主角背包.物件93[4].屬性參數 = 數量; break;
                            case 94: 手動複製(主角背包.物件94); 主角背包.物件94[4].屬性參數 = 數量; break;
                            case 95: 手動複製(主角背包.物件95); 主角背包.物件95[4].屬性參數 = 數量; break;
                            case 96: 手動複製(主角背包.物件96); 主角背包.物件96[4].屬性參數 = 數量; break;
                            case 97: 手動複製(主角背包.物件97); 主角背包.物件97[4].屬性參數 = 數量; break;
                            case 98: 手動複製(主角背包.物件98); 主角背包.物件98[4].屬性參數 = 數量; break;
                            case 99: 手動複製(主角背包.物件99); 主角背包.物件99[4].屬性參數 = 數量; break;
                        }

                        物件X減數量();
                        確認物品是否數量歸零();
                    }
                }
            }
            else//長按拖拉   有目標物 只需偵測目標是否相同  
            {
                if (公共X < 100) 
                {
                    if (公共Y<100) //背包往背包
                    {
                        if (主角背包.物件存在列表[公共Y])
                        {
                            if (公共記分板1.商店是否相同) //背包往背包 兩者相同 
                            {
                                物件Y加數量();
                                物件X減數量();
                                確認物品是否數量歸零();
                            }
                        }
                        else //背包往背包 但目標不存在
                        {
                            主角背包.物件存在列表[公共Y] = true;
                            switch (公共Y)
                            {
                                case 0: 手動複製(主角背包.物件00); 主角背包.物件00[4].屬性參數 = 數量; break;
                                case 1: 手動複製(主角背包.物件01); 主角背包.物件01[4].屬性參數 = 數量; break;
                                case 2: 手動複製(主角背包.物件02); 主角背包.物件02[4].屬性參數 = 數量; break;
                                case 3: 手動複製(主角背包.物件03); 主角背包.物件03[4].屬性參數 = 數量; break;
                                case 4: 手動複製(主角背包.物件04); 主角背包.物件04[4].屬性參數 = 數量; break;
                                case 5: 手動複製(主角背包.物件05); 主角背包.物件05[4].屬性參數 = 數量; break;
                                case 6: 手動複製(主角背包.物件06); 主角背包.物件06[4].屬性參數 = 數量; break;
                                case 7: 手動複製(主角背包.物件07); 主角背包.物件07[4].屬性參數 = 數量; break;
                                case 8: 手動複製(主角背包.物件08); 主角背包.物件08[4].屬性參數 = 數量; break;
                                case 9: 手動複製(主角背包.物件09); 主角背包.物件09[4].屬性參數 = 數量; break;
                                case 10: 手動複製(主角背包.物件10); 主角背包.物件10[4].屬性參數 = 數量; break;
                                case 11: 手動複製(主角背包.物件11); 主角背包.物件11[4].屬性參數 = 數量; break;
                                case 12: 手動複製(主角背包.物件12); 主角背包.物件12[4].屬性參數 = 數量; break;
                                case 13: 手動複製(主角背包.物件13); 主角背包.物件13[4].屬性參數 = 數量; break;
                                case 14: 手動複製(主角背包.物件14); 主角背包.物件14[4].屬性參數 = 數量; break;
                                case 15: 手動複製(主角背包.物件15); 主角背包.物件15[4].屬性參數 = 數量; break;
                                case 16: 手動複製(主角背包.物件16); 主角背包.物件16[4].屬性參數 = 數量; break;
                                case 17: 手動複製(主角背包.物件17); 主角背包.物件17[4].屬性參數 = 數量; break;
                                case 18: 手動複製(主角背包.物件18); 主角背包.物件18[4].屬性參數 = 數量; break;
                                case 19: 手動複製(主角背包.物件19); 主角背包.物件19[4].屬性參數 = 數量; break;
                                case 20: 手動複製(主角背包.物件20); 主角背包.物件20[4].屬性參數 = 數量; break;
                                case 21: 手動複製(主角背包.物件21); 主角背包.物件21[4].屬性參數 = 數量; break;
                                case 22: 手動複製(主角背包.物件22); 主角背包.物件22[4].屬性參數 = 數量; break;
                                case 23: 手動複製(主角背包.物件23); 主角背包.物件23[4].屬性參數 = 數量; break;
                                case 24: 手動複製(主角背包.物件24); 主角背包.物件24[4].屬性參數 = 數量; break;
                                case 25: 手動複製(主角背包.物件25); 主角背包.物件25[4].屬性參數 = 數量; break;
                                case 26: 手動複製(主角背包.物件26); 主角背包.物件26[4].屬性參數 = 數量; break;
                                case 27: 手動複製(主角背包.物件27); 主角背包.物件27[4].屬性參數 = 數量; break;
                                case 28: 手動複製(主角背包.物件28); 主角背包.物件28[4].屬性參數 = 數量; break;
                                case 29: 手動複製(主角背包.物件29); 主角背包.物件29[4].屬性參數 = 數量; break;
                                case 30: 手動複製(主角背包.物件30); 主角背包.物件30[4].屬性參數 = 數量; break;
                                case 31: 手動複製(主角背包.物件31); 主角背包.物件31[4].屬性參數 = 數量; break;
                                case 32: 手動複製(主角背包.物件32); 主角背包.物件32[4].屬性參數 = 數量; break;
                                case 33: 手動複製(主角背包.物件33); 主角背包.物件33[4].屬性參數 = 數量; break;
                                case 34: 手動複製(主角背包.物件34); 主角背包.物件34[4].屬性參數 = 數量; break;
                                case 35: 手動複製(主角背包.物件35); 主角背包.物件35[4].屬性參數 = 數量; break;
                                case 36: 手動複製(主角背包.物件36); 主角背包.物件36[4].屬性參數 = 數量; break;
                                case 37: 手動複製(主角背包.物件37); 主角背包.物件37[4].屬性參數 = 數量; break;
                                case 38: 手動複製(主角背包.物件38); 主角背包.物件38[4].屬性參數 = 數量; break;
                                case 39: 手動複製(主角背包.物件39); 主角背包.物件39[4].屬性參數 = 數量; break;
                                case 40: 手動複製(主角背包.物件40); 主角背包.物件40[4].屬性參數 = 數量; break;
                                case 41: 手動複製(主角背包.物件41); 主角背包.物件41[4].屬性參數 = 數量; break;
                                case 42: 手動複製(主角背包.物件42); 主角背包.物件42[4].屬性參數 = 數量; break;
                                case 43: 手動複製(主角背包.物件43); 主角背包.物件43[4].屬性參數 = 數量; break;
                                case 44: 手動複製(主角背包.物件44); 主角背包.物件44[4].屬性參數 = 數量; break;
                                case 45: 手動複製(主角背包.物件45); 主角背包.物件45[4].屬性參數 = 數量; break;
                                case 46: 手動複製(主角背包.物件46); 主角背包.物件46[4].屬性參數 = 數量; break;
                                case 47: 手動複製(主角背包.物件47); 主角背包.物件47[4].屬性參數 = 數量; break;
                                case 48: 手動複製(主角背包.物件48); 主角背包.物件48[4].屬性參數 = 數量; break;
                                case 49: 手動複製(主角背包.物件49); 主角背包.物件49[4].屬性參數 = 數量; break;
                                case 50: 手動複製(主角背包.物件50); 主角背包.物件50[4].屬性參數 = 數量; break;
                                case 51: 手動複製(主角背包.物件51); 主角背包.物件51[4].屬性參數 = 數量; break;
                                case 52: 手動複製(主角背包.物件52); 主角背包.物件52[4].屬性參數 = 數量; break;
                                case 53: 手動複製(主角背包.物件53); 主角背包.物件53[4].屬性參數 = 數量; break;
                                case 54: 手動複製(主角背包.物件54); 主角背包.物件54[4].屬性參數 = 數量; break;
                                case 55: 手動複製(主角背包.物件55); 主角背包.物件55[4].屬性參數 = 數量; break;
                                case 56: 手動複製(主角背包.物件56); 主角背包.物件56[4].屬性參數 = 數量; break;
                                case 57: 手動複製(主角背包.物件57); 主角背包.物件57[4].屬性參數 = 數量; break;
                                case 58: 手動複製(主角背包.物件58); 主角背包.物件58[4].屬性參數 = 數量; break;
                                case 59: 手動複製(主角背包.物件59); 主角背包.物件59[4].屬性參數 = 數量; break;
                                case 60: 手動複製(主角背包.物件60); 主角背包.物件60[4].屬性參數 = 數量; break;
                                case 61: 手動複製(主角背包.物件61); 主角背包.物件61[4].屬性參數 = 數量; break;
                                case 62: 手動複製(主角背包.物件62); 主角背包.物件62[4].屬性參數 = 數量; break;
                                case 63: 手動複製(主角背包.物件63); 主角背包.物件63[4].屬性參數 = 數量; break;
                                case 64: 手動複製(主角背包.物件64); 主角背包.物件64[4].屬性參數 = 數量; break;
                                case 65: 手動複製(主角背包.物件65); 主角背包.物件65[4].屬性參數 = 數量; break;
                                case 66: 手動複製(主角背包.物件66); 主角背包.物件66[4].屬性參數 = 數量; break;
                                case 67: 手動複製(主角背包.物件67); 主角背包.物件67[4].屬性參數 = 數量; break;
                                case 68: 手動複製(主角背包.物件68); 主角背包.物件68[4].屬性參數 = 數量; break;
                                case 69: 手動複製(主角背包.物件69); 主角背包.物件69[4].屬性參數 = 數量; break;
                                case 70: 手動複製(主角背包.物件70); 主角背包.物件70[4].屬性參數 = 數量; break;
                                case 71: 手動複製(主角背包.物件71); 主角背包.物件71[4].屬性參數 = 數量; break;
                                case 72: 手動複製(主角背包.物件72); 主角背包.物件72[4].屬性參數 = 數量; break;
                                case 73: 手動複製(主角背包.物件73); 主角背包.物件73[4].屬性參數 = 數量; break;
                                case 74: 手動複製(主角背包.物件74); 主角背包.物件74[4].屬性參數 = 數量; break;
                                case 75: 手動複製(主角背包.物件75); 主角背包.物件75[4].屬性參數 = 數量; break;
                                case 76: 手動複製(主角背包.物件76); 主角背包.物件76[4].屬性參數 = 數量; break;
                                case 77: 手動複製(主角背包.物件77); 主角背包.物件77[4].屬性參數 = 數量; break;
                                case 78: 手動複製(主角背包.物件78); 主角背包.物件78[4].屬性參數 = 數量; break;
                                case 79: 手動複製(主角背包.物件79); 主角背包.物件79[4].屬性參數 = 數量; break;
                                case 80: 手動複製(主角背包.物件80); 主角背包.物件80[4].屬性參數 = 數量; break;
                                case 81: 手動複製(主角背包.物件81); 主角背包.物件81[4].屬性參數 = 數量; break;
                                case 82: 手動複製(主角背包.物件82); 主角背包.物件82[4].屬性參數 = 數量; break;
                                case 83: 手動複製(主角背包.物件83); 主角背包.物件83[4].屬性參數 = 數量; break;
                                case 84: 手動複製(主角背包.物件84); 主角背包.物件84[4].屬性參數 = 數量; break;
                                case 85: 手動複製(主角背包.物件85); 主角背包.物件85[4].屬性參數 = 數量; break;
                                case 86: 手動複製(主角背包.物件86); 主角背包.物件86[4].屬性參數 = 數量; break;
                                case 87: 手動複製(主角背包.物件87); 主角背包.物件87[4].屬性參數 = 數量; break;
                                case 88: 手動複製(主角背包.物件88); 主角背包.物件88[4].屬性參數 = 數量; break;
                                case 89: 手動複製(主角背包.物件89); 主角背包.物件89[4].屬性參數 = 數量; break;
                                case 90: 手動複製(主角背包.物件90); 主角背包.物件90[4].屬性參數 = 數量; break;
                                case 91: 手動複製(主角背包.物件91); 主角背包.物件91[4].屬性參數 = 數量; break;
                                case 92: 手動複製(主角背包.物件92); 主角背包.物件92[4].屬性參數 = 數量; break;
                                case 93: 手動複製(主角背包.物件93); 主角背包.物件93[4].屬性參數 = 數量; break;
                                case 94: 手動複製(主角背包.物件94); 主角背包.物件94[4].屬性參數 = 數量; break;
                                case 95: 手動複製(主角背包.物件95); 主角背包.物件95[4].屬性參數 = 數量; break;
                                case 96: 手動複製(主角背包.物件96); 主角背包.物件96[4].屬性參數 = 數量; break;
                                case 97: 手動複製(主角背包.物件97); 主角背包.物件97[4].屬性參數 = 數量; break;
                                case 98: 手動複製(主角背包.物件98); 主角背包.物件98[4].屬性參數 = 數量; break;
                                case 99: 手動複製(主角背包.物件99); 主角背包.物件99[4].屬性參數 = 數量; break;
                            }

                            物件X減數量();
                            確認物品是否數量歸零();
                        }
                    }
                    else
                    {
                        if (主角背包.販賣物存在列表[公共Y]) 
                        {
                            if (公共記分板1.商店是否相同) //背包往販賣 兩者相同 
                            {
                                物件Y加數量();
                                物件X減數量();
                                確認物品是否數量歸零();
                            }
                        }
                        else//背包往販賣 目標不存在
                        {
                            主角背包.販賣物存在列表[公共Y] = true;
                            switch (公共Y)
                            {
                                case 0: 手動複製(主角背包.販賣物00); 主角背包.販賣物00[4].屬性參數 = 數量; break;
                                case 1: 手動複製(主角背包.販賣物01); 主角背包.販賣物01[4].屬性參數 = 數量; break;
                                case 2: 手動複製(主角背包.販賣物02); 主角背包.販賣物02[4].屬性參數 = 數量; break;
                                case 3: 手動複製(主角背包.販賣物03); 主角背包.販賣物03[4].屬性參數 = 數量; break;
                                case 4: 手動複製(主角背包.販賣物04); 主角背包.販賣物04[4].屬性參數 = 數量; break;
                                case 5: 手動複製(主角背包.販賣物05); 主角背包.販賣物05[4].屬性參數 = 數量; break;
                                case 6: 手動複製(主角背包.販賣物06); 主角背包.販賣物06[4].屬性參數 = 數量; break;
                                case 7: 手動複製(主角背包.販賣物07); 主角背包.販賣物07[4].屬性參數 = 數量; break;
                                case 8: 手動複製(主角背包.販賣物08); 主角背包.販賣物08[4].屬性參數 = 數量; break;
                                case 9: 手動複製(主角背包.販賣物09); 主角背包.販賣物09[4].屬性參數 = 數量; break;
                                case 10: 手動複製(主角背包.販賣物10); 主角背包.販賣物10[4].屬性參數 = 數量; break;
                                case 11: 手動複製(主角背包.販賣物11); 主角背包.販賣物11[4].屬性參數 = 數量; break;
                                case 12: 手動複製(主角背包.販賣物12); 主角背包.販賣物12[4].屬性參數 = 數量; break;
                                case 13: 手動複製(主角背包.販賣物13); 主角背包.販賣物13[4].屬性參數 = 數量; break;
                                case 14: 手動複製(主角背包.販賣物14); 主角背包.販賣物14[4].屬性參數 = 數量; break;
                                case 15: 手動複製(主角背包.販賣物15); 主角背包.販賣物15[4].屬性參數 = 數量; break;
                                case 16: 手動複製(主角背包.販賣物16); 主角背包.販賣物16[4].屬性參數 = 數量; break;
                                case 17: 手動複製(主角背包.販賣物17); 主角背包.販賣物17[4].屬性參數 = 數量; break;
                                case 18: 手動複製(主角背包.販賣物18); 主角背包.販賣物18[4].屬性參數 = 數量; break;
                                case 19: 手動複製(主角背包.販賣物19); 主角背包.販賣物19[4].屬性參數 = 數量; break;
                                case 20: 手動複製(主角背包.販賣物20); 主角背包.販賣物20[4].屬性參數 = 數量; break;
                                case 21: 手動複製(主角背包.販賣物21); 主角背包.販賣物21[4].屬性參數 = 數量; break;
                                case 22: 手動複製(主角背包.販賣物22); 主角背包.販賣物22[4].屬性參數 = 數量; break;
                                case 23: 手動複製(主角背包.販賣物23); 主角背包.販賣物23[4].屬性參數 = 數量; break;
                                case 24: 手動複製(主角背包.販賣物24); 主角背包.販賣物24[4].屬性參數 = 數量; break;
                                case 25: 手動複製(主角背包.販賣物25); 主角背包.販賣物25[4].屬性參數 = 數量; break;
                                case 26: 手動複製(主角背包.販賣物26); 主角背包.販賣物26[4].屬性參數 = 數量; break;
                                case 27: 手動複製(主角背包.販賣物27); 主角背包.販賣物27[4].屬性參數 = 數量; break;
                                case 28: 手動複製(主角背包.販賣物28); 主角背包.販賣物28[4].屬性參數 = 數量; break;
                                case 29: 手動複製(主角背包.販賣物29); 主角背包.販賣物29[4].屬性參數 = 數量; break;
                                case 30: 手動複製(主角背包.販賣物30); 主角背包.販賣物30[4].屬性參數 = 數量; break;
                                case 31: 手動複製(主角背包.販賣物31); 主角背包.販賣物31[4].屬性參數 = 數量; break;
                                case 32: 手動複製(主角背包.販賣物32); 主角背包.販賣物32[4].屬性參數 = 數量; break;
                                case 33: 手動複製(主角背包.販賣物33); 主角背包.販賣物33[4].屬性參數 = 數量; break;
                                case 34: 手動複製(主角背包.販賣物34); 主角背包.販賣物34[4].屬性參數 = 數量; break;
                                case 35: 手動複製(主角背包.販賣物35); 主角背包.販賣物35[4].屬性參數 = 數量; break;
                                case 36: 手動複製(主角背包.販賣物36); 主角背包.販賣物36[4].屬性參數 = 數量; break;
                                case 37: 手動複製(主角背包.販賣物37); 主角背包.販賣物37[4].屬性參數 = 數量; break;
                                case 38: 手動複製(主角背包.販賣物38); 主角背包.販賣物38[4].屬性參數 = 數量; break;
                                case 39: 手動複製(主角背包.販賣物39); 主角背包.販賣物39[4].屬性參數 = 數量; break;
                                case 40: 手動複製(主角背包.販賣物40); 主角背包.販賣物40[4].屬性參數 = 數量; break;
                                case 41: 手動複製(主角背包.販賣物41); 主角背包.販賣物41[4].屬性參數 = 數量; break;
                                case 42: 手動複製(主角背包.販賣物42); 主角背包.販賣物42[4].屬性參數 = 數量; break;
                                case 43: 手動複製(主角背包.販賣物43); 主角背包.販賣物43[4].屬性參數 = 數量; break;
                                case 44: 手動複製(主角背包.販賣物44); 主角背包.販賣物44[4].屬性參數 = 數量; break;
                                case 45: 手動複製(主角背包.販賣物45); 主角背包.販賣物45[4].屬性參數 = 數量; break;
                                case 46: 手動複製(主角背包.販賣物46); 主角背包.販賣物46[4].屬性參數 = 數量; break;
                                case 47: 手動複製(主角背包.販賣物47); 主角背包.販賣物47[4].屬性參數 = 數量; break;
                                case 48: 手動複製(主角背包.販賣物48); 主角背包.販賣物48[4].屬性參數 = 數量; break;
                                case 49: 手動複製(主角背包.販賣物49); 主角背包.販賣物49[4].屬性參數 = 數量; break;
                            }

                            物件X減數量();
                            確認物品是否數量歸零();
                        }
                    }
                }
                else
                {
                    if (公共Y < 100)//販賣往背包
                    {

                    }
                    else//販賣往販賣
                    {

                    }
                }
            }
        }
        else
        {

        }
    }

    //商人NPC 販賣區 背包全部通用
    public void 物件Y加數量() 
    {
        if (公共記分板1.商店是否玩家)      //玩家
        {
            if (公共Y < 100) //背包
            {
                switch (公共Y)
                {
                    case 0: 主角背包.物件00[4].屬性參數 += 數量; break;
                    case 1: 主角背包.物件01[4].屬性參數 += 數量; break;
                    case 2: 主角背包.物件02[4].屬性參數 += 數量; break;
                    case 3: 主角背包.物件03[4].屬性參數 += 數量; break;
                    case 4: 主角背包.物件04[4].屬性參數 += 數量; break;
                    case 5: 主角背包.物件05[4].屬性參數 += 數量; break;
                    case 6: 主角背包.物件06[4].屬性參數 += 數量; break;
                    case 7: 主角背包.物件07[4].屬性參數 += 數量; break;
                    case 8: 主角背包.物件08[4].屬性參數 += 數量; break;
                    case 9: 主角背包.物件09[4].屬性參數 += 數量; break;
                    case 10: 主角背包.物件10[4].屬性參數 += 數量; break;
                    case 11: 主角背包.物件11[4].屬性參數 += 數量; break;
                    case 12: 主角背包.物件12[4].屬性參數 += 數量; break;
                    case 13: 主角背包.物件13[4].屬性參數 += 數量; break;
                    case 14: 主角背包.物件14[4].屬性參數 += 數量; break;
                    case 15: 主角背包.物件15[4].屬性參數 += 數量; break;
                    case 16: 主角背包.物件16[4].屬性參數 += 數量; break;
                    case 17: 主角背包.物件17[4].屬性參數 += 數量; break;
                    case 18: 主角背包.物件18[4].屬性參數 += 數量; break;
                    case 19: 主角背包.物件19[4].屬性參數 += 數量; break;
                    case 20: 主角背包.物件20[4].屬性參數 += 數量; break;
                    case 21: 主角背包.物件21[4].屬性參數 += 數量; break;
                    case 22: 主角背包.物件22[4].屬性參數 += 數量; break;
                    case 23: 主角背包.物件23[4].屬性參數 += 數量; break;
                    case 24: 主角背包.物件24[4].屬性參數 += 數量; break;
                    case 25: 主角背包.物件25[4].屬性參數 += 數量; break;
                    case 26: 主角背包.物件26[4].屬性參數 += 數量; break;
                    case 27: 主角背包.物件27[4].屬性參數 += 數量; break;
                    case 28: 主角背包.物件28[4].屬性參數 += 數量; break;
                    case 29: 主角背包.物件29[4].屬性參數 += 數量; break;
                    case 30: 主角背包.物件30[4].屬性參數 += 數量; break;
                    case 31: 主角背包.物件31[4].屬性參數 += 數量; break;
                    case 32: 主角背包.物件32[4].屬性參數 += 數量; break;
                    case 33: 主角背包.物件33[4].屬性參數 += 數量; break;
                    case 34: 主角背包.物件34[4].屬性參數 += 數量; break;
                    case 35: 主角背包.物件35[4].屬性參數 += 數量; break;
                    case 36: 主角背包.物件36[4].屬性參數 += 數量; break;
                    case 37: 主角背包.物件37[4].屬性參數 += 數量; break;
                    case 38: 主角背包.物件38[4].屬性參數 += 數量; break;
                    case 39: 主角背包.物件39[4].屬性參數 += 數量; break;
                    case 40: 主角背包.物件40[4].屬性參數 += 數量; break;
                    case 41: 主角背包.物件41[4].屬性參數 += 數量; break;
                    case 42: 主角背包.物件42[4].屬性參數 += 數量; break;
                    case 43: 主角背包.物件43[4].屬性參數 += 數量; break;
                    case 44: 主角背包.物件44[4].屬性參數 += 數量; break;
                    case 45: 主角背包.物件45[4].屬性參數 += 數量; break;
                    case 46: 主角背包.物件46[4].屬性參數 += 數量; break;
                    case 47: 主角背包.物件47[4].屬性參數 += 數量; break;
                    case 48: 主角背包.物件48[4].屬性參數 += 數量; break;
                    case 49: 主角背包.物件49[4].屬性參數 += 數量; break;
                    case 50: 主角背包.物件50[4].屬性參數 += 數量; break;
                    case 51: 主角背包.物件51[4].屬性參數 += 數量; break;
                    case 52: 主角背包.物件52[4].屬性參數 += 數量; break;
                    case 53: 主角背包.物件53[4].屬性參數 += 數量; break;
                    case 54: 主角背包.物件54[4].屬性參數 += 數量; break;
                    case 55: 主角背包.物件55[4].屬性參數 += 數量; break;
                    case 56: 主角背包.物件56[4].屬性參數 += 數量; break;
                    case 57: 主角背包.物件57[4].屬性參數 += 數量; break;
                    case 58: 主角背包.物件58[4].屬性參數 += 數量; break;
                    case 59: 主角背包.物件59[4].屬性參數 += 數量; break;
                    case 60: 主角背包.物件60[4].屬性參數 += 數量; break;
                    case 61: 主角背包.物件61[4].屬性參數 += 數量; break;
                    case 62: 主角背包.物件62[4].屬性參數 += 數量; break;
                    case 63: 主角背包.物件63[4].屬性參數 += 數量; break;
                    case 64: 主角背包.物件64[4].屬性參數 += 數量; break;
                    case 65: 主角背包.物件65[4].屬性參數 += 數量; break;
                    case 66: 主角背包.物件66[4].屬性參數 += 數量; break;
                    case 67: 主角背包.物件67[4].屬性參數 += 數量; break;
                    case 68: 主角背包.物件68[4].屬性參數 += 數量; break;
                    case 69: 主角背包.物件69[4].屬性參數 += 數量; break;
                    case 70: 主角背包.物件70[4].屬性參數 += 數量; break;
                    case 71: 主角背包.物件71[4].屬性參數 += 數量; break;
                    case 72: 主角背包.物件72[4].屬性參數 += 數量; break;
                    case 73: 主角背包.物件73[4].屬性參數 += 數量; break;
                    case 74: 主角背包.物件74[4].屬性參數 += 數量; break;
                    case 75: 主角背包.物件75[4].屬性參數 += 數量; break;
                    case 76: 主角背包.物件76[4].屬性參數 += 數量; break;
                    case 77: 主角背包.物件77[4].屬性參數 += 數量; break;
                    case 78: 主角背包.物件78[4].屬性參數 += 數量; break;
                    case 79: 主角背包.物件79[4].屬性參數 += 數量; break;
                    case 80: 主角背包.物件80[4].屬性參數 += 數量; break;
                    case 81: 主角背包.物件81[4].屬性參數 += 數量; break;
                    case 82: 主角背包.物件82[4].屬性參數 += 數量; break;
                    case 83: 主角背包.物件83[4].屬性參數 += 數量; break;
                    case 84: 主角背包.物件84[4].屬性參數 += 數量; break;
                    case 85: 主角背包.物件85[4].屬性參數 += 數量; break;
                    case 86: 主角背包.物件86[4].屬性參數 += 數量; break;
                    case 87: 主角背包.物件87[4].屬性參數 += 數量; break;
                    case 88: 主角背包.物件88[4].屬性參數 += 數量; break;
                    case 89: 主角背包.物件89[4].屬性參數 += 數量; break;
                    case 90: 主角背包.物件90[4].屬性參數 += 數量; break;
                    case 91: 主角背包.物件91[4].屬性參數 += 數量; break;
                    case 92: 主角背包.物件92[4].屬性參數 += 數量; break;
                    case 93: 主角背包.物件93[4].屬性參數 += 數量; break;
                    case 94: 主角背包.物件94[4].屬性參數 += 數量; break;
                    case 95: 主角背包.物件95[4].屬性參數 += 數量; break;
                    case 96: 主角背包.物件96[4].屬性參數 += 數量; break;
                    case 97: 主角背包.物件97[4].屬性參數 += 數量; break;
                    case 98: 主角背包.物件98[4].屬性參數 += 數量; break;
                    case 99: 主角背包.物件99[4].屬性參數 += 數量; break;
                }
            }
            else
            {
                switch (公共Y)
                {
                    case 100: 主角背包.販賣物00[4].屬性參數 += 數量; break;
                    case 101: 主角背包.販賣物01[4].屬性參數 += 數量; break;
                    case 102: 主角背包.販賣物02[4].屬性參數 += 數量; break;
                    case 103: 主角背包.販賣物03[4].屬性參數 += 數量; break;
                    case 104: 主角背包.販賣物04[4].屬性參數 += 數量; break;
                    case 105: 主角背包.販賣物05[4].屬性參數 += 數量; break;
                    case 106: 主角背包.販賣物06[4].屬性參數 += 數量; break;
                    case 107: 主角背包.販賣物07[4].屬性參數 += 數量; break;
                    case 108: 主角背包.販賣物08[4].屬性參數 += 數量; break;
                    case 109: 主角背包.販賣物09[4].屬性參數 += 數量; break;
                    case 110: 主角背包.販賣物10[4].屬性參數 += 數量; break;
                    case 111: 主角背包.販賣物11[4].屬性參數 += 數量; break;
                    case 112: 主角背包.販賣物12[4].屬性參數 += 數量; break;
                    case 113: 主角背包.販賣物13[4].屬性參數 += 數量; break;
                    case 114: 主角背包.販賣物14[4].屬性參數 += 數量; break;
                    case 115: 主角背包.販賣物15[4].屬性參數 += 數量; break;
                    case 116: 主角背包.販賣物16[4].屬性參數 += 數量; break;
                    case 117: 主角背包.販賣物17[4].屬性參數 += 數量; break;
                    case 118: 主角背包.販賣物18[4].屬性參數 += 數量; break;
                    case 119: 主角背包.販賣物19[4].屬性參數 += 數量; break;
                    case 120: 主角背包.販賣物20[4].屬性參數 += 數量; break;
                    case 121: 主角背包.販賣物21[4].屬性參數 += 數量; break;
                    case 122: 主角背包.販賣物22[4].屬性參數 += 數量; break;
                    case 123: 主角背包.販賣物23[4].屬性參數 += 數量; break;
                    case 124: 主角背包.販賣物24[4].屬性參數 += 數量; break;
                    case 125: 主角背包.販賣物25[4].屬性參數 += 數量; break;
                    case 126: 主角背包.販賣物26[4].屬性參數 += 數量; break;
                    case 127: 主角背包.販賣物27[4].屬性參數 += 數量; break;
                    case 128: 主角背包.販賣物28[4].屬性參數 += 數量; break;
                    case 129: 主角背包.販賣物29[4].屬性參數 += 數量; break;
                    case 130: 主角背包.販賣物30[4].屬性參數 += 數量; break;
                    case 131: 主角背包.販賣物31[4].屬性參數 += 數量; break;
                    case 132: 主角背包.販賣物32[4].屬性參數 += 數量; break;
                    case 133: 主角背包.販賣物33[4].屬性參數 += 數量; break;
                    case 134: 主角背包.販賣物34[4].屬性參數 += 數量; break;
                    case 135: 主角背包.販賣物35[4].屬性參數 += 數量; break;
                    case 136: 主角背包.販賣物36[4].屬性參數 += 數量; break;
                    case 137: 主角背包.販賣物37[4].屬性參數 += 數量; break;
                    case 138: 主角背包.販賣物38[4].屬性參數 += 數量; break;
                    case 139: 主角背包.販賣物39[4].屬性參數 += 數量; break;
                    case 140: 主角背包.販賣物40[4].屬性參數 += 數量; break;
                    case 141: 主角背包.販賣物41[4].屬性參數 += 數量; break;
                    case 142: 主角背包.販賣物42[4].屬性參數 += 數量; break;
                    case 143: 主角背包.販賣物43[4].屬性參數 += 數量; break;
                    case 144: 主角背包.販賣物44[4].屬性參數 += 數量; break;
                    case 145: 主角背包.販賣物45[4].屬性參數 += 數量; break;
                    case 146: 主角背包.販賣物46[4].屬性參數 += 數量; break;
                    case 147: 主角背包.販賣物47[4].屬性參數 += 數量; break;
                    case 148: 主角背包.販賣物48[4].屬性參數 += 數量; break;
                    case 149: 主角背包.販賣物49[4].屬性參數 += 數量; break;
                }
            }
        }
        else//NPC區域
        {
            if (公共Y < 100) //背包 NPC區域
            {
                switch (公共Y)
                {
                    case 0: 商人.商品00[4].屬性參數 += 數量; break;
                    case 1: 商人.商品01[4].屬性參數 += 數量; break;
                    case 2: 商人.商品02[4].屬性參數 += 數量; break;
                    case 3: 商人.商品03[4].屬性參數 += 數量; break;
                    case 4: 商人.商品04[4].屬性參數 += 數量; break;
                    case 5: 商人.商品05[4].屬性參數 += 數量; break;
                    case 6: 商人.商品06[4].屬性參數 += 數量; break;
                    case 7: 商人.商品07[4].屬性參數 += 數量; break;
                    case 8: 商人.商品08[4].屬性參數 += 數量; break;
                    case 9: 商人.商品09[4].屬性參數 += 數量; break;
                    case 10: 商人.商品10[4].屬性參數 += 數量; break;
                    case 11: 商人.商品11[4].屬性參數 += 數量; break;
                    case 12: 商人.商品12[4].屬性參數 += 數量; break;
                    case 13: 商人.商品13[4].屬性參數 += 數量; break;
                    case 14: 商人.商品14[4].屬性參數 += 數量; break;
                    case 15: 商人.商品15[4].屬性參數 += 數量; break;
                    case 16: 商人.商品16[4].屬性參數 += 數量; break;
                    case 17: 商人.商品17[4].屬性參數 += 數量; break;
                    case 18: 商人.商品18[4].屬性參數 += 數量; break;
                    case 19: 商人.商品19[4].屬性參數 += 數量; break;
                    case 20: 商人.商品20[4].屬性參數 += 數量; break;
                    case 21: 商人.商品21[4].屬性參數 += 數量; break;
                    case 22: 商人.商品22[4].屬性參數 += 數量; break;
                    case 23: 商人.商品23[4].屬性參數 += 數量; break;
                    case 24: 商人.商品24[4].屬性參數 += 數量; break;
                    case 25: 商人.商品25[4].屬性參數 += 數量; break;
                    case 26: 商人.商品26[4].屬性參數 += 數量; break;
                    case 27: 商人.商品27[4].屬性參數 += 數量; break;
                    case 28: 商人.商品28[4].屬性參數 += 數量; break;
                    case 29: 商人.商品29[4].屬性參數 += 數量; break;
                    case 30: 商人.商品30[4].屬性參數 += 數量; break;
                    case 31: 商人.商品31[4].屬性參數 += 數量; break;
                    case 32: 商人.商品32[4].屬性參數 += 數量; break;
                    case 33: 商人.商品33[4].屬性參數 += 數量; break;
                    case 34: 商人.商品34[4].屬性參數 += 數量; break;
                    case 35: 商人.商品35[4].屬性參數 += 數量; break;
                    case 36: 商人.商品36[4].屬性參數 += 數量; break;
                    case 37: 商人.商品37[4].屬性參數 += 數量; break;
                    case 38: 商人.商品38[4].屬性參數 += 數量; break;
                    case 39: 商人.商品39[4].屬性參數 += 數量; break;
                    case 40: 商人.商品40[4].屬性參數 += 數量; break;
                    case 41: 商人.商品41[4].屬性參數 += 數量; break;
                    case 42: 商人.商品42[4].屬性參數 += 數量; break;
                    case 43: 商人.商品43[4].屬性參數 += 數量; break;
                    case 44: 商人.商品44[4].屬性參數 += 數量; break;
                    case 45: 商人.商品45[4].屬性參數 += 數量; break;
                    case 46: 商人.商品46[4].屬性參數 += 數量; break;
                    case 47: 商人.商品47[4].屬性參數 += 數量; break;
                    case 48: 商人.商品48[4].屬性參數 += 數量; break;
                    case 49: 商人.商品49[4].屬性參數 += 數量; break;
                    case 50: 商人.商品50[4].屬性參數 += 數量; break;
                    case 51: 商人.商品51[4].屬性參數 += 數量; break;
                    case 52: 商人.商品52[4].屬性參數 += 數量; break;
                    case 53: 商人.商品53[4].屬性參數 += 數量; break;
                    case 54: 商人.商品54[4].屬性參數 += 數量; break;
                    case 55: 商人.商品55[4].屬性參數 += 數量; break;
                    case 56: 商人.商品56[4].屬性參數 += 數量; break;
                    case 57: 商人.商品57[4].屬性參數 += 數量; break;
                    case 58: 商人.商品58[4].屬性參數 += 數量; break;
                    case 59: 商人.商品59[4].屬性參數 += 數量; break;
                    case 60: 商人.商品60[4].屬性參數 += 數量; break;
                    case 61: 商人.商品61[4].屬性參數 += 數量; break;
                    case 62: 商人.商品62[4].屬性參數 += 數量; break;
                    case 63: 商人.商品63[4].屬性參數 += 數量; break;
                    case 64: 商人.商品64[4].屬性參數 += 數量; break;
                    case 65: 商人.商品65[4].屬性參數 += 數量; break;
                    case 66: 商人.商品66[4].屬性參數 += 數量; break;
                    case 67: 商人.商品67[4].屬性參數 += 數量; break;
                    case 68: 商人.商品68[4].屬性參數 += 數量; break;
                    case 69: 商人.商品69[4].屬性參數 += 數量; break;
                    case 70: 商人.商品70[4].屬性參數 += 數量; break;
                    case 71: 商人.商品71[4].屬性參數 += 數量; break;
                    case 72: 商人.商品72[4].屬性參數 += 數量; break;
                    case 73: 商人.商品73[4].屬性參數 += 數量; break;
                    case 74: 商人.商品74[4].屬性參數 += 數量; break;
                    case 75: 商人.商品75[4].屬性參數 += 數量; break;
                    case 76: 商人.商品76[4].屬性參數 += 數量; break;
                    case 77: 商人.商品77[4].屬性參數 += 數量; break;
                    case 78: 商人.商品78[4].屬性參數 += 數量; break;
                    case 79: 商人.商品79[4].屬性參數 += 數量; break;
                    case 80: 商人.商品80[4].屬性參數 += 數量; break;
                    case 81: 商人.商品81[4].屬性參數 += 數量; break;
                    case 82: 商人.商品82[4].屬性參數 += 數量; break;
                    case 83: 商人.商品83[4].屬性參數 += 數量; break;
                    case 84: 商人.商品84[4].屬性參數 += 數量; break;
                    case 85: 商人.商品85[4].屬性參數 += 數量; break;
                    case 86: 商人.商品86[4].屬性參數 += 數量; break;
                    case 87: 商人.商品87[4].屬性參數 += 數量; break;
                    case 88: 商人.商品88[4].屬性參數 += 數量; break;
                    case 89: 商人.商品89[4].屬性參數 += 數量; break;
                    case 90: 商人.商品90[4].屬性參數 += 數量; break;
                    case 91: 商人.商品91[4].屬性參數 += 數量; break;
                    case 92: 商人.商品92[4].屬性參數 += 數量; break;
                    case 93: 商人.商品93[4].屬性參數 += 數量; break;
                    case 94: 商人.商品94[4].屬性參數 += 數量; break;
                    case 95: 商人.商品95[4].屬性參數 += 數量; break;
                    case 96: 商人.商品96[4].屬性參數 += 數量; break;
                    case 97: 商人.商品97[4].屬性參數 += 數量; break;
                    case 98: 商人.商品98[4].屬性參數 += 數量; break;
                    case 99: 商人.商品99[4].屬性參數 += 數量; break;
                }
            }
            else
            {
                switch (公共Y)
                {
                    case 100: 商人.準備賣出00[4].屬性參數 += 數量; break;
                    case 101: 商人.準備賣出01[4].屬性參數 += 數量; break;
                    case 102: 商人.準備賣出02[4].屬性參數 += 數量; break;
                    case 103: 商人.準備賣出03[4].屬性參數 += 數量; break;
                    case 104: 商人.準備賣出04[4].屬性參數 += 數量; break;
                    case 105: 商人.準備賣出05[4].屬性參數 += 數量; break;
                    case 106: 商人.準備賣出06[4].屬性參數 += 數量; break;
                    case 107: 商人.準備賣出07[4].屬性參數 += 數量; break;
                    case 108: 商人.準備賣出08[4].屬性參數 += 數量; break;
                    case 109: 商人.準備賣出09[4].屬性參數 += 數量; break;
                    case 110: 商人.準備賣出10[4].屬性參數 += 數量; break;
                    case 111: 商人.準備賣出11[4].屬性參數 += 數量; break;
                    case 112: 商人.準備賣出12[4].屬性參數 += 數量; break;
                    case 113: 商人.準備賣出13[4].屬性參數 += 數量; break;
                    case 114: 商人.準備賣出14[4].屬性參數 += 數量; break;
                    case 115: 商人.準備賣出15[4].屬性參數 += 數量; break;
                    case 116: 商人.準備賣出16[4].屬性參數 += 數量; break;
                    case 117: 商人.準備賣出17[4].屬性參數 += 數量; break;
                    case 118: 商人.準備賣出18[4].屬性參數 += 數量; break;
                    case 119: 商人.準備賣出19[4].屬性參數 += 數量; break;
                    case 120: 商人.準備賣出20[4].屬性參數 += 數量; break;
                    case 121: 商人.準備賣出21[4].屬性參數 += 數量; break;
                    case 122: 商人.準備賣出22[4].屬性參數 += 數量; break;
                    case 123: 商人.準備賣出23[4].屬性參數 += 數量; break;
                    case 124: 商人.準備賣出24[4].屬性參數 += 數量; break;
                    case 125: 商人.準備賣出25[4].屬性參數 += 數量; break;
                    case 126: 商人.準備賣出26[4].屬性參數 += 數量; break;
                    case 127: 商人.準備賣出27[4].屬性參數 += 數量; break;
                    case 128: 商人.準備賣出28[4].屬性參數 += 數量; break;
                    case 129: 商人.準備賣出29[4].屬性參數 += 數量; break;
                    case 130: 商人.準備賣出30[4].屬性參數 += 數量; break;
                    case 131: 商人.準備賣出31[4].屬性參數 += 數量; break;
                    case 132: 商人.準備賣出32[4].屬性參數 += 數量; break;
                    case 133: 商人.準備賣出33[4].屬性參數 += 數量; break;
                    case 134: 商人.準備賣出34[4].屬性參數 += 數量; break;
                    case 135: 商人.準備賣出35[4].屬性參數 += 數量; break;
                    case 136: 商人.準備賣出36[4].屬性參數 += 數量; break;
                    case 137: 商人.準備賣出37[4].屬性參數 += 數量; break;
                    case 138: 商人.準備賣出38[4].屬性參數 += 數量; break;
                    case 139: 商人.準備賣出39[4].屬性參數 += 數量; break;
                    case 140: 商人.準備賣出40[4].屬性參數 += 數量; break;
                    case 141: 商人.準備賣出41[4].屬性參數 += 數量; break;
                    case 142: 商人.準備賣出42[4].屬性參數 += 數量; break;
                    case 143: 商人.準備賣出43[4].屬性參數 += 數量; break;
                    case 144: 商人.準備賣出44[4].屬性參數 += 數量; break;
                    case 145: 商人.準備賣出45[4].屬性參數 += 數量; break;
                    case 146: 商人.準備賣出46[4].屬性參數 += 數量; break;
                    case 147: 商人.準備賣出47[4].屬性參數 += 數量; break;
                    case 148: 商人.準備賣出48[4].屬性參數 += 數量; break;
                    case 149: 商人.準備賣出49[4].屬性參數 += 數量; break;
                }
            }
        }
    }

    public void 物件X減數量() 
    {
        if (公共記分板1.商店是否玩家)      //玩家
        {
            if (公共Y < 100) //背包
            {
                switch (公共X)
                {
                    case 0: 主角背包.物件00[4].屬性參數 -= 數量; break;
                    case 1: 主角背包.物件01[4].屬性參數 -= 數量; break;
                    case 2: 主角背包.物件02[4].屬性參數 -= 數量; break;
                    case 3: 主角背包.物件03[4].屬性參數 -= 數量; break;
                    case 4: 主角背包.物件04[4].屬性參數 -= 數量; break;
                    case 5: 主角背包.物件05[4].屬性參數 -= 數量; break;
                    case 6: 主角背包.物件06[4].屬性參數 -= 數量; break;
                    case 7: 主角背包.物件07[4].屬性參數 -= 數量; break;
                    case 8: 主角背包.物件08[4].屬性參數 -= 數量; break;
                    case 9: 主角背包.物件09[4].屬性參數 -= 數量; break;
                    case 10: 主角背包.物件10[4].屬性參數 -= 數量; break;
                    case 11: 主角背包.物件11[4].屬性參數 -= 數量; break;
                    case 12: 主角背包.物件12[4].屬性參數 -= 數量; break;
                    case 13: 主角背包.物件13[4].屬性參數 -= 數量; break;
                    case 14: 主角背包.物件14[4].屬性參數 -= 數量; break;
                    case 15: 主角背包.物件15[4].屬性參數 -= 數量; break;
                    case 16: 主角背包.物件16[4].屬性參數 -= 數量; break;
                    case 17: 主角背包.物件17[4].屬性參數 -= 數量; break;
                    case 18: 主角背包.物件18[4].屬性參數 -= 數量; break;
                    case 19: 主角背包.物件19[4].屬性參數 -= 數量; break;
                    case 20: 主角背包.物件20[4].屬性參數 -= 數量; break;
                    case 21: 主角背包.物件21[4].屬性參數 -= 數量; break;
                    case 22: 主角背包.物件22[4].屬性參數 -= 數量; break;
                    case 23: 主角背包.物件23[4].屬性參數 -= 數量; break;
                    case 24: 主角背包.物件24[4].屬性參數 -= 數量; break;
                    case 25: 主角背包.物件25[4].屬性參數 -= 數量; break;
                    case 26: 主角背包.物件26[4].屬性參數 -= 數量; break;
                    case 27: 主角背包.物件27[4].屬性參數 -= 數量; break;
                    case 28: 主角背包.物件28[4].屬性參數 -= 數量; break;
                    case 29: 主角背包.物件29[4].屬性參數 -= 數量; break;
                    case 30: 主角背包.物件30[4].屬性參數 -= 數量; break;
                    case 31: 主角背包.物件31[4].屬性參數 -= 數量; break;
                    case 32: 主角背包.物件32[4].屬性參數 -= 數量; break;
                    case 33: 主角背包.物件33[4].屬性參數 -= 數量; break;
                    case 34: 主角背包.物件34[4].屬性參數 -= 數量; break;
                    case 35: 主角背包.物件35[4].屬性參數 -= 數量; break;
                    case 36: 主角背包.物件36[4].屬性參數 -= 數量; break;
                    case 37: 主角背包.物件37[4].屬性參數 -= 數量; break;
                    case 38: 主角背包.物件38[4].屬性參數 -= 數量; break;
                    case 39: 主角背包.物件39[4].屬性參數 -= 數量; break;
                    case 40: 主角背包.物件40[4].屬性參數 -= 數量; break;
                    case 41: 主角背包.物件41[4].屬性參數 -= 數量; break;
                    case 42: 主角背包.物件42[4].屬性參數 -= 數量; break;
                    case 43: 主角背包.物件43[4].屬性參數 -= 數量; break;
                    case 44: 主角背包.物件44[4].屬性參數 -= 數量; break;
                    case 45: 主角背包.物件45[4].屬性參數 -= 數量; break;
                    case 46: 主角背包.物件46[4].屬性參數 -= 數量; break;
                    case 47: 主角背包.物件47[4].屬性參數 -= 數量; break;
                    case 48: 主角背包.物件48[4].屬性參數 -= 數量; break;
                    case 49: 主角背包.物件49[4].屬性參數 -= 數量; break;
                    case 50: 主角背包.物件50[4].屬性參數 -= 數量; break;
                    case 51: 主角背包.物件51[4].屬性參數 -= 數量; break;
                    case 52: 主角背包.物件52[4].屬性參數 -= 數量; break;
                    case 53: 主角背包.物件53[4].屬性參數 -= 數量; break;
                    case 54: 主角背包.物件54[4].屬性參數 -= 數量; break;
                    case 55: 主角背包.物件55[4].屬性參數 -= 數量; break;
                    case 56: 主角背包.物件56[4].屬性參數 -= 數量; break;
                    case 57: 主角背包.物件57[4].屬性參數 -= 數量; break;
                    case 58: 主角背包.物件58[4].屬性參數 -= 數量; break;
                    case 59: 主角背包.物件59[4].屬性參數 -= 數量; break;
                    case 60: 主角背包.物件60[4].屬性參數 -= 數量; break;
                    case 61: 主角背包.物件61[4].屬性參數 -= 數量; break;
                    case 62: 主角背包.物件62[4].屬性參數 -= 數量; break;
                    case 63: 主角背包.物件63[4].屬性參數 -= 數量; break;
                    case 64: 主角背包.物件64[4].屬性參數 -= 數量; break;
                    case 65: 主角背包.物件65[4].屬性參數 -= 數量; break;
                    case 66: 主角背包.物件66[4].屬性參數 -= 數量; break;
                    case 67: 主角背包.物件67[4].屬性參數 -= 數量; break;
                    case 68: 主角背包.物件68[4].屬性參數 -= 數量; break;
                    case 69: 主角背包.物件69[4].屬性參數 -= 數量; break;
                    case 70: 主角背包.物件70[4].屬性參數 -= 數量; break;
                    case 71: 主角背包.物件71[4].屬性參數 -= 數量; break;
                    case 72: 主角背包.物件72[4].屬性參數 -= 數量; break;
                    case 73: 主角背包.物件73[4].屬性參數 -= 數量; break;
                    case 74: 主角背包.物件74[4].屬性參數 -= 數量; break;
                    case 75: 主角背包.物件75[4].屬性參數 -= 數量; break;
                    case 76: 主角背包.物件76[4].屬性參數 -= 數量; break;
                    case 77: 主角背包.物件77[4].屬性參數 -= 數量; break;
                    case 78: 主角背包.物件78[4].屬性參數 -= 數量; break;
                    case 79: 主角背包.物件79[4].屬性參數 -= 數量; break;
                    case 80: 主角背包.物件80[4].屬性參數 -= 數量; break;
                    case 81: 主角背包.物件81[4].屬性參數 -= 數量; break;
                    case 82: 主角背包.物件82[4].屬性參數 -= 數量; break;
                    case 83: 主角背包.物件83[4].屬性參數 -= 數量; break;
                    case 84: 主角背包.物件84[4].屬性參數 -= 數量; break;
                    case 85: 主角背包.物件85[4].屬性參數 -= 數量; break;
                    case 86: 主角背包.物件86[4].屬性參數 -= 數量; break;
                    case 87: 主角背包.物件87[4].屬性參數 -= 數量; break;
                    case 88: 主角背包.物件88[4].屬性參數 -= 數量; break;
                    case 89: 主角背包.物件89[4].屬性參數 -= 數量; break;
                    case 90: 主角背包.物件90[4].屬性參數 -= 數量; break;
                    case 91: 主角背包.物件91[4].屬性參數 -= 數量; break;
                    case 92: 主角背包.物件92[4].屬性參數 -= 數量; break;
                    case 93: 主角背包.物件93[4].屬性參數 -= 數量; break;
                    case 94: 主角背包.物件94[4].屬性參數 -= 數量; break;
                    case 95: 主角背包.物件95[4].屬性參數 -= 數量; break;
                    case 96: 主角背包.物件96[4].屬性參數 -= 數量; break;
                    case 97: 主角背包.物件97[4].屬性參數 -= 數量; break;
                    case 98: 主角背包.物件98[4].屬性參數 -= 數量; break;
                    case 99: 主角背包.物件99[4].屬性參數 -= 數量; break;
                }
            }
            else
            {
                switch (公共X)
                {
                    case 100: 主角背包.販賣物00[4].屬性參數 -= 數量; break;
                    case 101: 主角背包.販賣物01[4].屬性參數 -= 數量; break;
                    case 102: 主角背包.販賣物02[4].屬性參數 -= 數量; break;
                    case 103: 主角背包.販賣物03[4].屬性參數 -= 數量; break;
                    case 104: 主角背包.販賣物04[4].屬性參數 -= 數量; break;
                    case 105: 主角背包.販賣物05[4].屬性參數 -= 數量; break;
                    case 106: 主角背包.販賣物06[4].屬性參數 -= 數量; break;
                    case 107: 主角背包.販賣物07[4].屬性參數 -= 數量; break;
                    case 108: 主角背包.販賣物08[4].屬性參數 -= 數量; break;
                    case 109: 主角背包.販賣物09[4].屬性參數 -= 數量; break;
                    case 110: 主角背包.販賣物10[4].屬性參數 -= 數量; break;
                    case 111: 主角背包.販賣物11[4].屬性參數 -= 數量; break;
                    case 112: 主角背包.販賣物12[4].屬性參數 -= 數量; break;
                    case 113: 主角背包.販賣物13[4].屬性參數 -= 數量; break;
                    case 114: 主角背包.販賣物14[4].屬性參數 -= 數量; break;
                    case 115: 主角背包.販賣物15[4].屬性參數 -= 數量; break;
                    case 116: 主角背包.販賣物16[4].屬性參數 -= 數量; break;
                    case 117: 主角背包.販賣物17[4].屬性參數 -= 數量; break;
                    case 118: 主角背包.販賣物18[4].屬性參數 -= 數量; break;
                    case 119: 主角背包.販賣物19[4].屬性參數 -= 數量; break;
                    case 120: 主角背包.販賣物20[4].屬性參數 -= 數量; break;
                    case 121: 主角背包.販賣物21[4].屬性參數 -= 數量; break;
                    case 122: 主角背包.販賣物22[4].屬性參數 -= 數量; break;
                    case 123: 主角背包.販賣物23[4].屬性參數 -= 數量; break;
                    case 124: 主角背包.販賣物24[4].屬性參數 -= 數量; break;
                    case 125: 主角背包.販賣物25[4].屬性參數 -= 數量; break;
                    case 126: 主角背包.販賣物26[4].屬性參數 -= 數量; break;
                    case 127: 主角背包.販賣物27[4].屬性參數 -= 數量; break;
                    case 128: 主角背包.販賣物28[4].屬性參數 -= 數量; break;
                    case 129: 主角背包.販賣物29[4].屬性參數 -= 數量; break;
                    case 130: 主角背包.販賣物30[4].屬性參數 -= 數量; break;
                    case 131: 主角背包.販賣物31[4].屬性參數 -= 數量; break;
                    case 132: 主角背包.販賣物32[4].屬性參數 -= 數量; break;
                    case 133: 主角背包.販賣物33[4].屬性參數 -= 數量; break;
                    case 134: 主角背包.販賣物34[4].屬性參數 -= 數量; break;
                    case 135: 主角背包.販賣物35[4].屬性參數 -= 數量; break;
                    case 136: 主角背包.販賣物36[4].屬性參數 -= 數量; break;
                    case 137: 主角背包.販賣物37[4].屬性參數 -= 數量; break;
                    case 138: 主角背包.販賣物38[4].屬性參數 -= 數量; break;
                    case 139: 主角背包.販賣物39[4].屬性參數 -= 數量; break;
                    case 140: 主角背包.販賣物40[4].屬性參數 -= 數量; break;
                    case 141: 主角背包.販賣物41[4].屬性參數 -= 數量; break;
                    case 142: 主角背包.販賣物42[4].屬性參數 -= 數量; break;
                    case 143: 主角背包.販賣物43[4].屬性參數 -= 數量; break;
                    case 144: 主角背包.販賣物44[4].屬性參數 -= 數量; break;
                    case 145: 主角背包.販賣物45[4].屬性參數 -= 數量; break;
                    case 146: 主角背包.販賣物46[4].屬性參數 -= 數量; break;
                    case 147: 主角背包.販賣物47[4].屬性參數 -= 數量; break;
                    case 148: 主角背包.販賣物48[4].屬性參數 -= 數量; break;
                    case 149: 主角背包.販賣物49[4].屬性參數 -= 數量; break;
                }
            }
        }
        else//NPC區域
        {
            if (公共Y < 100) //背包  NPC區域
            {
                switch (公共X)
                {
                    case 0:  商人.商品00[4].屬性參數 -= 數量; break;
                    case 1:  商人.商品01[4].屬性參數 -= 數量; break;
                    case 2:  商人.商品02[4].屬性參數 -= 數量; break;
                    case 3:  商人.商品03[4].屬性參數 -= 數量; break;
                    case 4:  商人.商品04[4].屬性參數 -= 數量; break;
                    case 5:  商人.商品05[4].屬性參數 -= 數量; break;
                    case 6:  商人.商品06[4].屬性參數 -= 數量; break;
                    case 7:  商人.商品07[4].屬性參數 -= 數量; break;
                    case 8:  商人.商品08[4].屬性參數 -= 數量; break;
                    case 9:  商人.商品09[4].屬性參數 -= 數量; break;
                    case 10: 商人.商品10[4].屬性參數 -= 數量; break;
                    case 11: 商人.商品11[4].屬性參數 -= 數量; break;
                    case 12: 商人.商品12[4].屬性參數 -= 數量; break;
                    case 13: 商人.商品13[4].屬性參數 -= 數量; break;
                    case 14: 商人.商品14[4].屬性參數 -= 數量; break;
                    case 15: 商人.商品15[4].屬性參數 -= 數量; break;
                    case 16: 商人.商品16[4].屬性參數 -= 數量; break;
                    case 17: 商人.商品17[4].屬性參數 -= 數量; break;
                    case 18: 商人.商品18[4].屬性參數 -= 數量; break;
                    case 19: 商人.商品19[4].屬性參數 -= 數量; break;
                    case 20: 商人.商品20[4].屬性參數 -= 數量; break;
                    case 21: 商人.商品21[4].屬性參數 -= 數量; break;
                    case 22: 商人.商品22[4].屬性參數 -= 數量; break;
                    case 23: 商人.商品23[4].屬性參數 -= 數量; break;
                    case 24: 商人.商品24[4].屬性參數 -= 數量; break;
                    case 25: 商人.商品25[4].屬性參數 -= 數量; break;
                    case 26: 商人.商品26[4].屬性參數 -= 數量; break;
                    case 27: 商人.商品27[4].屬性參數 -= 數量; break;
                    case 28: 商人.商品28[4].屬性參數 -= 數量; break;
                    case 29: 商人.商品29[4].屬性參數 -= 數量; break;
                    case 30: 商人.商品30[4].屬性參數 -= 數量; break;
                    case 31: 商人.商品31[4].屬性參數 -= 數量; break;
                    case 32: 商人.商品32[4].屬性參數 -= 數量; break;
                    case 33: 商人.商品33[4].屬性參數 -= 數量; break;
                    case 34: 商人.商品34[4].屬性參數 -= 數量; break;
                    case 35: 商人.商品35[4].屬性參數 -= 數量; break;
                    case 36: 商人.商品36[4].屬性參數 -= 數量; break;
                    case 37: 商人.商品37[4].屬性參數 -= 數量; break;
                    case 38: 商人.商品38[4].屬性參數 -= 數量; break;
                    case 39: 商人.商品39[4].屬性參數 -= 數量; break;
                    case 40: 商人.商品40[4].屬性參數 -= 數量; break;
                    case 41: 商人.商品41[4].屬性參數 -= 數量; break;
                    case 42: 商人.商品42[4].屬性參數 -= 數量; break;
                    case 43: 商人.商品43[4].屬性參數 -= 數量; break;
                    case 44: 商人.商品44[4].屬性參數 -= 數量; break;
                    case 45: 商人.商品45[4].屬性參數 -= 數量; break;
                    case 46: 商人.商品46[4].屬性參數 -= 數量; break;
                    case 47: 商人.商品47[4].屬性參數 -= 數量; break;
                    case 48: 商人.商品48[4].屬性參數 -= 數量; break;
                    case 49: 商人.商品49[4].屬性參數 -= 數量; break;
                    case 50: 商人.商品50[4].屬性參數 -= 數量; break;
                    case 51: 商人.商品51[4].屬性參數 -= 數量; break;
                    case 52: 商人.商品52[4].屬性參數 -= 數量; break;
                    case 53: 商人.商品53[4].屬性參數 -= 數量; break;
                    case 54: 商人.商品54[4].屬性參數 -= 數量; break;
                    case 55: 商人.商品55[4].屬性參數 -= 數量; break;
                    case 56: 商人.商品56[4].屬性參數 -= 數量; break;
                    case 57: 商人.商品57[4].屬性參數 -= 數量; break;
                    case 58: 商人.商品58[4].屬性參數 -= 數量; break;
                    case 59: 商人.商品59[4].屬性參數 -= 數量; break;
                    case 60: 商人.商品60[4].屬性參數 -= 數量; break;
                    case 61: 商人.商品61[4].屬性參數 -= 數量; break;
                    case 62: 商人.商品62[4].屬性參數 -= 數量; break;
                    case 63: 商人.商品63[4].屬性參數 -= 數量; break;
                    case 64: 商人.商品64[4].屬性參數 -= 數量; break;
                    case 65: 商人.商品65[4].屬性參數 -= 數量; break;
                    case 66: 商人.商品66[4].屬性參數 -= 數量; break;
                    case 67: 商人.商品67[4].屬性參數 -= 數量; break;
                    case 68: 商人.商品68[4].屬性參數 -= 數量; break;
                    case 69: 商人.商品69[4].屬性參數 -= 數量; break;
                    case 70: 商人.商品70[4].屬性參數 -= 數量; break;
                    case 71: 商人.商品71[4].屬性參數 -= 數量; break;
                    case 72: 商人.商品72[4].屬性參數 -= 數量; break;
                    case 73: 商人.商品73[4].屬性參數 -= 數量; break;
                    case 74: 商人.商品74[4].屬性參數 -= 數量; break;
                    case 75: 商人.商品75[4].屬性參數 -= 數量; break;
                    case 76: 商人.商品76[4].屬性參數 -= 數量; break;
                    case 77: 商人.商品77[4].屬性參數 -= 數量; break;
                    case 78: 商人.商品78[4].屬性參數 -= 數量; break;
                    case 79: 商人.商品79[4].屬性參數 -= 數量; break;
                    case 80: 商人.商品80[4].屬性參數 -= 數量; break;
                    case 81: 商人.商品81[4].屬性參數 -= 數量; break;
                    case 82: 商人.商品82[4].屬性參數 -= 數量; break;
                    case 83: 商人.商品83[4].屬性參數 -= 數量; break;
                    case 84: 商人.商品84[4].屬性參數 -= 數量; break;
                    case 85: 商人.商品85[4].屬性參數 -= 數量; break;
                    case 86: 商人.商品86[4].屬性參數 -= 數量; break;
                    case 87: 商人.商品87[4].屬性參數 -= 數量; break;
                    case 88: 商人.商品88[4].屬性參數 -= 數量; break;
                    case 89: 商人.商品89[4].屬性參數 -= 數量; break;
                    case 90: 商人.商品90[4].屬性參數 -= 數量; break;
                    case 91: 商人.商品91[4].屬性參數 -= 數量; break;
                    case 92: 商人.商品92[4].屬性參數 -= 數量; break;
                    case 93: 商人.商品93[4].屬性參數 -= 數量; break;
                    case 94: 商人.商品94[4].屬性參數 -= 數量; break;
                    case 95: 商人.商品95[4].屬性參數 -= 數量; break;
                    case 96: 商人.商品96[4].屬性參數 -= 數量; break;
                    case 97: 商人.商品97[4].屬性參數 -= 數量; break;
                    case 98: 商人.商品98[4].屬性參數 -= 數量; break;
                    case 99: 商人.商品99[4].屬性參數 -= 數量; break;
                }
            }
            else
            {
                switch (公共X)
                {
                    case 100: 商人.準備賣出00[4].屬性參數 -= 數量; break;
                    case 101: 商人.準備賣出01[4].屬性參數 -= 數量; break;
                    case 102: 商人.準備賣出02[4].屬性參數 -= 數量; break;
                    case 103: 商人.準備賣出03[4].屬性參數 -= 數量; break;
                    case 104: 商人.準備賣出04[4].屬性參數 -= 數量; break;
                    case 105: 商人.準備賣出05[4].屬性參數 -= 數量; break;
                    case 106: 商人.準備賣出06[4].屬性參數 -= 數量; break;
                    case 107: 商人.準備賣出07[4].屬性參數 -= 數量; break;
                    case 108: 商人.準備賣出08[4].屬性參數 -= 數量; break;
                    case 109: 商人.準備賣出09[4].屬性參數 -= 數量; break;
                    case 110: 商人.準備賣出10[4].屬性參數 -= 數量; break;
                    case 111: 商人.準備賣出11[4].屬性參數 -= 數量; break;
                    case 112: 商人.準備賣出12[4].屬性參數 -= 數量; break;
                    case 113: 商人.準備賣出13[4].屬性參數 -= 數量; break;
                    case 114: 商人.準備賣出14[4].屬性參數 -= 數量; break;
                    case 115: 商人.準備賣出15[4].屬性參數 -= 數量; break;
                    case 116: 商人.準備賣出16[4].屬性參數 -= 數量; break;
                    case 117: 商人.準備賣出17[4].屬性參數 -= 數量; break;
                    case 118: 商人.準備賣出18[4].屬性參數 -= 數量; break;
                    case 119: 商人.準備賣出19[4].屬性參數 -= 數量; break;
                    case 120: 商人.準備賣出20[4].屬性參數 -= 數量; break;
                    case 121: 商人.準備賣出21[4].屬性參數 -= 數量; break;
                    case 122: 商人.準備賣出22[4].屬性參數 -= 數量; break;
                    case 123: 商人.準備賣出23[4].屬性參數 -= 數量; break;
                    case 124: 商人.準備賣出24[4].屬性參數 -= 數量; break;
                    case 125: 商人.準備賣出25[4].屬性參數 -= 數量; break;
                    case 126: 商人.準備賣出26[4].屬性參數 -= 數量; break;
                    case 127: 商人.準備賣出27[4].屬性參數 -= 數量; break;
                    case 128: 商人.準備賣出28[4].屬性參數 -= 數量; break;
                    case 129: 商人.準備賣出29[4].屬性參數 -= 數量; break;
                    case 130: 商人.準備賣出30[4].屬性參數 -= 數量; break;
                    case 131: 商人.準備賣出31[4].屬性參數 -= 數量; break;
                    case 132: 商人.準備賣出32[4].屬性參數 -= 數量; break;
                    case 133: 商人.準備賣出33[4].屬性參數 -= 數量; break;
                    case 134: 商人.準備賣出34[4].屬性參數 -= 數量; break;
                    case 135: 商人.準備賣出35[4].屬性參數 -= 數量; break;
                    case 136: 商人.準備賣出36[4].屬性參數 -= 數量; break;
                    case 137: 商人.準備賣出37[4].屬性參數 -= 數量; break;
                    case 138: 商人.準備賣出38[4].屬性參數 -= 數量; break;
                    case 139: 商人.準備賣出39[4].屬性參數 -= 數量; break;
                    case 140: 商人.準備賣出40[4].屬性參數 -= 數量; break;
                    case 141: 商人.準備賣出41[4].屬性參數 -= 數量; break;
                    case 142: 商人.準備賣出42[4].屬性參數 -= 數量; break;
                    case 143: 商人.準備賣出43[4].屬性參數 -= 數量; break;
                    case 144: 商人.準備賣出44[4].屬性參數 -= 數量; break;
                    case 145: 商人.準備賣出45[4].屬性參數 -= 數量; break;
                    case 146: 商人.準備賣出46[4].屬性參數 -= 數量; break;
                    case 147: 商人.準備賣出47[4].屬性參數 -= 數量; break;
                    case 148: 商人.準備賣出48[4].屬性參數 -= 數量; break;
                    case 149: 商人.準備賣出49[4].屬性參數 -= 數量; break;
                }
            }
        }
    }
    //檢查  如果歸零就切bool跟Clear
    public void 確認物品是否數量歸零()
    {
        if (數量 == 拉條.maxValue)
        {
            主角背包.物件存在列表[公共記分板1.商店記分X] = false;
            switch (公共記分板1.商店記分X)//把X砍掉
            {
                case 0: 主角背包.物件00.Clear(); break;
                case 1: 主角背包.物件01.Clear(); break;
                case 2: 主角背包.物件02.Clear(); break;
                case 3: 主角背包.物件03.Clear(); break;
                case 4: 主角背包.物件04.Clear(); break;
                case 5: 主角背包.物件05.Clear(); break;
                case 6: 主角背包.物件06.Clear(); break;
                case 7: 主角背包.物件07.Clear(); break;
                case 8: 主角背包.物件08.Clear(); break;
                case 9: 主角背包.物件09.Clear(); break;
                case 10: 主角背包.物件10.Clear(); break;
                case 11: 主角背包.物件11.Clear(); break;
                case 12: 主角背包.物件12.Clear(); break;
                case 13: 主角背包.物件13.Clear(); break;
                case 14: 主角背包.物件14.Clear(); break;
                case 15: 主角背包.物件15.Clear(); break;
                case 16: 主角背包.物件16.Clear(); break;
                case 17: 主角背包.物件17.Clear(); break;
                case 18: 主角背包.物件18.Clear(); break;
                case 19: 主角背包.物件19.Clear(); break;
                case 20: 主角背包.物件20.Clear(); break;
                case 21: 主角背包.物件21.Clear(); break;
                case 22: 主角背包.物件22.Clear(); break;
                case 23: 主角背包.物件23.Clear(); break;
                case 24: 主角背包.物件24.Clear(); break;
                case 25: 主角背包.物件25.Clear(); break;
                case 26: 主角背包.物件26.Clear(); break;
                case 27: 主角背包.物件27.Clear(); break;
                case 28: 主角背包.物件28.Clear(); break;
                case 29: 主角背包.物件29.Clear(); break;
                case 30: 主角背包.物件30.Clear(); break;
                case 31: 主角背包.物件31.Clear(); break;
                case 32: 主角背包.物件32.Clear(); break;
                case 33: 主角背包.物件33.Clear(); break;
                case 34: 主角背包.物件34.Clear(); break;
                case 35: 主角背包.物件35.Clear(); break;
                case 36: 主角背包.物件36.Clear(); break;
                case 37: 主角背包.物件37.Clear(); break;
                case 38: 主角背包.物件38.Clear(); break;
                case 39: 主角背包.物件39.Clear(); break;
                case 40: 主角背包.物件40.Clear(); break;
                case 41: 主角背包.物件41.Clear(); break;
                case 42: 主角背包.物件42.Clear(); break;
                case 43: 主角背包.物件43.Clear(); break;
                case 44: 主角背包.物件44.Clear(); break;
                case 45: 主角背包.物件45.Clear(); break;
                case 46: 主角背包.物件46.Clear(); break;
                case 47: 主角背包.物件47.Clear(); break;
                case 48: 主角背包.物件48.Clear(); break;
                case 49: 主角背包.物件49.Clear(); break;
                case 50: 主角背包.物件50.Clear(); break;
                case 51: 主角背包.物件51.Clear(); break;
                case 52: 主角背包.物件52.Clear(); break;
                case 53: 主角背包.物件53.Clear(); break;
                case 54: 主角背包.物件54.Clear(); break;
                case 55: 主角背包.物件55.Clear(); break;
                case 56: 主角背包.物件56.Clear(); break;
                case 57: 主角背包.物件57.Clear(); break;
                case 58: 主角背包.物件58.Clear(); break;
                case 59: 主角背包.物件59.Clear(); break;
                case 60: 主角背包.物件60.Clear(); break;
                case 61: 主角背包.物件61.Clear(); break;
                case 62: 主角背包.物件62.Clear(); break;
                case 63: 主角背包.物件63.Clear(); break;
                case 64: 主角背包.物件64.Clear(); break;
                case 65: 主角背包.物件65.Clear(); break;
                case 66: 主角背包.物件66.Clear(); break;
                case 67: 主角背包.物件67.Clear(); break;
                case 68: 主角背包.物件68.Clear(); break;
                case 69: 主角背包.物件69.Clear(); break;
                case 70: 主角背包.物件70.Clear(); break;
                case 71: 主角背包.物件71.Clear(); break;
                case 72: 主角背包.物件72.Clear(); break;
                case 73: 主角背包.物件73.Clear(); break;
                case 74: 主角背包.物件74.Clear(); break;
                case 75: 主角背包.物件75.Clear(); break;
                case 76: 主角背包.物件76.Clear(); break;
                case 77: 主角背包.物件77.Clear(); break;
                case 78: 主角背包.物件78.Clear(); break;
                case 79: 主角背包.物件79.Clear(); break;
                case 80: 主角背包.物件80.Clear(); break;
                case 81: 主角背包.物件81.Clear(); break;
                case 82: 主角背包.物件82.Clear(); break;
                case 83: 主角背包.物件83.Clear(); break;
                case 84: 主角背包.物件84.Clear(); break;
                case 85: 主角背包.物件85.Clear(); break;
                case 86: 主角背包.物件86.Clear(); break;
                case 87: 主角背包.物件87.Clear(); break;
                case 88: 主角背包.物件88.Clear(); break;
                case 89: 主角背包.物件89.Clear(); break;
                case 90: 主角背包.物件90.Clear(); break;
                case 91: 主角背包.物件91.Clear(); break;
                case 92: 主角背包.物件92.Clear(); break;
                case 93: 主角背包.物件93.Clear(); break;
                case 94: 主角背包.物件94.Clear(); break;
                case 95: 主角背包.物件95.Clear(); break;
                case 96: 主角背包.物件96.Clear(); break;
                case 97: 主角背包.物件97.Clear(); break;
                case 98: 主角背包.物件98.Clear(); break;
                case 99: 主角背包.物件99.Clear(); break;
            }
        }
    }
    public void 確認販賣物是否數量歸零()
    {
        if (數量 == 拉條.maxValue)
        {
            主角背包.販賣物存在列表[公共記分板1.商店記分X] = false;
            switch (公共記分板1.商店記分X)//把X砍掉
            {
                case 0: 主角背包.販賣物00.Clear(); break;
                case 1: 主角背包.販賣物01.Clear(); break;
                case 2: 主角背包.販賣物02.Clear(); break;
                case 3: 主角背包.販賣物03.Clear(); break;
                case 4: 主角背包.販賣物04.Clear(); break;
                case 5: 主角背包.販賣物05.Clear(); break;
                case 6: 主角背包.販賣物06.Clear(); break;
                case 7: 主角背包.販賣物07.Clear(); break;
                case 8: 主角背包.販賣物08.Clear(); break;
                case 9: 主角背包.販賣物09.Clear(); break;
                case 10: 主角背包.販賣物10.Clear(); break;
                case 11: 主角背包.販賣物11.Clear(); break;
                case 12: 主角背包.販賣物12.Clear(); break;
                case 13: 主角背包.販賣物13.Clear(); break;
                case 14: 主角背包.販賣物14.Clear(); break;
                case 15: 主角背包.販賣物15.Clear(); break;
                case 16: 主角背包.販賣物16.Clear(); break;
                case 17: 主角背包.販賣物17.Clear(); break;
                case 18: 主角背包.販賣物18.Clear(); break;
                case 19: 主角背包.販賣物19.Clear(); break;
                case 20: 主角背包.販賣物20.Clear(); break;
                case 21: 主角背包.販賣物21.Clear(); break;
                case 22: 主角背包.販賣物22.Clear(); break;
                case 23: 主角背包.販賣物23.Clear(); break;
                case 24: 主角背包.販賣物24.Clear(); break;
                case 25: 主角背包.販賣物25.Clear(); break;
                case 26: 主角背包.販賣物26.Clear(); break;
                case 27: 主角背包.販賣物27.Clear(); break;
                case 28: 主角背包.販賣物28.Clear(); break;
                case 29: 主角背包.販賣物29.Clear(); break;
                case 30: 主角背包.販賣物30.Clear(); break;
                case 31: 主角背包.販賣物31.Clear(); break;
                case 32: 主角背包.販賣物32.Clear(); break;
                case 33: 主角背包.販賣物33.Clear(); break;
                case 34: 主角背包.販賣物34.Clear(); break;
                case 35: 主角背包.販賣物35.Clear(); break;
                case 36: 主角背包.販賣物36.Clear(); break;
                case 37: 主角背包.販賣物37.Clear(); break;
                case 38: 主角背包.販賣物38.Clear(); break;
                case 39: 主角背包.販賣物39.Clear(); break;
                case 40: 主角背包.販賣物40.Clear(); break;
                case 41: 主角背包.販賣物41.Clear(); break;
                case 42: 主角背包.販賣物42.Clear(); break;
                case 43: 主角背包.販賣物43.Clear(); break;
                case 44: 主角背包.販賣物44.Clear(); break;
                case 45: 主角背包.販賣物45.Clear(); break;
                case 46: 主角背包.販賣物46.Clear(); break;
                case 47: 主角背包.販賣物47.Clear(); break;
                case 48: 主角背包.販賣物48.Clear(); break;
                case 49: 主角背包.販賣物49.Clear(); break;
            }
        }
    }

    public void 從販賣疊加物品至背包()
    {
        switch (公共1)
        {
            case 0: 主角背包.物件00[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 1: 主角背包.物件01[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 2: 主角背包.物件02[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 3: 主角背包.物件03[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 4: 主角背包.物件04[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 5: 主角背包.物件05[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 6: 主角背包.物件06[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 7: 主角背包.物件07[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 8: 主角背包.物件08[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 9: 主角背包.物件09[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 10: 主角背包.物件10[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 11: 主角背包.物件11[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 12: 主角背包.物件12[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 13: 主角背包.物件13[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 14: 主角背包.物件14[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 15: 主角背包.物件15[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 16: 主角背包.物件16[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 17: 主角背包.物件17[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 18: 主角背包.物件18[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 19: 主角背包.物件19[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 20: 主角背包.物件20[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 21: 主角背包.物件21[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 22: 主角背包.物件22[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 23: 主角背包.物件23[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 24: 主角背包.物件24[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 25: 主角背包.物件25[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 26: 主角背包.物件26[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 27: 主角背包.物件27[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 28: 主角背包.物件28[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 29: 主角背包.物件29[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 30: 主角背包.物件30[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 31: 主角背包.物件31[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 32: 主角背包.物件32[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 33: 主角背包.物件33[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 34: 主角背包.物件34[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 35: 主角背包.物件35[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 36: 主角背包.物件36[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 37: 主角背包.物件37[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 38: 主角背包.物件38[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 39: 主角背包.物件39[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 40: 主角背包.物件40[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 41: 主角背包.物件41[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 42: 主角背包.物件42[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 43: 主角背包.物件43[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 44: 主角背包.物件44[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 45: 主角背包.物件45[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 46: 主角背包.物件46[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 47: 主角背包.物件47[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 48: 主角背包.物件48[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 49: 主角背包.物件49[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 50: 主角背包.物件50[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 51: 主角背包.物件51[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 52: 主角背包.物件52[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 53: 主角背包.物件53[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 54: 主角背包.物件54[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 55: 主角背包.物件55[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 56: 主角背包.物件56[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 57: 主角背包.物件57[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 58: 主角背包.物件58[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 59: 主角背包.物件59[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 60: 主角背包.物件60[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 61: 主角背包.物件61[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 62: 主角背包.物件62[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 63: 主角背包.物件63[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 64: 主角背包.物件64[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 65: 主角背包.物件65[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 66: 主角背包.物件66[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 67: 主角背包.物件67[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 68: 主角背包.物件68[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 69: 主角背包.物件69[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 70: 主角背包.物件70[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 71: 主角背包.物件71[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 72: 主角背包.物件72[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 73: 主角背包.物件73[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 74: 主角背包.物件74[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 75: 主角背包.物件75[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 76: 主角背包.物件76[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 77: 主角背包.物件77[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 78: 主角背包.物件78[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 79: 主角背包.物件79[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 80: 主角背包.物件80[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 81: 主角背包.物件81[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 82: 主角背包.物件82[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 83: 主角背包.物件83[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 84: 主角背包.物件84[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 85: 主角背包.物件85[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 86: 主角背包.物件86[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 87: 主角背包.物件87[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 88: 主角背包.物件88[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 89: 主角背包.物件89[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 90: 主角背包.物件90[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 91: 主角背包.物件91[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 92: 主角背包.物件92[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 93: 主角背包.物件93[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 94: 主角背包.物件94[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 95: 主角背包.物件95[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 96: 主角背包.物件96[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 97: 主角背包.物件97[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 98: 主角背包.物件98[4].屬性參數 += 公共物件03[4].屬性參數; break;
            case 99: 主角背包.物件99[4].屬性參數 += 公共物件03[4].屬性參數; break;
        }
        主角背包.販賣物存在列表[公共X - 100] = false;
        switch (公共X)
        {
            case 100: 主角背包.販賣物00.Clear(); break;
            case 101: 主角背包.販賣物01.Clear(); break;
            case 102: 主角背包.販賣物02.Clear(); break;
            case 103: 主角背包.販賣物03.Clear(); break;
            case 104: 主角背包.販賣物04.Clear(); break;
            case 105: 主角背包.販賣物05.Clear(); break;
            case 106: 主角背包.販賣物06.Clear(); break;
            case 107: 主角背包.販賣物07.Clear(); break;
            case 108: 主角背包.販賣物08.Clear(); break;
            case 109: 主角背包.販賣物09.Clear(); break;
            case 110: 主角背包.販賣物10.Clear(); break;
            case 111: 主角背包.販賣物11.Clear(); break;
            case 112: 主角背包.販賣物12.Clear(); break;
            case 113: 主角背包.販賣物13.Clear(); break;
            case 114: 主角背包.販賣物14.Clear(); break;
            case 115: 主角背包.販賣物15.Clear(); break;
            case 116: 主角背包.販賣物16.Clear(); break;
            case 117: 主角背包.販賣物17.Clear(); break;
            case 118: 主角背包.販賣物18.Clear(); break;
            case 119: 主角背包.販賣物19.Clear(); break;
            case 120: 主角背包.販賣物20.Clear(); break;
            case 121: 主角背包.販賣物21.Clear(); break;
            case 122: 主角背包.販賣物22.Clear(); break;
            case 123: 主角背包.販賣物23.Clear(); break;
            case 124: 主角背包.販賣物24.Clear(); break;
            case 125: 主角背包.販賣物25.Clear(); break;
            case 126: 主角背包.販賣物26.Clear(); break;
            case 127: 主角背包.販賣物27.Clear(); break;
            case 128: 主角背包.販賣物28.Clear(); break;
            case 129: 主角背包.販賣物29.Clear(); break;
            case 130: 主角背包.販賣物30.Clear(); break;
            case 131: 主角背包.販賣物31.Clear(); break;
            case 132: 主角背包.販賣物32.Clear(); break;
            case 133: 主角背包.販賣物33.Clear(); break;
            case 134: 主角背包.販賣物34.Clear(); break;
            case 135: 主角背包.販賣物35.Clear(); break;
            case 136: 主角背包.販賣物36.Clear(); break;
            case 137: 主角背包.販賣物37.Clear(); break;
            case 138: 主角背包.販賣物38.Clear(); break;
            case 139: 主角背包.販賣物39.Clear(); break;
            case 140: 主角背包.販賣物40.Clear(); break;
            case 141: 主角背包.販賣物41.Clear(); break;
            case 142: 主角背包.販賣物42.Clear(); break;
            case 143: 主角背包.販賣物43.Clear(); break;
            case 144: 主角背包.販賣物44.Clear(); break;
            case 145: 主角背包.販賣物45.Clear(); break;
            case 146: 主角背包.販賣物46.Clear(); break;
            case 147: 主角背包.販賣物47.Clear(); break;
            case 148: 主角背包.販賣物48.Clear(); break;
            case 149: 主角背包.販賣物49.Clear(); break;
        }
    }

    //篩選販賣物  回傳公共1  
    public void 篩查販賣區()
    {
        是否相同 = false;
        空位警告 = false;
        for (int i = 0; i < 50; i++)
        {
            if (主角背包.販賣物存在列表[i])
            {
                對比數據(i);
                if (是否相同)
                {
                    公共1 = i;  //公共1為可以疊  
                    break;
                }
            }
        }
        //if (!是否相同)//如果為true直接跳過  
        //{
        //    for (int i = 0; i < 50; i++)
        //    {
        //        if (!主角背包.販賣物存在列表[i])
        //        {
        //            公共1 = i;//公共1在沒有可以疊的情況下為空位
        //            break;
        //        }
        //        if (i == 49)
        //        {
        //            空位警告 = true;
        //        }
        //    }
        //}
    }

    //回傳是否相同  還有公共1
    public void 篩查背包()
    {
        是否相同 = false;
        空位警告 = false;
        for (int i = 0; i < 50; i++)
        {
            if (主角背包.物件存在列表[i])
            {
                背包對比數據(i);
                if (是否相同)
                {
                    公共1 = i;  //公共1為可以疊  
                    break;
                }
            }
        }
        //if (!是否相同)//如果為true直接跳過  
        //{
        //    for (int i = 0; i < 50; i++)
        //    {
        //        if (!主角背包.物件存在列表[i])
        //        {
        //            公共1 = i;//公共1在沒有可以疊的情況下為空位
        //            break;
        //        }
        //        if (i == 49)
        //        {
        //            空位警告 = true;
        //        }
        //    }
        //}
    }

    //將物品疊加到公共1號的位置上  順便刪除自身物件
    public void 疊加到販賣區()
    {
        玩家把X丟進公共1();
        switch (公共1)
        {
            case 0: 主角背包.販賣物00[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 1: 主角背包.販賣物01[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 2: 主角背包.販賣物02[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 3: 主角背包.販賣物03[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 4: 主角背包.販賣物04[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 5: 主角背包.販賣物05[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 6: 主角背包.販賣物06[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 7: 主角背包.販賣物07[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 8: 主角背包.販賣物08[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 9: 主角背包.販賣物09[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 10: 主角背包.販賣物10[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 11: 主角背包.販賣物11[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 12: 主角背包.販賣物12[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 13: 主角背包.販賣物13[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 14: 主角背包.販賣物14[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 15: 主角背包.販賣物15[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 16: 主角背包.販賣物16[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 17: 主角背包.販賣物17[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 18: 主角背包.販賣物18[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 19: 主角背包.販賣物19[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 20: 主角背包.販賣物20[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 21: 主角背包.販賣物21[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 22: 主角背包.販賣物22[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 23: 主角背包.販賣物23[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 24: 主角背包.販賣物24[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 25: 主角背包.販賣物25[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 26: 主角背包.販賣物26[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 27: 主角背包.販賣物27[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 28: 主角背包.販賣物28[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 29: 主角背包.販賣物29[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 30: 主角背包.販賣物30[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 31: 主角背包.販賣物31[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 32: 主角背包.販賣物32[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 33: 主角背包.販賣物33[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 34: 主角背包.販賣物34[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 35: 主角背包.販賣物35[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 36: 主角背包.販賣物36[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 37: 主角背包.販賣物37[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 38: 主角背包.販賣物38[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 39: 主角背包.販賣物39[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 40: 主角背包.販賣物40[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 41: 主角背包.販賣物41[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 42: 主角背包.販賣物42[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 43: 主角背包.販賣物43[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 44: 主角背包.販賣物44[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 45: 主角背包.販賣物45[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 46: 主角背包.販賣物46[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 47: 主角背包.販賣物47[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 48: 主角背包.販賣物48[4].屬性參數 += 公共物件[4].屬性參數; break;
            case 49: 主角背包.販賣物49[4].屬性參數 += 公共物件[4].屬性參數; break;
        }
    }
    public int 背包空位 = 0;
    public int 販賣空位 = 0;
    //檢查玩家販賣區 回傳 空位警告 = true;
    public void 檢查販賣區空位()
    {
        玩家販賣區是否有空位 = false;
        空位警告 = false;
        for (int i = 0; i < 50; i++)
        {
            if (!主角背包.販賣物存在列表[i])
            {
                玩家販賣區是否有空位 = true;
                販賣空位 = i;
                return;
            }
        }
        空位警告 = true;
    }
    public void 檢查背包空位()
    {
        玩家背包是否有空位 = false;
        空位警告 = false;
        for (int i = 0; i < 100; i++)
        {
            if (!主角背包.物件存在列表[i])
            {
                玩家背包是否有空位 = true;
                背包空位 = i;
                return;
            }
        }
        空位警告 = true;
    }
    public enum 消耗品種類
    {
        卷軸,
        魔法裝置,
        食物,
        材料,
        一般物品
    }

    public 消耗品種類 消耗品種類1;
    public string str1 = "";
    public string str2 = "";
    public string str3 = "";
    public bool 是否為消耗品 = false;
    public bool 是否為消耗品01 = false;
    public bool 是否為消耗品02 = false;

    public bool 數量大一01 = false;
    public bool 數量大一02 = false;


    //根據傳入的i  確認是消耗品後複製到公共04  如果是消耗品自動進入 對比序列
    public void 對比數據(int i)
    {
        公共物件04.Clear();
        是否為消耗品 = false;
        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.販賣物00[1].屬性名稱.ToString(); str2 = 主角背包.販賣物00[2].屬性名稱.ToString(); str3 = 主角背包.販賣物00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物00); } else { 是否為消耗品 = false; } break;
            case 1: str1 = 主角背包.販賣物01[1].屬性名稱.ToString(); str2 = 主角背包.販賣物01[2].屬性名稱.ToString(); str3 = 主角背包.販賣物01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物01); } else { 是否為消耗品 = false; } break;
            case 2: str1 = 主角背包.販賣物02[1].屬性名稱.ToString(); str2 = 主角背包.販賣物02[2].屬性名稱.ToString(); str3 = 主角背包.販賣物02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物02); } else { 是否為消耗品 = false; } break;
            case 3: str1 = 主角背包.販賣物03[1].屬性名稱.ToString(); str2 = 主角背包.販賣物03[2].屬性名稱.ToString(); str3 = 主角背包.販賣物03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物03); } else { 是否為消耗品 = false; } break;
            case 4: str1 = 主角背包.販賣物04[1].屬性名稱.ToString(); str2 = 主角背包.販賣物04[2].屬性名稱.ToString(); str3 = 主角背包.販賣物04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物04); } else { 是否為消耗品 = false; } break;
            case 5: str1 = 主角背包.販賣物05[1].屬性名稱.ToString(); str2 = 主角背包.販賣物05[2].屬性名稱.ToString(); str3 = 主角背包.販賣物05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物05); } else { 是否為消耗品 = false; } break;
            case 6: str1 = 主角背包.販賣物06[1].屬性名稱.ToString(); str2 = 主角背包.販賣物06[2].屬性名稱.ToString(); str3 = 主角背包.販賣物06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物06); } else { 是否為消耗品 = false; } break;
            case 7: str1 = 主角背包.販賣物07[1].屬性名稱.ToString(); str2 = 主角背包.販賣物07[2].屬性名稱.ToString(); str3 = 主角背包.販賣物07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物07); } else { 是否為消耗品 = false; } break;
            case 8: str1 = 主角背包.販賣物08[1].屬性名稱.ToString(); str2 = 主角背包.販賣物08[2].屬性名稱.ToString(); str3 = 主角背包.販賣物08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物08); } else { 是否為消耗品 = false; } break;
            case 9: str1 = 主角背包.販賣物09[1].屬性名稱.ToString(); str2 = 主角背包.販賣物09[2].屬性名稱.ToString(); str3 = 主角背包.販賣物09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物09); } else { 是否為消耗品 = false; } break;
            case 10: str1 = 主角背包.販賣物10[1].屬性名稱.ToString(); str2 = 主角背包.販賣物10[2].屬性名稱.ToString(); str3 = 主角背包.販賣物10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物10); } else { 是否為消耗品 = false; } break;
            case 11: str1 = 主角背包.販賣物11[1].屬性名稱.ToString(); str2 = 主角背包.販賣物11[2].屬性名稱.ToString(); str3 = 主角背包.販賣物11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物11); } else { 是否為消耗品 = false; } break;
            case 12: str1 = 主角背包.販賣物12[1].屬性名稱.ToString(); str2 = 主角背包.販賣物12[2].屬性名稱.ToString(); str3 = 主角背包.販賣物12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物12); } else { 是否為消耗品 = false; } break;
            case 13: str1 = 主角背包.販賣物13[1].屬性名稱.ToString(); str2 = 主角背包.販賣物13[2].屬性名稱.ToString(); str3 = 主角背包.販賣物13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物13); } else { 是否為消耗品 = false; } break;
            case 14: str1 = 主角背包.販賣物14[1].屬性名稱.ToString(); str2 = 主角背包.販賣物14[2].屬性名稱.ToString(); str3 = 主角背包.販賣物14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物14); } else { 是否為消耗品 = false; } break;
            case 15: str1 = 主角背包.販賣物15[1].屬性名稱.ToString(); str2 = 主角背包.販賣物15[2].屬性名稱.ToString(); str3 = 主角背包.販賣物15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物15); } else { 是否為消耗品 = false; } break;
            case 16: str1 = 主角背包.販賣物16[1].屬性名稱.ToString(); str2 = 主角背包.販賣物16[2].屬性名稱.ToString(); str3 = 主角背包.販賣物16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物16); } else { 是否為消耗品 = false; } break;
            case 17: str1 = 主角背包.販賣物17[1].屬性名稱.ToString(); str2 = 主角背包.販賣物17[2].屬性名稱.ToString(); str3 = 主角背包.販賣物17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物17); } else { 是否為消耗品 = false; } break;
            case 18: str1 = 主角背包.販賣物18[1].屬性名稱.ToString(); str2 = 主角背包.販賣物18[2].屬性名稱.ToString(); str3 = 主角背包.販賣物18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物18); } else { 是否為消耗品 = false; } break;
            case 19: str1 = 主角背包.販賣物19[1].屬性名稱.ToString(); str2 = 主角背包.販賣物19[2].屬性名稱.ToString(); str3 = 主角背包.販賣物19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物19); } else { 是否為消耗品 = false; } break;
            case 20: str1 = 主角背包.販賣物20[1].屬性名稱.ToString(); str2 = 主角背包.販賣物20[2].屬性名稱.ToString(); str3 = 主角背包.販賣物20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物20); } else { 是否為消耗品 = false; } break;
            case 21: str1 = 主角背包.販賣物21[1].屬性名稱.ToString(); str2 = 主角背包.販賣物21[2].屬性名稱.ToString(); str3 = 主角背包.販賣物21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物21); } else { 是否為消耗品 = false; } break;
            case 22: str1 = 主角背包.販賣物22[1].屬性名稱.ToString(); str2 = 主角背包.販賣物22[2].屬性名稱.ToString(); str3 = 主角背包.販賣物22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物22); } else { 是否為消耗品 = false; } break;
            case 23: str1 = 主角背包.販賣物23[1].屬性名稱.ToString(); str2 = 主角背包.販賣物23[2].屬性名稱.ToString(); str3 = 主角背包.販賣物23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物23); } else { 是否為消耗品 = false; } break;
            case 24: str1 = 主角背包.販賣物24[1].屬性名稱.ToString(); str2 = 主角背包.販賣物24[2].屬性名稱.ToString(); str3 = 主角背包.販賣物24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物24); } else { 是否為消耗品 = false; } break;
            case 25: str1 = 主角背包.販賣物25[1].屬性名稱.ToString(); str2 = 主角背包.販賣物25[2].屬性名稱.ToString(); str3 = 主角背包.販賣物25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物25); } else { 是否為消耗品 = false; } break;
            case 26: str1 = 主角背包.販賣物26[1].屬性名稱.ToString(); str2 = 主角背包.販賣物26[2].屬性名稱.ToString(); str3 = 主角背包.販賣物26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物26); } else { 是否為消耗品 = false; } break;
            case 27: str1 = 主角背包.販賣物27[1].屬性名稱.ToString(); str2 = 主角背包.販賣物27[2].屬性名稱.ToString(); str3 = 主角背包.販賣物27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物27); } else { 是否為消耗品 = false; } break;
            case 28: str1 = 主角背包.販賣物28[1].屬性名稱.ToString(); str2 = 主角背包.販賣物28[2].屬性名稱.ToString(); str3 = 主角背包.販賣物28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物28); } else { 是否為消耗品 = false; } break;
            case 29: str1 = 主角背包.販賣物29[1].屬性名稱.ToString(); str2 = 主角背包.販賣物29[2].屬性名稱.ToString(); str3 = 主角背包.販賣物29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物29); } else { 是否為消耗品 = false; } break;
            case 30: str1 = 主角背包.販賣物30[1].屬性名稱.ToString(); str2 = 主角背包.販賣物30[2].屬性名稱.ToString(); str3 = 主角背包.販賣物30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物30); } else { 是否為消耗品 = false; } break;
            case 31: str1 = 主角背包.販賣物31[1].屬性名稱.ToString(); str2 = 主角背包.販賣物31[2].屬性名稱.ToString(); str3 = 主角背包.販賣物31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物31); } else { 是否為消耗品 = false; } break;
            case 32: str1 = 主角背包.販賣物32[1].屬性名稱.ToString(); str2 = 主角背包.販賣物32[2].屬性名稱.ToString(); str3 = 主角背包.販賣物32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物32); } else { 是否為消耗品 = false; } break;
            case 33: str1 = 主角背包.販賣物33[1].屬性名稱.ToString(); str2 = 主角背包.販賣物33[2].屬性名稱.ToString(); str3 = 主角背包.販賣物33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物33); } else { 是否為消耗品 = false; } break;
            case 34: str1 = 主角背包.販賣物34[1].屬性名稱.ToString(); str2 = 主角背包.販賣物34[2].屬性名稱.ToString(); str3 = 主角背包.販賣物34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物34); } else { 是否為消耗品 = false; } break;
            case 35: str1 = 主角背包.販賣物35[1].屬性名稱.ToString(); str2 = 主角背包.販賣物35[2].屬性名稱.ToString(); str3 = 主角背包.販賣物35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物35); } else { 是否為消耗品 = false; } break;
            case 36: str1 = 主角背包.販賣物36[1].屬性名稱.ToString(); str2 = 主角背包.販賣物36[2].屬性名稱.ToString(); str3 = 主角背包.販賣物36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物36); } else { 是否為消耗品 = false; } break;
            case 37: str1 = 主角背包.販賣物37[1].屬性名稱.ToString(); str2 = 主角背包.販賣物37[2].屬性名稱.ToString(); str3 = 主角背包.販賣物37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物37); } else { 是否為消耗品 = false; } break;
            case 38: str1 = 主角背包.販賣物38[1].屬性名稱.ToString(); str2 = 主角背包.販賣物38[2].屬性名稱.ToString(); str3 = 主角背包.販賣物38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物38); } else { 是否為消耗品 = false; } break;
            case 39: str1 = 主角背包.販賣物39[1].屬性名稱.ToString(); str2 = 主角背包.販賣物39[2].屬性名稱.ToString(); str3 = 主角背包.販賣物39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物39); } else { 是否為消耗品 = false; } break;
            case 40: str1 = 主角背包.販賣物40[1].屬性名稱.ToString(); str2 = 主角背包.販賣物40[2].屬性名稱.ToString(); str3 = 主角背包.販賣物40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物40); } else { 是否為消耗品 = false; } break;
            case 41: str1 = 主角背包.販賣物41[1].屬性名稱.ToString(); str2 = 主角背包.販賣物41[2].屬性名稱.ToString(); str3 = 主角背包.販賣物41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物41); } else { 是否為消耗品 = false; } break;
            case 42: str1 = 主角背包.販賣物42[1].屬性名稱.ToString(); str2 = 主角背包.販賣物42[2].屬性名稱.ToString(); str3 = 主角背包.販賣物42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物42); } else { 是否為消耗品 = false; } break;
            case 43: str1 = 主角背包.販賣物43[1].屬性名稱.ToString(); str2 = 主角背包.販賣物43[2].屬性名稱.ToString(); str3 = 主角背包.販賣物43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物43); } else { 是否為消耗品 = false; } break;
            case 44: str1 = 主角背包.販賣物44[1].屬性名稱.ToString(); str2 = 主角背包.販賣物44[2].屬性名稱.ToString(); str3 = 主角背包.販賣物44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物44); } else { 是否為消耗品 = false; } break;
            case 45: str1 = 主角背包.販賣物45[1].屬性名稱.ToString(); str2 = 主角背包.販賣物45[2].屬性名稱.ToString(); str3 = 主角背包.販賣物45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物45); } else { 是否為消耗品 = false; } break;
            case 46: str1 = 主角背包.販賣物46[1].屬性名稱.ToString(); str2 = 主角背包.販賣物46[2].屬性名稱.ToString(); str3 = 主角背包.販賣物46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物46); } else { 是否為消耗品 = false; } break;
            case 47: str1 = 主角背包.販賣物47[1].屬性名稱.ToString(); str2 = 主角背包.販賣物47[2].屬性名稱.ToString(); str3 = 主角背包.販賣物47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物47); } else { 是否為消耗品 = false; } break;
            case 48: str1 = 主角背包.販賣物48[1].屬性名稱.ToString(); str2 = 主角背包.販賣物48[2].屬性名稱.ToString(); str3 = 主角背包.販賣物48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物48); } else { 是否為消耗品 = false; } break;
            case 49: str1 = 主角背包.販賣物49[1].屬性名稱.ToString(); str2 = 主角背包.販賣物49[2].屬性名稱.ToString(); str3 = 主角背包.販賣物49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.販賣物49); } else { 是否為消耗品 = false; } break;
        }
        if (是否為消耗品) //確定為消耗品才對比
        {
            對比序列();
        }
    }

    public void 背包對比數據(int i)
    {
        公共物件04.Clear();
        是否為消耗品 = false;
        公共物件03.Clear();
        //把X丟進公共03
        switch (公共X)
        {
            case 0: 公共物件03.AddRange(主角背包.物件00); break;
            case 1: 公共物件03.AddRange(主角背包.物件01); break;
            case 2: 公共物件03.AddRange(主角背包.物件02); break;
            case 3: 公共物件03.AddRange(主角背包.物件03); break;
            case 4: 公共物件03.AddRange(主角背包.物件04); break;
            case 5: 公共物件03.AddRange(主角背包.物件05); break;
            case 6: 公共物件03.AddRange(主角背包.物件06); break;
            case 7: 公共物件03.AddRange(主角背包.物件07); break;
            case 8: 公共物件03.AddRange(主角背包.物件08); break;
            case 9: 公共物件03.AddRange(主角背包.物件09); break;
            case 10: 公共物件03.AddRange(主角背包.物件10); break;
            case 11: 公共物件03.AddRange(主角背包.物件11); break;
            case 12: 公共物件03.AddRange(主角背包.物件12); break;
            case 13: 公共物件03.AddRange(主角背包.物件13); break;
            case 14: 公共物件03.AddRange(主角背包.物件14); break;
            case 15: 公共物件03.AddRange(主角背包.物件15); break;
            case 16: 公共物件03.AddRange(主角背包.物件16); break;
            case 17: 公共物件03.AddRange(主角背包.物件17); break;
            case 18: 公共物件03.AddRange(主角背包.物件18); break;
            case 19: 公共物件03.AddRange(主角背包.物件19); break;
            case 20: 公共物件03.AddRange(主角背包.物件20); break;
            case 21: 公共物件03.AddRange(主角背包.物件21); break;
            case 22: 公共物件03.AddRange(主角背包.物件22); break;
            case 23: 公共物件03.AddRange(主角背包.物件23); break;
            case 24: 公共物件03.AddRange(主角背包.物件24); break;
            case 25: 公共物件03.AddRange(主角背包.物件25); break;
            case 26: 公共物件03.AddRange(主角背包.物件26); break;
            case 27: 公共物件03.AddRange(主角背包.物件27); break;
            case 28: 公共物件03.AddRange(主角背包.物件28); break;
            case 29: 公共物件03.AddRange(主角背包.物件29); break;
            case 30: 公共物件03.AddRange(主角背包.物件30); break;
            case 31: 公共物件03.AddRange(主角背包.物件31); break;
            case 32: 公共物件03.AddRange(主角背包.物件32); break;
            case 33: 公共物件03.AddRange(主角背包.物件33); break;
            case 34: 公共物件03.AddRange(主角背包.物件34); break;
            case 35: 公共物件03.AddRange(主角背包.物件35); break;
            case 36: 公共物件03.AddRange(主角背包.物件36); break;
            case 37: 公共物件03.AddRange(主角背包.物件37); break;
            case 38: 公共物件03.AddRange(主角背包.物件38); break;
            case 39: 公共物件03.AddRange(主角背包.物件39); break;
            case 40: 公共物件03.AddRange(主角背包.物件40); break;
            case 41: 公共物件03.AddRange(主角背包.物件41); break;
            case 42: 公共物件03.AddRange(主角背包.物件42); break;
            case 43: 公共物件03.AddRange(主角背包.物件43); break;
            case 44: 公共物件03.AddRange(主角背包.物件44); break;
            case 45: 公共物件03.AddRange(主角背包.物件45); break;
            case 46: 公共物件03.AddRange(主角背包.物件46); break;
            case 47: 公共物件03.AddRange(主角背包.物件47); break;
            case 48: 公共物件03.AddRange(主角背包.物件48); break;
            case 49: 公共物件03.AddRange(主角背包.物件49); break;
            case 50: 公共物件03.AddRange(主角背包.物件50); break;
            case 51: 公共物件03.AddRange(主角背包.物件51); break;
            case 52: 公共物件03.AddRange(主角背包.物件52); break;
            case 53: 公共物件03.AddRange(主角背包.物件53); break;
            case 54: 公共物件03.AddRange(主角背包.物件54); break;
            case 55: 公共物件03.AddRange(主角背包.物件55); break;
            case 56: 公共物件03.AddRange(主角背包.物件56); break;
            case 57: 公共物件03.AddRange(主角背包.物件57); break;
            case 58: 公共物件03.AddRange(主角背包.物件58); break;
            case 59: 公共物件03.AddRange(主角背包.物件59); break;
            case 60: 公共物件03.AddRange(主角背包.物件60); break;
            case 61: 公共物件03.AddRange(主角背包.物件61); break;
            case 62: 公共物件03.AddRange(主角背包.物件62); break;
            case 63: 公共物件03.AddRange(主角背包.物件63); break;
            case 64: 公共物件03.AddRange(主角背包.物件64); break;
            case 65: 公共物件03.AddRange(主角背包.物件65); break;
            case 66: 公共物件03.AddRange(主角背包.物件66); break;
            case 67: 公共物件03.AddRange(主角背包.物件67); break;
            case 68: 公共物件03.AddRange(主角背包.物件68); break;
            case 69: 公共物件03.AddRange(主角背包.物件69); break;
            case 70: 公共物件03.AddRange(主角背包.物件70); break;
            case 71: 公共物件03.AddRange(主角背包.物件71); break;
            case 72: 公共物件03.AddRange(主角背包.物件72); break;
            case 73: 公共物件03.AddRange(主角背包.物件73); break;
            case 74: 公共物件03.AddRange(主角背包.物件74); break;
            case 75: 公共物件03.AddRange(主角背包.物件75); break;
            case 76: 公共物件03.AddRange(主角背包.物件76); break;
            case 77: 公共物件03.AddRange(主角背包.物件77); break;
            case 78: 公共物件03.AddRange(主角背包.物件78); break;
            case 79: 公共物件03.AddRange(主角背包.物件79); break;
            case 80: 公共物件03.AddRange(主角背包.物件80); break;
            case 81: 公共物件03.AddRange(主角背包.物件81); break;
            case 82: 公共物件03.AddRange(主角背包.物件82); break;
            case 83: 公共物件03.AddRange(主角背包.物件83); break;
            case 84: 公共物件03.AddRange(主角背包.物件84); break;
            case 85: 公共物件03.AddRange(主角背包.物件85); break;
            case 86: 公共物件03.AddRange(主角背包.物件86); break;
            case 87: 公共物件03.AddRange(主角背包.物件87); break;
            case 88: 公共物件03.AddRange(主角背包.物件88); break;
            case 89: 公共物件03.AddRange(主角背包.物件89); break;
            case 90: 公共物件03.AddRange(主角背包.物件90); break;
            case 91: 公共物件03.AddRange(主角背包.物件91); break;
            case 92: 公共物件03.AddRange(主角背包.物件92); break;
            case 93: 公共物件03.AddRange(主角背包.物件93); break;
            case 94: 公共物件03.AddRange(主角背包.物件94); break;
            case 95: 公共物件03.AddRange(主角背包.物件95); break;
            case 96: 公共物件03.AddRange(主角背包.物件96); break;
            case 97: 公共物件03.AddRange(主角背包.物件97); break;
            case 98: 公共物件03.AddRange(主角背包.物件98); break;
            case 99: 公共物件03.AddRange(主角背包.物件99); break;
            case 100: 公共物件03.AddRange(主角背包.販賣物00); break;
            case 101: 公共物件03.AddRange(主角背包.販賣物01); break;
            case 102: 公共物件03.AddRange(主角背包.販賣物02); break;
            case 103: 公共物件03.AddRange(主角背包.販賣物03); break;
            case 104: 公共物件03.AddRange(主角背包.販賣物04); break;
            case 105: 公共物件03.AddRange(主角背包.販賣物05); break;
            case 106: 公共物件03.AddRange(主角背包.販賣物06); break;
            case 107: 公共物件03.AddRange(主角背包.販賣物07); break;
            case 108: 公共物件03.AddRange(主角背包.販賣物08); break;
            case 109: 公共物件03.AddRange(主角背包.販賣物09); break;
            case 110: 公共物件03.AddRange(主角背包.販賣物10); break;
            case 111: 公共物件03.AddRange(主角背包.販賣物11); break;
            case 112: 公共物件03.AddRange(主角背包.販賣物12); break;
            case 113: 公共物件03.AddRange(主角背包.販賣物13); break;
            case 114: 公共物件03.AddRange(主角背包.販賣物14); break;
            case 115: 公共物件03.AddRange(主角背包.販賣物15); break;
            case 116: 公共物件03.AddRange(主角背包.販賣物16); break;
            case 117: 公共物件03.AddRange(主角背包.販賣物17); break;
            case 118: 公共物件03.AddRange(主角背包.販賣物18); break;
            case 119: 公共物件03.AddRange(主角背包.販賣物19); break;
            case 120: 公共物件03.AddRange(主角背包.販賣物20); break;
            case 121: 公共物件03.AddRange(主角背包.販賣物21); break;
            case 122: 公共物件03.AddRange(主角背包.販賣物22); break;
            case 123: 公共物件03.AddRange(主角背包.販賣物23); break;
            case 124: 公共物件03.AddRange(主角背包.販賣物24); break;
            case 125: 公共物件03.AddRange(主角背包.販賣物25); break;
            case 126: 公共物件03.AddRange(主角背包.販賣物26); break;
            case 127: 公共物件03.AddRange(主角背包.販賣物27); break;
            case 128: 公共物件03.AddRange(主角背包.販賣物28); break;
            case 129: 公共物件03.AddRange(主角背包.販賣物29); break;
            case 130: 公共物件03.AddRange(主角背包.販賣物30); break;
            case 131: 公共物件03.AddRange(主角背包.販賣物31); break;
            case 132: 公共物件03.AddRange(主角背包.販賣物32); break;
            case 133: 公共物件03.AddRange(主角背包.販賣物33); break;
            case 134: 公共物件03.AddRange(主角背包.販賣物34); break;
            case 135: 公共物件03.AddRange(主角背包.販賣物35); break;
            case 136: 公共物件03.AddRange(主角背包.販賣物36); break;
            case 137: 公共物件03.AddRange(主角背包.販賣物37); break;
            case 138: 公共物件03.AddRange(主角背包.販賣物38); break;
            case 139: 公共物件03.AddRange(主角背包.販賣物39); break;
            case 140: 公共物件03.AddRange(主角背包.販賣物40); break;
            case 141: 公共物件03.AddRange(主角背包.販賣物41); break;
            case 142: 公共物件03.AddRange(主角背包.販賣物42); break;
            case 143: 公共物件03.AddRange(主角背包.販賣物43); break;
            case 144: 公共物件03.AddRange(主角背包.販賣物44); break;
            case 145: 公共物件03.AddRange(主角背包.販賣物45); break;
            case 146: 公共物件03.AddRange(主角背包.販賣物46); break;
            case 147: 公共物件03.AddRange(主角背包.販賣物47); break;
            case 148: 公共物件03.AddRange(主角背包.販賣物48); break;
            case 149: 公共物件03.AddRange(主角背包.販賣物49); break;
        }

        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.物件00[1].屬性名稱.ToString(); str2 = 主角背包.物件00[2].屬性名稱.ToString(); str3 = 主角背包.物件00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件00); } else { 是否為消耗品 = false; } break;
            case 1: str1 = 主角背包.物件01[1].屬性名稱.ToString(); str2 = 主角背包.物件01[2].屬性名稱.ToString(); str3 = 主角背包.物件01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件01); } else { 是否為消耗品 = false; } break;
            case 2: str1 = 主角背包.物件02[1].屬性名稱.ToString(); str2 = 主角背包.物件02[2].屬性名稱.ToString(); str3 = 主角背包.物件02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件02); } else { 是否為消耗品 = false; } break;
            case 3: str1 = 主角背包.物件03[1].屬性名稱.ToString(); str2 = 主角背包.物件03[2].屬性名稱.ToString(); str3 = 主角背包.物件03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件03); } else { 是否為消耗品 = false; } break;
            case 4: str1 = 主角背包.物件04[1].屬性名稱.ToString(); str2 = 主角背包.物件04[2].屬性名稱.ToString(); str3 = 主角背包.物件04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件04); } else { 是否為消耗品 = false; } break;
            case 5: str1 = 主角背包.物件05[1].屬性名稱.ToString(); str2 = 主角背包.物件05[2].屬性名稱.ToString(); str3 = 主角背包.物件05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件05); } else { 是否為消耗品 = false; } break;
            case 6: str1 = 主角背包.物件06[1].屬性名稱.ToString(); str2 = 主角背包.物件06[2].屬性名稱.ToString(); str3 = 主角背包.物件06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件06); } else { 是否為消耗品 = false; } break;
            case 7: str1 = 主角背包.物件07[1].屬性名稱.ToString(); str2 = 主角背包.物件07[2].屬性名稱.ToString(); str3 = 主角背包.物件07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件07); } else { 是否為消耗品 = false; } break;
            case 8: str1 = 主角背包.物件08[1].屬性名稱.ToString(); str2 = 主角背包.物件08[2].屬性名稱.ToString(); str3 = 主角背包.物件08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件08); } else { 是否為消耗品 = false; } break;
            case 9: str1 = 主角背包.物件09[1].屬性名稱.ToString(); str2 = 主角背包.物件09[2].屬性名稱.ToString(); str3 = 主角背包.物件09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件09); } else { 是否為消耗品 = false; } break;
            case 10: str1 = 主角背包.物件10[1].屬性名稱.ToString(); str2 = 主角背包.物件10[2].屬性名稱.ToString(); str3 = 主角背包.物件10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件10); } else { 是否為消耗品 = false; } break;
            case 11: str1 = 主角背包.物件11[1].屬性名稱.ToString(); str2 = 主角背包.物件11[2].屬性名稱.ToString(); str3 = 主角背包.物件11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件11); } else { 是否為消耗品 = false; } break;
            case 12: str1 = 主角背包.物件12[1].屬性名稱.ToString(); str2 = 主角背包.物件12[2].屬性名稱.ToString(); str3 = 主角背包.物件12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件12); } else { 是否為消耗品 = false; } break;
            case 13: str1 = 主角背包.物件13[1].屬性名稱.ToString(); str2 = 主角背包.物件13[2].屬性名稱.ToString(); str3 = 主角背包.物件13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件13); } else { 是否為消耗品 = false; } break;
            case 14: str1 = 主角背包.物件14[1].屬性名稱.ToString(); str2 = 主角背包.物件14[2].屬性名稱.ToString(); str3 = 主角背包.物件14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件14); } else { 是否為消耗品 = false; } break;
            case 15: str1 = 主角背包.物件15[1].屬性名稱.ToString(); str2 = 主角背包.物件15[2].屬性名稱.ToString(); str3 = 主角背包.物件15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件15); } else { 是否為消耗品 = false; } break;
            case 16: str1 = 主角背包.物件16[1].屬性名稱.ToString(); str2 = 主角背包.物件16[2].屬性名稱.ToString(); str3 = 主角背包.物件16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件16); } else { 是否為消耗品 = false; } break;
            case 17: str1 = 主角背包.物件17[1].屬性名稱.ToString(); str2 = 主角背包.物件17[2].屬性名稱.ToString(); str3 = 主角背包.物件17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件17); } else { 是否為消耗品 = false; } break;
            case 18: str1 = 主角背包.物件18[1].屬性名稱.ToString(); str2 = 主角背包.物件18[2].屬性名稱.ToString(); str3 = 主角背包.物件18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件18); } else { 是否為消耗品 = false; } break;
            case 19: str1 = 主角背包.物件19[1].屬性名稱.ToString(); str2 = 主角背包.物件19[2].屬性名稱.ToString(); str3 = 主角背包.物件19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件19); } else { 是否為消耗品 = false; } break;
            case 20: str1 = 主角背包.物件20[1].屬性名稱.ToString(); str2 = 主角背包.物件20[2].屬性名稱.ToString(); str3 = 主角背包.物件20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件20); } else { 是否為消耗品 = false; } break;
            case 21: str1 = 主角背包.物件21[1].屬性名稱.ToString(); str2 = 主角背包.物件21[2].屬性名稱.ToString(); str3 = 主角背包.物件21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件21); } else { 是否為消耗品 = false; } break;
            case 22: str1 = 主角背包.物件22[1].屬性名稱.ToString(); str2 = 主角背包.物件22[2].屬性名稱.ToString(); str3 = 主角背包.物件22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件22); } else { 是否為消耗品 = false; } break;
            case 23: str1 = 主角背包.物件23[1].屬性名稱.ToString(); str2 = 主角背包.物件23[2].屬性名稱.ToString(); str3 = 主角背包.物件23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件23); } else { 是否為消耗品 = false; } break;
            case 24: str1 = 主角背包.物件24[1].屬性名稱.ToString(); str2 = 主角背包.物件24[2].屬性名稱.ToString(); str3 = 主角背包.物件24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件24); } else { 是否為消耗品 = false; } break;
            case 25: str1 = 主角背包.物件25[1].屬性名稱.ToString(); str2 = 主角背包.物件25[2].屬性名稱.ToString(); str3 = 主角背包.物件25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件25); } else { 是否為消耗品 = false; } break;
            case 26: str1 = 主角背包.物件26[1].屬性名稱.ToString(); str2 = 主角背包.物件26[2].屬性名稱.ToString(); str3 = 主角背包.物件26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件26); } else { 是否為消耗品 = false; } break;
            case 27: str1 = 主角背包.物件27[1].屬性名稱.ToString(); str2 = 主角背包.物件27[2].屬性名稱.ToString(); str3 = 主角背包.物件27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件27); } else { 是否為消耗品 = false; } break;
            case 28: str1 = 主角背包.物件28[1].屬性名稱.ToString(); str2 = 主角背包.物件28[2].屬性名稱.ToString(); str3 = 主角背包.物件28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件28); } else { 是否為消耗品 = false; } break;
            case 29: str1 = 主角背包.物件29[1].屬性名稱.ToString(); str2 = 主角背包.物件29[2].屬性名稱.ToString(); str3 = 主角背包.物件29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件29); } else { 是否為消耗品 = false; } break;
            case 30: str1 = 主角背包.物件30[1].屬性名稱.ToString(); str2 = 主角背包.物件30[2].屬性名稱.ToString(); str3 = 主角背包.物件30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件30); } else { 是否為消耗品 = false; } break;
            case 31: str1 = 主角背包.物件31[1].屬性名稱.ToString(); str2 = 主角背包.物件31[2].屬性名稱.ToString(); str3 = 主角背包.物件31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件31); } else { 是否為消耗品 = false; } break;
            case 32: str1 = 主角背包.物件32[1].屬性名稱.ToString(); str2 = 主角背包.物件32[2].屬性名稱.ToString(); str3 = 主角背包.物件32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件32); } else { 是否為消耗品 = false; } break;
            case 33: str1 = 主角背包.物件33[1].屬性名稱.ToString(); str2 = 主角背包.物件33[2].屬性名稱.ToString(); str3 = 主角背包.物件33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件33); } else { 是否為消耗品 = false; } break;
            case 34: str1 = 主角背包.物件34[1].屬性名稱.ToString(); str2 = 主角背包.物件34[2].屬性名稱.ToString(); str3 = 主角背包.物件34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件34); } else { 是否為消耗品 = false; } break;
            case 35: str1 = 主角背包.物件35[1].屬性名稱.ToString(); str2 = 主角背包.物件35[2].屬性名稱.ToString(); str3 = 主角背包.物件35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件35); } else { 是否為消耗品 = false; } break;
            case 36: str1 = 主角背包.物件36[1].屬性名稱.ToString(); str2 = 主角背包.物件36[2].屬性名稱.ToString(); str3 = 主角背包.物件36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件36); } else { 是否為消耗品 = false; } break;
            case 37: str1 = 主角背包.物件37[1].屬性名稱.ToString(); str2 = 主角背包.物件37[2].屬性名稱.ToString(); str3 = 主角背包.物件37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件37); } else { 是否為消耗品 = false; } break;
            case 38: str1 = 主角背包.物件38[1].屬性名稱.ToString(); str2 = 主角背包.物件38[2].屬性名稱.ToString(); str3 = 主角背包.物件38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件38); } else { 是否為消耗品 = false; } break;
            case 39: str1 = 主角背包.物件39[1].屬性名稱.ToString(); str2 = 主角背包.物件39[2].屬性名稱.ToString(); str3 = 主角背包.物件39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件39); } else { 是否為消耗品 = false; } break;
            case 40: str1 = 主角背包.物件40[1].屬性名稱.ToString(); str2 = 主角背包.物件40[2].屬性名稱.ToString(); str3 = 主角背包.物件40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件40); } else { 是否為消耗品 = false; } break;
            case 41: str1 = 主角背包.物件41[1].屬性名稱.ToString(); str2 = 主角背包.物件41[2].屬性名稱.ToString(); str3 = 主角背包.物件41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件41); } else { 是否為消耗品 = false; } break;
            case 42: str1 = 主角背包.物件42[1].屬性名稱.ToString(); str2 = 主角背包.物件42[2].屬性名稱.ToString(); str3 = 主角背包.物件42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件42); } else { 是否為消耗品 = false; } break;
            case 43: str1 = 主角背包.物件43[1].屬性名稱.ToString(); str2 = 主角背包.物件43[2].屬性名稱.ToString(); str3 = 主角背包.物件43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件43); } else { 是否為消耗品 = false; } break;
            case 44: str1 = 主角背包.物件44[1].屬性名稱.ToString(); str2 = 主角背包.物件44[2].屬性名稱.ToString(); str3 = 主角背包.物件44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件44); } else { 是否為消耗品 = false; } break;
            case 45: str1 = 主角背包.物件45[1].屬性名稱.ToString(); str2 = 主角背包.物件45[2].屬性名稱.ToString(); str3 = 主角背包.物件45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件45); } else { 是否為消耗品 = false; } break;
            case 46: str1 = 主角背包.物件46[1].屬性名稱.ToString(); str2 = 主角背包.物件46[2].屬性名稱.ToString(); str3 = 主角背包.物件46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件46); } else { 是否為消耗品 = false; } break;
            case 47: str1 = 主角背包.物件47[1].屬性名稱.ToString(); str2 = 主角背包.物件47[2].屬性名稱.ToString(); str3 = 主角背包.物件47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件47); } else { 是否為消耗品 = false; } break;
            case 48: str1 = 主角背包.物件48[1].屬性名稱.ToString(); str2 = 主角背包.物件48[2].屬性名稱.ToString(); str3 = 主角背包.物件48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件48); } else { 是否為消耗品 = false; } break;
            case 49: str1 = 主角背包.物件49[1].屬性名稱.ToString(); str2 = 主角背包.物件49[2].屬性名稱.ToString(); str3 = 主角背包.物件49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件49); } else { 是否為消耗品 = false; } break;
            case 50: str1 = 主角背包.物件50[1].屬性名稱.ToString(); str2 = 主角背包.物件50[2].屬性名稱.ToString(); str3 = 主角背包.物件50[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件50); } else { 是否為消耗品 = false; } break;
            case 51: str1 = 主角背包.物件51[1].屬性名稱.ToString(); str2 = 主角背包.物件51[2].屬性名稱.ToString(); str3 = 主角背包.物件51[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件51); } else { 是否為消耗品 = false; } break;
            case 52: str1 = 主角背包.物件52[1].屬性名稱.ToString(); str2 = 主角背包.物件52[2].屬性名稱.ToString(); str3 = 主角背包.物件52[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件52); } else { 是否為消耗品 = false; } break;
            case 53: str1 = 主角背包.物件53[1].屬性名稱.ToString(); str2 = 主角背包.物件53[2].屬性名稱.ToString(); str3 = 主角背包.物件53[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件53); } else { 是否為消耗品 = false; } break;
            case 54: str1 = 主角背包.物件54[1].屬性名稱.ToString(); str2 = 主角背包.物件54[2].屬性名稱.ToString(); str3 = 主角背包.物件54[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件54); } else { 是否為消耗品 = false; } break;
            case 55: str1 = 主角背包.物件55[1].屬性名稱.ToString(); str2 = 主角背包.物件55[2].屬性名稱.ToString(); str3 = 主角背包.物件55[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件55); } else { 是否為消耗品 = false; } break;
            case 56: str1 = 主角背包.物件56[1].屬性名稱.ToString(); str2 = 主角背包.物件56[2].屬性名稱.ToString(); str3 = 主角背包.物件56[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件56); } else { 是否為消耗品 = false; } break;
            case 57: str1 = 主角背包.物件57[1].屬性名稱.ToString(); str2 = 主角背包.物件57[2].屬性名稱.ToString(); str3 = 主角背包.物件57[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件57); } else { 是否為消耗品 = false; } break;
            case 58: str1 = 主角背包.物件58[1].屬性名稱.ToString(); str2 = 主角背包.物件58[2].屬性名稱.ToString(); str3 = 主角背包.物件58[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件58); } else { 是否為消耗品 = false; } break;
            case 59: str1 = 主角背包.物件59[1].屬性名稱.ToString(); str2 = 主角背包.物件59[2].屬性名稱.ToString(); str3 = 主角背包.物件59[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件59); } else { 是否為消耗品 = false; } break;
            case 60: str1 = 主角背包.物件60[1].屬性名稱.ToString(); str2 = 主角背包.物件60[2].屬性名稱.ToString(); str3 = 主角背包.物件60[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件60); } else { 是否為消耗品 = false; } break;
            case 61: str1 = 主角背包.物件61[1].屬性名稱.ToString(); str2 = 主角背包.物件61[2].屬性名稱.ToString(); str3 = 主角背包.物件61[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件61); } else { 是否為消耗品 = false; } break;
            case 62: str1 = 主角背包.物件62[1].屬性名稱.ToString(); str2 = 主角背包.物件62[2].屬性名稱.ToString(); str3 = 主角背包.物件62[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件62); } else { 是否為消耗品 = false; } break;
            case 63: str1 = 主角背包.物件63[1].屬性名稱.ToString(); str2 = 主角背包.物件63[2].屬性名稱.ToString(); str3 = 主角背包.物件63[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件63); } else { 是否為消耗品 = false; } break;
            case 64: str1 = 主角背包.物件64[1].屬性名稱.ToString(); str2 = 主角背包.物件64[2].屬性名稱.ToString(); str3 = 主角背包.物件64[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件64); } else { 是否為消耗品 = false; } break;
            case 65: str1 = 主角背包.物件65[1].屬性名稱.ToString(); str2 = 主角背包.物件65[2].屬性名稱.ToString(); str3 = 主角背包.物件65[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件65); } else { 是否為消耗品 = false; } break;
            case 66: str1 = 主角背包.物件66[1].屬性名稱.ToString(); str2 = 主角背包.物件66[2].屬性名稱.ToString(); str3 = 主角背包.物件66[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件66); } else { 是否為消耗品 = false; } break;
            case 67: str1 = 主角背包.物件67[1].屬性名稱.ToString(); str2 = 主角背包.物件67[2].屬性名稱.ToString(); str3 = 主角背包.物件67[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件67); } else { 是否為消耗品 = false; } break;
            case 68: str1 = 主角背包.物件68[1].屬性名稱.ToString(); str2 = 主角背包.物件68[2].屬性名稱.ToString(); str3 = 主角背包.物件68[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件68); } else { 是否為消耗品 = false; } break;
            case 69: str1 = 主角背包.物件69[1].屬性名稱.ToString(); str2 = 主角背包.物件69[2].屬性名稱.ToString(); str3 = 主角背包.物件69[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件69); } else { 是否為消耗品 = false; } break;
            case 70: str1 = 主角背包.物件70[1].屬性名稱.ToString(); str2 = 主角背包.物件70[2].屬性名稱.ToString(); str3 = 主角背包.物件70[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件70); } else { 是否為消耗品 = false; } break;
            case 71: str1 = 主角背包.物件71[1].屬性名稱.ToString(); str2 = 主角背包.物件71[2].屬性名稱.ToString(); str3 = 主角背包.物件71[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件71); } else { 是否為消耗品 = false; } break;
            case 72: str1 = 主角背包.物件72[1].屬性名稱.ToString(); str2 = 主角背包.物件72[2].屬性名稱.ToString(); str3 = 主角背包.物件72[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件72); } else { 是否為消耗品 = false; } break;
            case 73: str1 = 主角背包.物件73[1].屬性名稱.ToString(); str2 = 主角背包.物件73[2].屬性名稱.ToString(); str3 = 主角背包.物件73[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件73); } else { 是否為消耗品 = false; } break;
            case 74: str1 = 主角背包.物件74[1].屬性名稱.ToString(); str2 = 主角背包.物件74[2].屬性名稱.ToString(); str3 = 主角背包.物件74[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件74); } else { 是否為消耗品 = false; } break;
            case 75: str1 = 主角背包.物件75[1].屬性名稱.ToString(); str2 = 主角背包.物件75[2].屬性名稱.ToString(); str3 = 主角背包.物件75[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件75); } else { 是否為消耗品 = false; } break;
            case 76: str1 = 主角背包.物件76[1].屬性名稱.ToString(); str2 = 主角背包.物件76[2].屬性名稱.ToString(); str3 = 主角背包.物件76[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件76); } else { 是否為消耗品 = false; } break;
            case 77: str1 = 主角背包.物件77[1].屬性名稱.ToString(); str2 = 主角背包.物件77[2].屬性名稱.ToString(); str3 = 主角背包.物件77[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件77); } else { 是否為消耗品 = false; } break;
            case 78: str1 = 主角背包.物件78[1].屬性名稱.ToString(); str2 = 主角背包.物件78[2].屬性名稱.ToString(); str3 = 主角背包.物件78[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件78); } else { 是否為消耗品 = false; } break;
            case 79: str1 = 主角背包.物件79[1].屬性名稱.ToString(); str2 = 主角背包.物件79[2].屬性名稱.ToString(); str3 = 主角背包.物件79[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件79); } else { 是否為消耗品 = false; } break;
            case 80: str1 = 主角背包.物件80[1].屬性名稱.ToString(); str2 = 主角背包.物件80[2].屬性名稱.ToString(); str3 = 主角背包.物件80[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件80); } else { 是否為消耗品 = false; } break;
            case 81: str1 = 主角背包.物件81[1].屬性名稱.ToString(); str2 = 主角背包.物件81[2].屬性名稱.ToString(); str3 = 主角背包.物件81[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件81); } else { 是否為消耗品 = false; } break;
            case 82: str1 = 主角背包.物件82[1].屬性名稱.ToString(); str2 = 主角背包.物件82[2].屬性名稱.ToString(); str3 = 主角背包.物件82[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件82); } else { 是否為消耗品 = false; } break;
            case 83: str1 = 主角背包.物件83[1].屬性名稱.ToString(); str2 = 主角背包.物件83[2].屬性名稱.ToString(); str3 = 主角背包.物件83[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件83); } else { 是否為消耗品 = false; } break;
            case 84: str1 = 主角背包.物件84[1].屬性名稱.ToString(); str2 = 主角背包.物件84[2].屬性名稱.ToString(); str3 = 主角背包.物件84[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件84); } else { 是否為消耗品 = false; } break;
            case 85: str1 = 主角背包.物件85[1].屬性名稱.ToString(); str2 = 主角背包.物件85[2].屬性名稱.ToString(); str3 = 主角背包.物件85[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件85); } else { 是否為消耗品 = false; } break;
            case 86: str1 = 主角背包.物件86[1].屬性名稱.ToString(); str2 = 主角背包.物件86[2].屬性名稱.ToString(); str3 = 主角背包.物件86[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件86); } else { 是否為消耗品 = false; } break;
            case 87: str1 = 主角背包.物件87[1].屬性名稱.ToString(); str2 = 主角背包.物件87[2].屬性名稱.ToString(); str3 = 主角背包.物件87[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件87); } else { 是否為消耗品 = false; } break;
            case 88: str1 = 主角背包.物件88[1].屬性名稱.ToString(); str2 = 主角背包.物件88[2].屬性名稱.ToString(); str3 = 主角背包.物件88[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件88); } else { 是否為消耗品 = false; } break;
            case 89: str1 = 主角背包.物件89[1].屬性名稱.ToString(); str2 = 主角背包.物件89[2].屬性名稱.ToString(); str3 = 主角背包.物件89[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件89); } else { 是否為消耗品 = false; } break;
            case 90: str1 = 主角背包.物件90[1].屬性名稱.ToString(); str2 = 主角背包.物件90[2].屬性名稱.ToString(); str3 = 主角背包.物件90[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件90); } else { 是否為消耗品 = false; } break;
            case 91: str1 = 主角背包.物件91[1].屬性名稱.ToString(); str2 = 主角背包.物件91[2].屬性名稱.ToString(); str3 = 主角背包.物件91[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件91); } else { 是否為消耗品 = false; } break;
            case 92: str1 = 主角背包.物件92[1].屬性名稱.ToString(); str2 = 主角背包.物件92[2].屬性名稱.ToString(); str3 = 主角背包.物件92[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件92); } else { 是否為消耗品 = false; } break;
            case 93: str1 = 主角背包.物件93[1].屬性名稱.ToString(); str2 = 主角背包.物件93[2].屬性名稱.ToString(); str3 = 主角背包.物件93[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件93); } else { 是否為消耗品 = false; } break;
            case 94: str1 = 主角背包.物件94[1].屬性名稱.ToString(); str2 = 主角背包.物件94[2].屬性名稱.ToString(); str3 = 主角背包.物件94[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件94); } else { 是否為消耗品 = false; } break;
            case 95: str1 = 主角背包.物件95[1].屬性名稱.ToString(); str2 = 主角背包.物件95[2].屬性名稱.ToString(); str3 = 主角背包.物件95[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件95); } else { 是否為消耗品 = false; } break;
            case 96: str1 = 主角背包.物件96[1].屬性名稱.ToString(); str2 = 主角背包.物件96[2].屬性名稱.ToString(); str3 = 主角背包.物件96[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件96); } else { 是否為消耗品 = false; } break;
            case 97: str1 = 主角背包.物件97[1].屬性名稱.ToString(); str2 = 主角背包.物件97[2].屬性名稱.ToString(); str3 = 主角背包.物件97[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件97); } else { 是否為消耗品 = false; } break;
            case 98: str1 = 主角背包.物件98[1].屬性名稱.ToString(); str2 = 主角背包.物件98[2].屬性名稱.ToString(); str3 = 主角背包.物件98[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件98); } else { 是否為消耗品 = false; } break;
            case 99: str1 = 主角背包.物件99[1].屬性名稱.ToString(); str2 = 主角背包.物件99[2].屬性名稱.ToString(); str3 = 主角背包.物件99[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品 = true; 公共物件04.AddRange(主角背包.物件99); } else { 是否為消耗品 = false; } break;
        }
        if (是否為消耗品) //確定為消耗品才對比
        {
            //比對03和04
            對比序列();
        }
    }

    public void 販賣品確認消耗01(int i)
    {
        公共物件04.Clear();
        是否為消耗品 = false;
        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.販賣物00[1].屬性名稱.ToString(); str2 = 主角背包.販賣物00[2].屬性名稱.ToString(); str3 = 主角背包.販賣物00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物00); } else { 是否為消耗品01 = false; } break;
            case 1: str1 = 主角背包.販賣物01[1].屬性名稱.ToString(); str2 = 主角背包.販賣物01[2].屬性名稱.ToString(); str3 = 主角背包.販賣物01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物01); } else { 是否為消耗品01 = false; } break;
            case 2: str1 = 主角背包.販賣物02[1].屬性名稱.ToString(); str2 = 主角背包.販賣物02[2].屬性名稱.ToString(); str3 = 主角背包.販賣物02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物02); } else { 是否為消耗品01 = false; } break;
            case 3: str1 = 主角背包.販賣物03[1].屬性名稱.ToString(); str2 = 主角背包.販賣物03[2].屬性名稱.ToString(); str3 = 主角背包.販賣物03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物03); } else { 是否為消耗品01 = false; } break;
            case 4: str1 = 主角背包.販賣物04[1].屬性名稱.ToString(); str2 = 主角背包.販賣物04[2].屬性名稱.ToString(); str3 = 主角背包.販賣物04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物04); } else { 是否為消耗品01 = false; } break;
            case 5: str1 = 主角背包.販賣物05[1].屬性名稱.ToString(); str2 = 主角背包.販賣物05[2].屬性名稱.ToString(); str3 = 主角背包.販賣物05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物05); } else { 是否為消耗品01 = false; } break;
            case 6: str1 = 主角背包.販賣物06[1].屬性名稱.ToString(); str2 = 主角背包.販賣物06[2].屬性名稱.ToString(); str3 = 主角背包.販賣物06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物06); } else { 是否為消耗品01 = false; } break;
            case 7: str1 = 主角背包.販賣物07[1].屬性名稱.ToString(); str2 = 主角背包.販賣物07[2].屬性名稱.ToString(); str3 = 主角背包.販賣物07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物07); } else { 是否為消耗品01 = false; } break;
            case 8: str1 = 主角背包.販賣物08[1].屬性名稱.ToString(); str2 = 主角背包.販賣物08[2].屬性名稱.ToString(); str3 = 主角背包.販賣物08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物08); } else { 是否為消耗品01 = false; } break;
            case 9: str1 = 主角背包.販賣物09[1].屬性名稱.ToString(); str2 = 主角背包.販賣物09[2].屬性名稱.ToString(); str3 = 主角背包.販賣物09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物09); } else { 是否為消耗品01 = false; } break;
            case 10: str1 = 主角背包.販賣物10[1].屬性名稱.ToString(); str2 = 主角背包.販賣物10[2].屬性名稱.ToString(); str3 = 主角背包.販賣物10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物10); } else { 是否為消耗品01 = false; } break;
            case 11: str1 = 主角背包.販賣物11[1].屬性名稱.ToString(); str2 = 主角背包.販賣物11[2].屬性名稱.ToString(); str3 = 主角背包.販賣物11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物11); } else { 是否為消耗品01 = false; } break;
            case 12: str1 = 主角背包.販賣物12[1].屬性名稱.ToString(); str2 = 主角背包.販賣物12[2].屬性名稱.ToString(); str3 = 主角背包.販賣物12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物12); } else { 是否為消耗品01 = false; } break;
            case 13: str1 = 主角背包.販賣物13[1].屬性名稱.ToString(); str2 = 主角背包.販賣物13[2].屬性名稱.ToString(); str3 = 主角背包.販賣物13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物13); } else { 是否為消耗品01 = false; } break;
            case 14: str1 = 主角背包.販賣物14[1].屬性名稱.ToString(); str2 = 主角背包.販賣物14[2].屬性名稱.ToString(); str3 = 主角背包.販賣物14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物14); } else { 是否為消耗品01 = false; } break;
            case 15: str1 = 主角背包.販賣物15[1].屬性名稱.ToString(); str2 = 主角背包.販賣物15[2].屬性名稱.ToString(); str3 = 主角背包.販賣物15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物15); } else { 是否為消耗品01 = false; } break;
            case 16: str1 = 主角背包.販賣物16[1].屬性名稱.ToString(); str2 = 主角背包.販賣物16[2].屬性名稱.ToString(); str3 = 主角背包.販賣物16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物16); } else { 是否為消耗品01 = false; } break;
            case 17: str1 = 主角背包.販賣物17[1].屬性名稱.ToString(); str2 = 主角背包.販賣物17[2].屬性名稱.ToString(); str3 = 主角背包.販賣物17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物17); } else { 是否為消耗品01 = false; } break;
            case 18: str1 = 主角背包.販賣物18[1].屬性名稱.ToString(); str2 = 主角背包.販賣物18[2].屬性名稱.ToString(); str3 = 主角背包.販賣物18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物18); } else { 是否為消耗品01 = false; } break;
            case 19: str1 = 主角背包.販賣物19[1].屬性名稱.ToString(); str2 = 主角背包.販賣物19[2].屬性名稱.ToString(); str3 = 主角背包.販賣物19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物19); } else { 是否為消耗品01 = false; } break;
            case 20: str1 = 主角背包.販賣物20[1].屬性名稱.ToString(); str2 = 主角背包.販賣物20[2].屬性名稱.ToString(); str3 = 主角背包.販賣物20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物20); } else { 是否為消耗品01 = false; } break;
            case 21: str1 = 主角背包.販賣物21[1].屬性名稱.ToString(); str2 = 主角背包.販賣物21[2].屬性名稱.ToString(); str3 = 主角背包.販賣物21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物21); } else { 是否為消耗品01 = false; } break;
            case 22: str1 = 主角背包.販賣物22[1].屬性名稱.ToString(); str2 = 主角背包.販賣物22[2].屬性名稱.ToString(); str3 = 主角背包.販賣物22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物22); } else { 是否為消耗品01 = false; } break;
            case 23: str1 = 主角背包.販賣物23[1].屬性名稱.ToString(); str2 = 主角背包.販賣物23[2].屬性名稱.ToString(); str3 = 主角背包.販賣物23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物23); } else { 是否為消耗品01 = false; } break;
            case 24: str1 = 主角背包.販賣物24[1].屬性名稱.ToString(); str2 = 主角背包.販賣物24[2].屬性名稱.ToString(); str3 = 主角背包.販賣物24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物24); } else { 是否為消耗品01 = false; } break;
            case 25: str1 = 主角背包.販賣物25[1].屬性名稱.ToString(); str2 = 主角背包.販賣物25[2].屬性名稱.ToString(); str3 = 主角背包.販賣物25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物25); } else { 是否為消耗品01 = false; } break;
            case 26: str1 = 主角背包.販賣物26[1].屬性名稱.ToString(); str2 = 主角背包.販賣物26[2].屬性名稱.ToString(); str3 = 主角背包.販賣物26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物26); } else { 是否為消耗品01 = false; } break;
            case 27: str1 = 主角背包.販賣物27[1].屬性名稱.ToString(); str2 = 主角背包.販賣物27[2].屬性名稱.ToString(); str3 = 主角背包.販賣物27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物27); } else { 是否為消耗品01 = false; } break;
            case 28: str1 = 主角背包.販賣物28[1].屬性名稱.ToString(); str2 = 主角背包.販賣物28[2].屬性名稱.ToString(); str3 = 主角背包.販賣物28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物28); } else { 是否為消耗品01 = false; } break;
            case 29: str1 = 主角背包.販賣物29[1].屬性名稱.ToString(); str2 = 主角背包.販賣物29[2].屬性名稱.ToString(); str3 = 主角背包.販賣物29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物29); } else { 是否為消耗品01 = false; } break;
            case 30: str1 = 主角背包.販賣物30[1].屬性名稱.ToString(); str2 = 主角背包.販賣物30[2].屬性名稱.ToString(); str3 = 主角背包.販賣物30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物30); } else { 是否為消耗品01 = false; } break;
            case 31: str1 = 主角背包.販賣物31[1].屬性名稱.ToString(); str2 = 主角背包.販賣物31[2].屬性名稱.ToString(); str3 = 主角背包.販賣物31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物31); } else { 是否為消耗品01 = false; } break;
            case 32: str1 = 主角背包.販賣物32[1].屬性名稱.ToString(); str2 = 主角背包.販賣物32[2].屬性名稱.ToString(); str3 = 主角背包.販賣物32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物32); } else { 是否為消耗品01 = false; } break;
            case 33: str1 = 主角背包.販賣物33[1].屬性名稱.ToString(); str2 = 主角背包.販賣物33[2].屬性名稱.ToString(); str3 = 主角背包.販賣物33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物33); } else { 是否為消耗品01 = false; } break;
            case 34: str1 = 主角背包.販賣物34[1].屬性名稱.ToString(); str2 = 主角背包.販賣物34[2].屬性名稱.ToString(); str3 = 主角背包.販賣物34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物34); } else { 是否為消耗品01 = false; } break;
            case 35: str1 = 主角背包.販賣物35[1].屬性名稱.ToString(); str2 = 主角背包.販賣物35[2].屬性名稱.ToString(); str3 = 主角背包.販賣物35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物35); } else { 是否為消耗品01 = false; } break;
            case 36: str1 = 主角背包.販賣物36[1].屬性名稱.ToString(); str2 = 主角背包.販賣物36[2].屬性名稱.ToString(); str3 = 主角背包.販賣物36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物36); } else { 是否為消耗品01 = false; } break;
            case 37: str1 = 主角背包.販賣物37[1].屬性名稱.ToString(); str2 = 主角背包.販賣物37[2].屬性名稱.ToString(); str3 = 主角背包.販賣物37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物37); } else { 是否為消耗品01 = false; } break;
            case 38: str1 = 主角背包.販賣物38[1].屬性名稱.ToString(); str2 = 主角背包.販賣物38[2].屬性名稱.ToString(); str3 = 主角背包.販賣物38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物38); } else { 是否為消耗品01 = false; } break;
            case 39: str1 = 主角背包.販賣物39[1].屬性名稱.ToString(); str2 = 主角背包.販賣物39[2].屬性名稱.ToString(); str3 = 主角背包.販賣物39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物39); } else { 是否為消耗品01 = false; } break;
            case 40: str1 = 主角背包.販賣物40[1].屬性名稱.ToString(); str2 = 主角背包.販賣物40[2].屬性名稱.ToString(); str3 = 主角背包.販賣物40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物40); } else { 是否為消耗品01 = false; } break;
            case 41: str1 = 主角背包.販賣物41[1].屬性名稱.ToString(); str2 = 主角背包.販賣物41[2].屬性名稱.ToString(); str3 = 主角背包.販賣物41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物41); } else { 是否為消耗品01 = false; } break;
            case 42: str1 = 主角背包.販賣物42[1].屬性名稱.ToString(); str2 = 主角背包.販賣物42[2].屬性名稱.ToString(); str3 = 主角背包.販賣物42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物42); } else { 是否為消耗品01 = false; } break;
            case 43: str1 = 主角背包.販賣物43[1].屬性名稱.ToString(); str2 = 主角背包.販賣物43[2].屬性名稱.ToString(); str3 = 主角背包.販賣物43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物43); } else { 是否為消耗品01 = false; } break;
            case 44: str1 = 主角背包.販賣物44[1].屬性名稱.ToString(); str2 = 主角背包.販賣物44[2].屬性名稱.ToString(); str3 = 主角背包.販賣物44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物44); } else { 是否為消耗品01 = false; } break;
            case 45: str1 = 主角背包.販賣物45[1].屬性名稱.ToString(); str2 = 主角背包.販賣物45[2].屬性名稱.ToString(); str3 = 主角背包.販賣物45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物45); } else { 是否為消耗品01 = false; } break;
            case 46: str1 = 主角背包.販賣物46[1].屬性名稱.ToString(); str2 = 主角背包.販賣物46[2].屬性名稱.ToString(); str3 = 主角背包.販賣物46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物46); } else { 是否為消耗品01 = false; } break;
            case 47: str1 = 主角背包.販賣物47[1].屬性名稱.ToString(); str2 = 主角背包.販賣物47[2].屬性名稱.ToString(); str3 = 主角背包.販賣物47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物47); } else { 是否為消耗品01 = false; } break;
            case 48: str1 = 主角背包.販賣物48[1].屬性名稱.ToString(); str2 = 主角背包.販賣物48[2].屬性名稱.ToString(); str3 = 主角背包.販賣物48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物48); } else { 是否為消耗品01 = false; } break;
            case 49: str1 = 主角背包.販賣物49[1].屬性名稱.ToString(); str2 = 主角背包.販賣物49[2].屬性名稱.ToString(); str3 = 主角背包.販賣物49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.販賣物49); } else { 是否為消耗品01 = false; } break;
        }
    }
    public void 販賣品確認消耗02(int i)
    {
        公共物件06.Clear();
        是否為消耗品 = false;
        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.販賣物00[1].屬性名稱.ToString(); str2 = 主角背包.販賣物00[2].屬性名稱.ToString(); str3 = 主角背包.販賣物00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物00); } else { 是否為消耗品02 = false; } break;
            case 1: str1 = 主角背包.販賣物01[1].屬性名稱.ToString(); str2 = 主角背包.販賣物01[2].屬性名稱.ToString(); str3 = 主角背包.販賣物01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物01); } else { 是否為消耗品02 = false; } break;
            case 2: str1 = 主角背包.販賣物02[1].屬性名稱.ToString(); str2 = 主角背包.販賣物02[2].屬性名稱.ToString(); str3 = 主角背包.販賣物02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物02); } else { 是否為消耗品02 = false; } break;
            case 3: str1 = 主角背包.販賣物03[1].屬性名稱.ToString(); str2 = 主角背包.販賣物03[2].屬性名稱.ToString(); str3 = 主角背包.販賣物03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物03); } else { 是否為消耗品02 = false; } break;
            case 4: str1 = 主角背包.販賣物04[1].屬性名稱.ToString(); str2 = 主角背包.販賣物04[2].屬性名稱.ToString(); str3 = 主角背包.販賣物04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物04); } else { 是否為消耗品02 = false; } break;
            case 5: str1 = 主角背包.販賣物05[1].屬性名稱.ToString(); str2 = 主角背包.販賣物05[2].屬性名稱.ToString(); str3 = 主角背包.販賣物05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物05); } else { 是否為消耗品02 = false; } break;
            case 6: str1 = 主角背包.販賣物06[1].屬性名稱.ToString(); str2 = 主角背包.販賣物06[2].屬性名稱.ToString(); str3 = 主角背包.販賣物06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物06); } else { 是否為消耗品02 = false; } break;
            case 7: str1 = 主角背包.販賣物07[1].屬性名稱.ToString(); str2 = 主角背包.販賣物07[2].屬性名稱.ToString(); str3 = 主角背包.販賣物07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物07); } else { 是否為消耗品02 = false; } break;
            case 8: str1 = 主角背包.販賣物08[1].屬性名稱.ToString(); str2 = 主角背包.販賣物08[2].屬性名稱.ToString(); str3 = 主角背包.販賣物08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物08); } else { 是否為消耗品02 = false; } break;
            case 9: str1 = 主角背包.販賣物09[1].屬性名稱.ToString(); str2 = 主角背包.販賣物09[2].屬性名稱.ToString(); str3 = 主角背包.販賣物09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物09); } else { 是否為消耗品02 = false; } break;
            case 10: str1 = 主角背包.販賣物10[1].屬性名稱.ToString(); str2 = 主角背包.販賣物10[2].屬性名稱.ToString(); str3 = 主角背包.販賣物10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物10); } else { 是否為消耗品02 = false; } break;
            case 11: str1 = 主角背包.販賣物11[1].屬性名稱.ToString(); str2 = 主角背包.販賣物11[2].屬性名稱.ToString(); str3 = 主角背包.販賣物11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物11); } else { 是否為消耗品02 = false; } break;
            case 12: str1 = 主角背包.販賣物12[1].屬性名稱.ToString(); str2 = 主角背包.販賣物12[2].屬性名稱.ToString(); str3 = 主角背包.販賣物12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物12); } else { 是否為消耗品02 = false; } break;
            case 13: str1 = 主角背包.販賣物13[1].屬性名稱.ToString(); str2 = 主角背包.販賣物13[2].屬性名稱.ToString(); str3 = 主角背包.販賣物13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物13); } else { 是否為消耗品02 = false; } break;
            case 14: str1 = 主角背包.販賣物14[1].屬性名稱.ToString(); str2 = 主角背包.販賣物14[2].屬性名稱.ToString(); str3 = 主角背包.販賣物14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物14); } else { 是否為消耗品02 = false; } break;
            case 15: str1 = 主角背包.販賣物15[1].屬性名稱.ToString(); str2 = 主角背包.販賣物15[2].屬性名稱.ToString(); str3 = 主角背包.販賣物15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物15); } else { 是否為消耗品02 = false; } break;
            case 16: str1 = 主角背包.販賣物16[1].屬性名稱.ToString(); str2 = 主角背包.販賣物16[2].屬性名稱.ToString(); str3 = 主角背包.販賣物16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物16); } else { 是否為消耗品02 = false; } break;
            case 17: str1 = 主角背包.販賣物17[1].屬性名稱.ToString(); str2 = 主角背包.販賣物17[2].屬性名稱.ToString(); str3 = 主角背包.販賣物17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物17); } else { 是否為消耗品02 = false; } break;
            case 18: str1 = 主角背包.販賣物18[1].屬性名稱.ToString(); str2 = 主角背包.販賣物18[2].屬性名稱.ToString(); str3 = 主角背包.販賣物18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物18); } else { 是否為消耗品02 = false; } break;
            case 19: str1 = 主角背包.販賣物19[1].屬性名稱.ToString(); str2 = 主角背包.販賣物19[2].屬性名稱.ToString(); str3 = 主角背包.販賣物19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物19); } else { 是否為消耗品02 = false; } break;
            case 20: str1 = 主角背包.販賣物20[1].屬性名稱.ToString(); str2 = 主角背包.販賣物20[2].屬性名稱.ToString(); str3 = 主角背包.販賣物20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物20); } else { 是否為消耗品02 = false; } break;
            case 21: str1 = 主角背包.販賣物21[1].屬性名稱.ToString(); str2 = 主角背包.販賣物21[2].屬性名稱.ToString(); str3 = 主角背包.販賣物21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物21); } else { 是否為消耗品02 = false; } break;
            case 22: str1 = 主角背包.販賣物22[1].屬性名稱.ToString(); str2 = 主角背包.販賣物22[2].屬性名稱.ToString(); str3 = 主角背包.販賣物22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物22); } else { 是否為消耗品02 = false; } break;
            case 23: str1 = 主角背包.販賣物23[1].屬性名稱.ToString(); str2 = 主角背包.販賣物23[2].屬性名稱.ToString(); str3 = 主角背包.販賣物23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物23); } else { 是否為消耗品02 = false; } break;
            case 24: str1 = 主角背包.販賣物24[1].屬性名稱.ToString(); str2 = 主角背包.販賣物24[2].屬性名稱.ToString(); str3 = 主角背包.販賣物24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物24); } else { 是否為消耗品02 = false; } break;
            case 25: str1 = 主角背包.販賣物25[1].屬性名稱.ToString(); str2 = 主角背包.販賣物25[2].屬性名稱.ToString(); str3 = 主角背包.販賣物25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物25); } else { 是否為消耗品02 = false; } break;
            case 26: str1 = 主角背包.販賣物26[1].屬性名稱.ToString(); str2 = 主角背包.販賣物26[2].屬性名稱.ToString(); str3 = 主角背包.販賣物26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物26); } else { 是否為消耗品02 = false; } break;
            case 27: str1 = 主角背包.販賣物27[1].屬性名稱.ToString(); str2 = 主角背包.販賣物27[2].屬性名稱.ToString(); str3 = 主角背包.販賣物27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物27); } else { 是否為消耗品02 = false; } break;
            case 28: str1 = 主角背包.販賣物28[1].屬性名稱.ToString(); str2 = 主角背包.販賣物28[2].屬性名稱.ToString(); str3 = 主角背包.販賣物28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物28); } else { 是否為消耗品02 = false; } break;
            case 29: str1 = 主角背包.販賣物29[1].屬性名稱.ToString(); str2 = 主角背包.販賣物29[2].屬性名稱.ToString(); str3 = 主角背包.販賣物29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物29); } else { 是否為消耗品02 = false; } break;
            case 30: str1 = 主角背包.販賣物30[1].屬性名稱.ToString(); str2 = 主角背包.販賣物30[2].屬性名稱.ToString(); str3 = 主角背包.販賣物30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物30); } else { 是否為消耗品02 = false; } break;
            case 31: str1 = 主角背包.販賣物31[1].屬性名稱.ToString(); str2 = 主角背包.販賣物31[2].屬性名稱.ToString(); str3 = 主角背包.販賣物31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物31); } else { 是否為消耗品02 = false; } break;
            case 32: str1 = 主角背包.販賣物32[1].屬性名稱.ToString(); str2 = 主角背包.販賣物32[2].屬性名稱.ToString(); str3 = 主角背包.販賣物32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物32); } else { 是否為消耗品02 = false; } break;
            case 33: str1 = 主角背包.販賣物33[1].屬性名稱.ToString(); str2 = 主角背包.販賣物33[2].屬性名稱.ToString(); str3 = 主角背包.販賣物33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物33); } else { 是否為消耗品02 = false; } break;
            case 34: str1 = 主角背包.販賣物34[1].屬性名稱.ToString(); str2 = 主角背包.販賣物34[2].屬性名稱.ToString(); str3 = 主角背包.販賣物34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物34); } else { 是否為消耗品02 = false; } break;
            case 35: str1 = 主角背包.販賣物35[1].屬性名稱.ToString(); str2 = 主角背包.販賣物35[2].屬性名稱.ToString(); str3 = 主角背包.販賣物35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物35); } else { 是否為消耗品02 = false; } break;
            case 36: str1 = 主角背包.販賣物36[1].屬性名稱.ToString(); str2 = 主角背包.販賣物36[2].屬性名稱.ToString(); str3 = 主角背包.販賣物36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物36); } else { 是否為消耗品02 = false; } break;
            case 37: str1 = 主角背包.販賣物37[1].屬性名稱.ToString(); str2 = 主角背包.販賣物37[2].屬性名稱.ToString(); str3 = 主角背包.販賣物37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物37); } else { 是否為消耗品02 = false; } break;
            case 38: str1 = 主角背包.販賣物38[1].屬性名稱.ToString(); str2 = 主角背包.販賣物38[2].屬性名稱.ToString(); str3 = 主角背包.販賣物38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物38); } else { 是否為消耗品02 = false; } break;
            case 39: str1 = 主角背包.販賣物39[1].屬性名稱.ToString(); str2 = 主角背包.販賣物39[2].屬性名稱.ToString(); str3 = 主角背包.販賣物39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物39); } else { 是否為消耗品02 = false; } break;
            case 40: str1 = 主角背包.販賣物40[1].屬性名稱.ToString(); str2 = 主角背包.販賣物40[2].屬性名稱.ToString(); str3 = 主角背包.販賣物40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物40); } else { 是否為消耗品02 = false; } break;
            case 41: str1 = 主角背包.販賣物41[1].屬性名稱.ToString(); str2 = 主角背包.販賣物41[2].屬性名稱.ToString(); str3 = 主角背包.販賣物41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物41); } else { 是否為消耗品02 = false; } break;
            case 42: str1 = 主角背包.販賣物42[1].屬性名稱.ToString(); str2 = 主角背包.販賣物42[2].屬性名稱.ToString(); str3 = 主角背包.販賣物42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物42); } else { 是否為消耗品02 = false; } break;
            case 43: str1 = 主角背包.販賣物43[1].屬性名稱.ToString(); str2 = 主角背包.販賣物43[2].屬性名稱.ToString(); str3 = 主角背包.販賣物43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物43); } else { 是否為消耗品02 = false; } break;
            case 44: str1 = 主角背包.販賣物44[1].屬性名稱.ToString(); str2 = 主角背包.販賣物44[2].屬性名稱.ToString(); str3 = 主角背包.販賣物44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物44); } else { 是否為消耗品02 = false; } break;
            case 45: str1 = 主角背包.販賣物45[1].屬性名稱.ToString(); str2 = 主角背包.販賣物45[2].屬性名稱.ToString(); str3 = 主角背包.販賣物45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物45); } else { 是否為消耗品02 = false; } break;
            case 46: str1 = 主角背包.販賣物46[1].屬性名稱.ToString(); str2 = 主角背包.販賣物46[2].屬性名稱.ToString(); str3 = 主角背包.販賣物46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物46); } else { 是否為消耗品02 = false; } break;
            case 47: str1 = 主角背包.販賣物47[1].屬性名稱.ToString(); str2 = 主角背包.販賣物47[2].屬性名稱.ToString(); str3 = 主角背包.販賣物47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物47); } else { 是否為消耗品02 = false; } break;
            case 48: str1 = 主角背包.販賣物48[1].屬性名稱.ToString(); str2 = 主角背包.販賣物48[2].屬性名稱.ToString(); str3 = 主角背包.販賣物48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物48); } else { 是否為消耗品02 = false; } break;
            case 49: str1 = 主角背包.販賣物49[1].屬性名稱.ToString(); str2 = 主角背包.販賣物49[2].屬性名稱.ToString(); str3 = 主角背包.販賣物49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.販賣物49); } else { 是否為消耗品02 = false; } break;
        }
    }
    public void 背包確認消耗01(int i)
    {
        公共物件05.Clear();
        是否為消耗品 = false;
        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.物件00[1].屬性名稱.ToString(); str2 = 主角背包.物件00[2].屬性名稱.ToString(); str3 = 主角背包.物件00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件00); } else { 是否為消耗品01 = false; } break;
            case 1: str1 = 主角背包.物件01[1].屬性名稱.ToString(); str2 = 主角背包.物件01[2].屬性名稱.ToString(); str3 = 主角背包.物件01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件01); } else { 是否為消耗品01 = false; } break;
            case 2: str1 = 主角背包.物件02[1].屬性名稱.ToString(); str2 = 主角背包.物件02[2].屬性名稱.ToString(); str3 = 主角背包.物件02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件02); } else { 是否為消耗品01 = false; } break;
            case 3: str1 = 主角背包.物件03[1].屬性名稱.ToString(); str2 = 主角背包.物件03[2].屬性名稱.ToString(); str3 = 主角背包.物件03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件03); } else { 是否為消耗品01 = false; } break;
            case 4: str1 = 主角背包.物件04[1].屬性名稱.ToString(); str2 = 主角背包.物件04[2].屬性名稱.ToString(); str3 = 主角背包.物件04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件04); } else { 是否為消耗品01 = false; } break;
            case 5: str1 = 主角背包.物件05[1].屬性名稱.ToString(); str2 = 主角背包.物件05[2].屬性名稱.ToString(); str3 = 主角背包.物件05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件05); } else { 是否為消耗品01 = false; } break;
            case 6: str1 = 主角背包.物件06[1].屬性名稱.ToString(); str2 = 主角背包.物件06[2].屬性名稱.ToString(); str3 = 主角背包.物件06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件06); } else { 是否為消耗品01 = false; } break;
            case 7: str1 = 主角背包.物件07[1].屬性名稱.ToString(); str2 = 主角背包.物件07[2].屬性名稱.ToString(); str3 = 主角背包.物件07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件07); } else { 是否為消耗品01 = false; } break;
            case 8: str1 = 主角背包.物件08[1].屬性名稱.ToString(); str2 = 主角背包.物件08[2].屬性名稱.ToString(); str3 = 主角背包.物件08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件08); } else { 是否為消耗品01 = false; } break;
            case 9: str1 = 主角背包.物件09[1].屬性名稱.ToString(); str2 = 主角背包.物件09[2].屬性名稱.ToString(); str3 = 主角背包.物件09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件09); } else { 是否為消耗品01 = false; } break;
            case 10: str1 = 主角背包.物件10[1].屬性名稱.ToString(); str2 = 主角背包.物件10[2].屬性名稱.ToString(); str3 = 主角背包.物件10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件10); } else { 是否為消耗品01 = false; } break;
            case 11: str1 = 主角背包.物件11[1].屬性名稱.ToString(); str2 = 主角背包.物件11[2].屬性名稱.ToString(); str3 = 主角背包.物件11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件11); } else { 是否為消耗品01 = false; } break;
            case 12: str1 = 主角背包.物件12[1].屬性名稱.ToString(); str2 = 主角背包.物件12[2].屬性名稱.ToString(); str3 = 主角背包.物件12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件12); } else { 是否為消耗品01 = false; } break;
            case 13: str1 = 主角背包.物件13[1].屬性名稱.ToString(); str2 = 主角背包.物件13[2].屬性名稱.ToString(); str3 = 主角背包.物件13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件13); } else { 是否為消耗品01 = false; } break;
            case 14: str1 = 主角背包.物件14[1].屬性名稱.ToString(); str2 = 主角背包.物件14[2].屬性名稱.ToString(); str3 = 主角背包.物件14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件14); } else { 是否為消耗品01 = false; } break;
            case 15: str1 = 主角背包.物件15[1].屬性名稱.ToString(); str2 = 主角背包.物件15[2].屬性名稱.ToString(); str3 = 主角背包.物件15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件15); } else { 是否為消耗品01 = false; } break;
            case 16: str1 = 主角背包.物件16[1].屬性名稱.ToString(); str2 = 主角背包.物件16[2].屬性名稱.ToString(); str3 = 主角背包.物件16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件16); } else { 是否為消耗品01 = false; } break;
            case 17: str1 = 主角背包.物件17[1].屬性名稱.ToString(); str2 = 主角背包.物件17[2].屬性名稱.ToString(); str3 = 主角背包.物件17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件17); } else { 是否為消耗品01 = false; } break;
            case 18: str1 = 主角背包.物件18[1].屬性名稱.ToString(); str2 = 主角背包.物件18[2].屬性名稱.ToString(); str3 = 主角背包.物件18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件18); } else { 是否為消耗品01 = false; } break;
            case 19: str1 = 主角背包.物件19[1].屬性名稱.ToString(); str2 = 主角背包.物件19[2].屬性名稱.ToString(); str3 = 主角背包.物件19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件19); } else { 是否為消耗品01 = false; } break;
            case 20: str1 = 主角背包.物件20[1].屬性名稱.ToString(); str2 = 主角背包.物件20[2].屬性名稱.ToString(); str3 = 主角背包.物件20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件20); } else { 是否為消耗品01 = false; } break;
            case 21: str1 = 主角背包.物件21[1].屬性名稱.ToString(); str2 = 主角背包.物件21[2].屬性名稱.ToString(); str3 = 主角背包.物件21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件21); } else { 是否為消耗品01 = false; } break;
            case 22: str1 = 主角背包.物件22[1].屬性名稱.ToString(); str2 = 主角背包.物件22[2].屬性名稱.ToString(); str3 = 主角背包.物件22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件22); } else { 是否為消耗品01 = false; } break;
            case 23: str1 = 主角背包.物件23[1].屬性名稱.ToString(); str2 = 主角背包.物件23[2].屬性名稱.ToString(); str3 = 主角背包.物件23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件23); } else { 是否為消耗品01 = false; } break;
            case 24: str1 = 主角背包.物件24[1].屬性名稱.ToString(); str2 = 主角背包.物件24[2].屬性名稱.ToString(); str3 = 主角背包.物件24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件24); } else { 是否為消耗品01 = false; } break;
            case 25: str1 = 主角背包.物件25[1].屬性名稱.ToString(); str2 = 主角背包.物件25[2].屬性名稱.ToString(); str3 = 主角背包.物件25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件25); } else { 是否為消耗品01 = false; } break;
            case 26: str1 = 主角背包.物件26[1].屬性名稱.ToString(); str2 = 主角背包.物件26[2].屬性名稱.ToString(); str3 = 主角背包.物件26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件26); } else { 是否為消耗品01 = false; } break;
            case 27: str1 = 主角背包.物件27[1].屬性名稱.ToString(); str2 = 主角背包.物件27[2].屬性名稱.ToString(); str3 = 主角背包.物件27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件27); } else { 是否為消耗品01 = false; } break;
            case 28: str1 = 主角背包.物件28[1].屬性名稱.ToString(); str2 = 主角背包.物件28[2].屬性名稱.ToString(); str3 = 主角背包.物件28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件28); } else { 是否為消耗品01 = false; } break;
            case 29: str1 = 主角背包.物件29[1].屬性名稱.ToString(); str2 = 主角背包.物件29[2].屬性名稱.ToString(); str3 = 主角背包.物件29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件29); } else { 是否為消耗品01 = false; } break;
            case 30: str1 = 主角背包.物件30[1].屬性名稱.ToString(); str2 = 主角背包.物件30[2].屬性名稱.ToString(); str3 = 主角背包.物件30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件30); } else { 是否為消耗品01 = false; } break;
            case 31: str1 = 主角背包.物件31[1].屬性名稱.ToString(); str2 = 主角背包.物件31[2].屬性名稱.ToString(); str3 = 主角背包.物件31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件31); } else { 是否為消耗品01 = false; } break;
            case 32: str1 = 主角背包.物件32[1].屬性名稱.ToString(); str2 = 主角背包.物件32[2].屬性名稱.ToString(); str3 = 主角背包.物件32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件32); } else { 是否為消耗品01 = false; } break;
            case 33: str1 = 主角背包.物件33[1].屬性名稱.ToString(); str2 = 主角背包.物件33[2].屬性名稱.ToString(); str3 = 主角背包.物件33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件33); } else { 是否為消耗品01 = false; } break;
            case 34: str1 = 主角背包.物件34[1].屬性名稱.ToString(); str2 = 主角背包.物件34[2].屬性名稱.ToString(); str3 = 主角背包.物件34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件34); } else { 是否為消耗品01 = false; } break;
            case 35: str1 = 主角背包.物件35[1].屬性名稱.ToString(); str2 = 主角背包.物件35[2].屬性名稱.ToString(); str3 = 主角背包.物件35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件35); } else { 是否為消耗品01 = false; } break;
            case 36: str1 = 主角背包.物件36[1].屬性名稱.ToString(); str2 = 主角背包.物件36[2].屬性名稱.ToString(); str3 = 主角背包.物件36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件36); } else { 是否為消耗品01 = false; } break;
            case 37: str1 = 主角背包.物件37[1].屬性名稱.ToString(); str2 = 主角背包.物件37[2].屬性名稱.ToString(); str3 = 主角背包.物件37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件37); } else { 是否為消耗品01 = false; } break;
            case 38: str1 = 主角背包.物件38[1].屬性名稱.ToString(); str2 = 主角背包.物件38[2].屬性名稱.ToString(); str3 = 主角背包.物件38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件38); } else { 是否為消耗品01 = false; } break;
            case 39: str1 = 主角背包.物件39[1].屬性名稱.ToString(); str2 = 主角背包.物件39[2].屬性名稱.ToString(); str3 = 主角背包.物件39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件39); } else { 是否為消耗品01 = false; } break;
            case 40: str1 = 主角背包.物件40[1].屬性名稱.ToString(); str2 = 主角背包.物件40[2].屬性名稱.ToString(); str3 = 主角背包.物件40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件40); } else { 是否為消耗品01 = false; } break;
            case 41: str1 = 主角背包.物件41[1].屬性名稱.ToString(); str2 = 主角背包.物件41[2].屬性名稱.ToString(); str3 = 主角背包.物件41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件41); } else { 是否為消耗品01 = false; } break;
            case 42: str1 = 主角背包.物件42[1].屬性名稱.ToString(); str2 = 主角背包.物件42[2].屬性名稱.ToString(); str3 = 主角背包.物件42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件42); } else { 是否為消耗品01 = false; } break;
            case 43: str1 = 主角背包.物件43[1].屬性名稱.ToString(); str2 = 主角背包.物件43[2].屬性名稱.ToString(); str3 = 主角背包.物件43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件43); } else { 是否為消耗品01 = false; } break;
            case 44: str1 = 主角背包.物件44[1].屬性名稱.ToString(); str2 = 主角背包.物件44[2].屬性名稱.ToString(); str3 = 主角背包.物件44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件44); } else { 是否為消耗品01 = false; } break;
            case 45: str1 = 主角背包.物件45[1].屬性名稱.ToString(); str2 = 主角背包.物件45[2].屬性名稱.ToString(); str3 = 主角背包.物件45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件45); } else { 是否為消耗品01 = false; } break;
            case 46: str1 = 主角背包.物件46[1].屬性名稱.ToString(); str2 = 主角背包.物件46[2].屬性名稱.ToString(); str3 = 主角背包.物件46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件46); } else { 是否為消耗品01 = false; } break;
            case 47: str1 = 主角背包.物件47[1].屬性名稱.ToString(); str2 = 主角背包.物件47[2].屬性名稱.ToString(); str3 = 主角背包.物件47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件47); } else { 是否為消耗品01 = false; } break;
            case 48: str1 = 主角背包.物件48[1].屬性名稱.ToString(); str2 = 主角背包.物件48[2].屬性名稱.ToString(); str3 = 主角背包.物件48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件48); } else { 是否為消耗品01 = false; } break;
            case 49: str1 = 主角背包.物件49[1].屬性名稱.ToString(); str2 = 主角背包.物件49[2].屬性名稱.ToString(); str3 = 主角背包.物件49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件49); } else { 是否為消耗品01 = false; } break;
            case 50: str1 = 主角背包.物件50[1].屬性名稱.ToString(); str2 = 主角背包.物件50[2].屬性名稱.ToString(); str3 = 主角背包.物件50[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件50); } else { 是否為消耗品01 = false; } break;
            case 51: str1 = 主角背包.物件51[1].屬性名稱.ToString(); str2 = 主角背包.物件51[2].屬性名稱.ToString(); str3 = 主角背包.物件51[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件51); } else { 是否為消耗品01 = false; } break;
            case 52: str1 = 主角背包.物件52[1].屬性名稱.ToString(); str2 = 主角背包.物件52[2].屬性名稱.ToString(); str3 = 主角背包.物件52[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件52); } else { 是否為消耗品01 = false; } break;
            case 53: str1 = 主角背包.物件53[1].屬性名稱.ToString(); str2 = 主角背包.物件53[2].屬性名稱.ToString(); str3 = 主角背包.物件53[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件53); } else { 是否為消耗品01 = false; } break;
            case 54: str1 = 主角背包.物件54[1].屬性名稱.ToString(); str2 = 主角背包.物件54[2].屬性名稱.ToString(); str3 = 主角背包.物件54[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件54); } else { 是否為消耗品01 = false; } break;
            case 55: str1 = 主角背包.物件55[1].屬性名稱.ToString(); str2 = 主角背包.物件55[2].屬性名稱.ToString(); str3 = 主角背包.物件55[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件55); } else { 是否為消耗品01 = false; } break;
            case 56: str1 = 主角背包.物件56[1].屬性名稱.ToString(); str2 = 主角背包.物件56[2].屬性名稱.ToString(); str3 = 主角背包.物件56[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件56); } else { 是否為消耗品01 = false; } break;
            case 57: str1 = 主角背包.物件57[1].屬性名稱.ToString(); str2 = 主角背包.物件57[2].屬性名稱.ToString(); str3 = 主角背包.物件57[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件57); } else { 是否為消耗品01 = false; } break;
            case 58: str1 = 主角背包.物件58[1].屬性名稱.ToString(); str2 = 主角背包.物件58[2].屬性名稱.ToString(); str3 = 主角背包.物件58[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件58); } else { 是否為消耗品01 = false; } break;
            case 59: str1 = 主角背包.物件59[1].屬性名稱.ToString(); str2 = 主角背包.物件59[2].屬性名稱.ToString(); str3 = 主角背包.物件59[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件59); } else { 是否為消耗品01 = false; } break;
            case 60: str1 = 主角背包.物件60[1].屬性名稱.ToString(); str2 = 主角背包.物件60[2].屬性名稱.ToString(); str3 = 主角背包.物件60[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件60); } else { 是否為消耗品01 = false; } break;
            case 61: str1 = 主角背包.物件61[1].屬性名稱.ToString(); str2 = 主角背包.物件61[2].屬性名稱.ToString(); str3 = 主角背包.物件61[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件61); } else { 是否為消耗品01 = false; } break;
            case 62: str1 = 主角背包.物件62[1].屬性名稱.ToString(); str2 = 主角背包.物件62[2].屬性名稱.ToString(); str3 = 主角背包.物件62[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件62); } else { 是否為消耗品01 = false; } break;
            case 63: str1 = 主角背包.物件63[1].屬性名稱.ToString(); str2 = 主角背包.物件63[2].屬性名稱.ToString(); str3 = 主角背包.物件63[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件63); } else { 是否為消耗品01 = false; } break;
            case 64: str1 = 主角背包.物件64[1].屬性名稱.ToString(); str2 = 主角背包.物件64[2].屬性名稱.ToString(); str3 = 主角背包.物件64[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件64); } else { 是否為消耗品01 = false; } break;
            case 65: str1 = 主角背包.物件65[1].屬性名稱.ToString(); str2 = 主角背包.物件65[2].屬性名稱.ToString(); str3 = 主角背包.物件65[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件65); } else { 是否為消耗品01 = false; } break;
            case 66: str1 = 主角背包.物件66[1].屬性名稱.ToString(); str2 = 主角背包.物件66[2].屬性名稱.ToString(); str3 = 主角背包.物件66[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件66); } else { 是否為消耗品01 = false; } break;
            case 67: str1 = 主角背包.物件67[1].屬性名稱.ToString(); str2 = 主角背包.物件67[2].屬性名稱.ToString(); str3 = 主角背包.物件67[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件67); } else { 是否為消耗品01 = false; } break;
            case 68: str1 = 主角背包.物件68[1].屬性名稱.ToString(); str2 = 主角背包.物件68[2].屬性名稱.ToString(); str3 = 主角背包.物件68[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件68); } else { 是否為消耗品01 = false; } break;
            case 69: str1 = 主角背包.物件69[1].屬性名稱.ToString(); str2 = 主角背包.物件69[2].屬性名稱.ToString(); str3 = 主角背包.物件69[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件69); } else { 是否為消耗品01 = false; } break;
            case 70: str1 = 主角背包.物件70[1].屬性名稱.ToString(); str2 = 主角背包.物件70[2].屬性名稱.ToString(); str3 = 主角背包.物件70[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件70); } else { 是否為消耗品01 = false; } break;
            case 71: str1 = 主角背包.物件71[1].屬性名稱.ToString(); str2 = 主角背包.物件71[2].屬性名稱.ToString(); str3 = 主角背包.物件71[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件71); } else { 是否為消耗品01 = false; } break;
            case 72: str1 = 主角背包.物件72[1].屬性名稱.ToString(); str2 = 主角背包.物件72[2].屬性名稱.ToString(); str3 = 主角背包.物件72[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件72); } else { 是否為消耗品01 = false; } break;
            case 73: str1 = 主角背包.物件73[1].屬性名稱.ToString(); str2 = 主角背包.物件73[2].屬性名稱.ToString(); str3 = 主角背包.物件73[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件73); } else { 是否為消耗品01 = false; } break;
            case 74: str1 = 主角背包.物件74[1].屬性名稱.ToString(); str2 = 主角背包.物件74[2].屬性名稱.ToString(); str3 = 主角背包.物件74[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件74); } else { 是否為消耗品01 = false; } break;
            case 75: str1 = 主角背包.物件75[1].屬性名稱.ToString(); str2 = 主角背包.物件75[2].屬性名稱.ToString(); str3 = 主角背包.物件75[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件75); } else { 是否為消耗品01 = false; } break;
            case 76: str1 = 主角背包.物件76[1].屬性名稱.ToString(); str2 = 主角背包.物件76[2].屬性名稱.ToString(); str3 = 主角背包.物件76[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件76); } else { 是否為消耗品01 = false; } break;
            case 77: str1 = 主角背包.物件77[1].屬性名稱.ToString(); str2 = 主角背包.物件77[2].屬性名稱.ToString(); str3 = 主角背包.物件77[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件77); } else { 是否為消耗品01 = false; } break;
            case 78: str1 = 主角背包.物件78[1].屬性名稱.ToString(); str2 = 主角背包.物件78[2].屬性名稱.ToString(); str3 = 主角背包.物件78[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件78); } else { 是否為消耗品01 = false; } break;
            case 79: str1 = 主角背包.物件79[1].屬性名稱.ToString(); str2 = 主角背包.物件79[2].屬性名稱.ToString(); str3 = 主角背包.物件79[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件79); } else { 是否為消耗品01 = false; } break;
            case 80: str1 = 主角背包.物件80[1].屬性名稱.ToString(); str2 = 主角背包.物件80[2].屬性名稱.ToString(); str3 = 主角背包.物件80[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件80); } else { 是否為消耗品01 = false; } break;
            case 81: str1 = 主角背包.物件81[1].屬性名稱.ToString(); str2 = 主角背包.物件81[2].屬性名稱.ToString(); str3 = 主角背包.物件81[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件81); } else { 是否為消耗品01 = false; } break;
            case 82: str1 = 主角背包.物件82[1].屬性名稱.ToString(); str2 = 主角背包.物件82[2].屬性名稱.ToString(); str3 = 主角背包.物件82[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件82); } else { 是否為消耗品01 = false; } break;
            case 83: str1 = 主角背包.物件83[1].屬性名稱.ToString(); str2 = 主角背包.物件83[2].屬性名稱.ToString(); str3 = 主角背包.物件83[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件83); } else { 是否為消耗品01 = false; } break;
            case 84: str1 = 主角背包.物件84[1].屬性名稱.ToString(); str2 = 主角背包.物件84[2].屬性名稱.ToString(); str3 = 主角背包.物件84[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件84); } else { 是否為消耗品01 = false; } break;
            case 85: str1 = 主角背包.物件85[1].屬性名稱.ToString(); str2 = 主角背包.物件85[2].屬性名稱.ToString(); str3 = 主角背包.物件85[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件85); } else { 是否為消耗品01 = false; } break;
            case 86: str1 = 主角背包.物件86[1].屬性名稱.ToString(); str2 = 主角背包.物件86[2].屬性名稱.ToString(); str3 = 主角背包.物件86[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件86); } else { 是否為消耗品01 = false; } break;
            case 87: str1 = 主角背包.物件87[1].屬性名稱.ToString(); str2 = 主角背包.物件87[2].屬性名稱.ToString(); str3 = 主角背包.物件87[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件87); } else { 是否為消耗品01 = false; } break;
            case 88: str1 = 主角背包.物件88[1].屬性名稱.ToString(); str2 = 主角背包.物件88[2].屬性名稱.ToString(); str3 = 主角背包.物件88[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件88); } else { 是否為消耗品01 = false; } break;
            case 89: str1 = 主角背包.物件89[1].屬性名稱.ToString(); str2 = 主角背包.物件89[2].屬性名稱.ToString(); str3 = 主角背包.物件89[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件89); } else { 是否為消耗品01 = false; } break;
            case 90: str1 = 主角背包.物件90[1].屬性名稱.ToString(); str2 = 主角背包.物件90[2].屬性名稱.ToString(); str3 = 主角背包.物件90[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件90); } else { 是否為消耗品01 = false; } break;
            case 91: str1 = 主角背包.物件91[1].屬性名稱.ToString(); str2 = 主角背包.物件91[2].屬性名稱.ToString(); str3 = 主角背包.物件91[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件91); } else { 是否為消耗品01 = false; } break;
            case 92: str1 = 主角背包.物件92[1].屬性名稱.ToString(); str2 = 主角背包.物件92[2].屬性名稱.ToString(); str3 = 主角背包.物件92[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件92); } else { 是否為消耗品01 = false; } break;
            case 93: str1 = 主角背包.物件93[1].屬性名稱.ToString(); str2 = 主角背包.物件93[2].屬性名稱.ToString(); str3 = 主角背包.物件93[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件93); } else { 是否為消耗品01 = false; } break;
            case 94: str1 = 主角背包.物件94[1].屬性名稱.ToString(); str2 = 主角背包.物件94[2].屬性名稱.ToString(); str3 = 主角背包.物件94[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件94); } else { 是否為消耗品01 = false; } break;
            case 95: str1 = 主角背包.物件95[1].屬性名稱.ToString(); str2 = 主角背包.物件95[2].屬性名稱.ToString(); str3 = 主角背包.物件95[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件95); } else { 是否為消耗品01 = false; } break;
            case 96: str1 = 主角背包.物件96[1].屬性名稱.ToString(); str2 = 主角背包.物件96[2].屬性名稱.ToString(); str3 = 主角背包.物件96[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件96); } else { 是否為消耗品01 = false; } break;
            case 97: str1 = 主角背包.物件97[1].屬性名稱.ToString(); str2 = 主角背包.物件97[2].屬性名稱.ToString(); str3 = 主角背包.物件97[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件97); } else { 是否為消耗品01 = false; } break;
            case 98: str1 = 主角背包.物件98[1].屬性名稱.ToString(); str2 = 主角背包.物件98[2].屬性名稱.ToString(); str3 = 主角背包.物件98[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件98); } else { 是否為消耗品01 = false; } break;
            case 99: str1 = 主角背包.物件99[1].屬性名稱.ToString(); str2 = 主角背包.物件99[2].屬性名稱.ToString(); str3 = 主角背包.物件99[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品01 = true; 公共物件05.AddRange(主角背包.物件99); } else { 是否為消耗品01 = false; } break;
        }
    }
    public void 背包確認消耗02(int i)
    {
        公共物件06.Clear();
        是否為消耗品 = false;
        //先確認是否為消耗品  如果是才複製物件
        switch (i)
        {
            case 0: str1 = 主角背包.物件00[1].屬性名稱.ToString(); str2 = 主角背包.物件00[2].屬性名稱.ToString(); str3 = 主角背包.物件00[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件00); } else { 是否為消耗品02 = false; } break;
            case 1: str1 = 主角背包.物件01[1].屬性名稱.ToString(); str2 = 主角背包.物件01[2].屬性名稱.ToString(); str3 = 主角背包.物件01[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件01); } else { 是否為消耗品02 = false; } break;
            case 2: str1 = 主角背包.物件02[1].屬性名稱.ToString(); str2 = 主角背包.物件02[2].屬性名稱.ToString(); str3 = 主角背包.物件02[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件02); } else { 是否為消耗品02 = false; } break;
            case 3: str1 = 主角背包.物件03[1].屬性名稱.ToString(); str2 = 主角背包.物件03[2].屬性名稱.ToString(); str3 = 主角背包.物件03[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件03); } else { 是否為消耗品02 = false; } break;
            case 4: str1 = 主角背包.物件04[1].屬性名稱.ToString(); str2 = 主角背包.物件04[2].屬性名稱.ToString(); str3 = 主角背包.物件04[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件04); } else { 是否為消耗品02 = false; } break;
            case 5: str1 = 主角背包.物件05[1].屬性名稱.ToString(); str2 = 主角背包.物件05[2].屬性名稱.ToString(); str3 = 主角背包.物件05[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件05); } else { 是否為消耗品02 = false; } break;
            case 6: str1 = 主角背包.物件06[1].屬性名稱.ToString(); str2 = 主角背包.物件06[2].屬性名稱.ToString(); str3 = 主角背包.物件06[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件06); } else { 是否為消耗品02 = false; } break;
            case 7: str1 = 主角背包.物件07[1].屬性名稱.ToString(); str2 = 主角背包.物件07[2].屬性名稱.ToString(); str3 = 主角背包.物件07[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件07); } else { 是否為消耗品02 = false; } break;
            case 8: str1 = 主角背包.物件08[1].屬性名稱.ToString(); str2 = 主角背包.物件08[2].屬性名稱.ToString(); str3 = 主角背包.物件08[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件08); } else { 是否為消耗品02 = false; } break;
            case 9: str1 = 主角背包.物件09[1].屬性名稱.ToString(); str2 = 主角背包.物件09[2].屬性名稱.ToString(); str3 = 主角背包.物件09[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件09); } else { 是否為消耗品02 = false; } break;
            case 10: str1 = 主角背包.物件10[1].屬性名稱.ToString(); str2 = 主角背包.物件10[2].屬性名稱.ToString(); str3 = 主角背包.物件10[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件10); } else { 是否為消耗品02 = false; } break;
            case 11: str1 = 主角背包.物件11[1].屬性名稱.ToString(); str2 = 主角背包.物件11[2].屬性名稱.ToString(); str3 = 主角背包.物件11[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件11); } else { 是否為消耗品02 = false; } break;
            case 12: str1 = 主角背包.物件12[1].屬性名稱.ToString(); str2 = 主角背包.物件12[2].屬性名稱.ToString(); str3 = 主角背包.物件12[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件12); } else { 是否為消耗品02 = false; } break;
            case 13: str1 = 主角背包.物件13[1].屬性名稱.ToString(); str2 = 主角背包.物件13[2].屬性名稱.ToString(); str3 = 主角背包.物件13[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件13); } else { 是否為消耗品02 = false; } break;
            case 14: str1 = 主角背包.物件14[1].屬性名稱.ToString(); str2 = 主角背包.物件14[2].屬性名稱.ToString(); str3 = 主角背包.物件14[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件14); } else { 是否為消耗品02 = false; } break;
            case 15: str1 = 主角背包.物件15[1].屬性名稱.ToString(); str2 = 主角背包.物件15[2].屬性名稱.ToString(); str3 = 主角背包.物件15[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件15); } else { 是否為消耗品02 = false; } break;
            case 16: str1 = 主角背包.物件16[1].屬性名稱.ToString(); str2 = 主角背包.物件16[2].屬性名稱.ToString(); str3 = 主角背包.物件16[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件16); } else { 是否為消耗品02 = false; } break;
            case 17: str1 = 主角背包.物件17[1].屬性名稱.ToString(); str2 = 主角背包.物件17[2].屬性名稱.ToString(); str3 = 主角背包.物件17[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件17); } else { 是否為消耗品02 = false; } break;
            case 18: str1 = 主角背包.物件18[1].屬性名稱.ToString(); str2 = 主角背包.物件18[2].屬性名稱.ToString(); str3 = 主角背包.物件18[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件18); } else { 是否為消耗品02 = false; } break;
            case 19: str1 = 主角背包.物件19[1].屬性名稱.ToString(); str2 = 主角背包.物件19[2].屬性名稱.ToString(); str3 = 主角背包.物件19[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件19); } else { 是否為消耗品02 = false; } break;
            case 20: str1 = 主角背包.物件20[1].屬性名稱.ToString(); str2 = 主角背包.物件20[2].屬性名稱.ToString(); str3 = 主角背包.物件20[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件20); } else { 是否為消耗品02 = false; } break;
            case 21: str1 = 主角背包.物件21[1].屬性名稱.ToString(); str2 = 主角背包.物件21[2].屬性名稱.ToString(); str3 = 主角背包.物件21[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件21); } else { 是否為消耗品02 = false; } break;
            case 22: str1 = 主角背包.物件22[1].屬性名稱.ToString(); str2 = 主角背包.物件22[2].屬性名稱.ToString(); str3 = 主角背包.物件22[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件22); } else { 是否為消耗品02 = false; } break;
            case 23: str1 = 主角背包.物件23[1].屬性名稱.ToString(); str2 = 主角背包.物件23[2].屬性名稱.ToString(); str3 = 主角背包.物件23[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件23); } else { 是否為消耗品02 = false; } break;
            case 24: str1 = 主角背包.物件24[1].屬性名稱.ToString(); str2 = 主角背包.物件24[2].屬性名稱.ToString(); str3 = 主角背包.物件24[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件24); } else { 是否為消耗品02 = false; } break;
            case 25: str1 = 主角背包.物件25[1].屬性名稱.ToString(); str2 = 主角背包.物件25[2].屬性名稱.ToString(); str3 = 主角背包.物件25[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件25); } else { 是否為消耗品02 = false; } break;
            case 26: str1 = 主角背包.物件26[1].屬性名稱.ToString(); str2 = 主角背包.物件26[2].屬性名稱.ToString(); str3 = 主角背包.物件26[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件26); } else { 是否為消耗品02 = false; } break;
            case 27: str1 = 主角背包.物件27[1].屬性名稱.ToString(); str2 = 主角背包.物件27[2].屬性名稱.ToString(); str3 = 主角背包.物件27[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件27); } else { 是否為消耗品02 = false; } break;
            case 28: str1 = 主角背包.物件28[1].屬性名稱.ToString(); str2 = 主角背包.物件28[2].屬性名稱.ToString(); str3 = 主角背包.物件28[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件28); } else { 是否為消耗品02 = false; } break;
            case 29: str1 = 主角背包.物件29[1].屬性名稱.ToString(); str2 = 主角背包.物件29[2].屬性名稱.ToString(); str3 = 主角背包.物件29[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件29); } else { 是否為消耗品02 = false; } break;
            case 30: str1 = 主角背包.物件30[1].屬性名稱.ToString(); str2 = 主角背包.物件30[2].屬性名稱.ToString(); str3 = 主角背包.物件30[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件30); } else { 是否為消耗品02 = false; } break;
            case 31: str1 = 主角背包.物件31[1].屬性名稱.ToString(); str2 = 主角背包.物件31[2].屬性名稱.ToString(); str3 = 主角背包.物件31[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件31); } else { 是否為消耗品02 = false; } break;
            case 32: str1 = 主角背包.物件32[1].屬性名稱.ToString(); str2 = 主角背包.物件32[2].屬性名稱.ToString(); str3 = 主角背包.物件32[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件32); } else { 是否為消耗品02 = false; } break;
            case 33: str1 = 主角背包.物件33[1].屬性名稱.ToString(); str2 = 主角背包.物件33[2].屬性名稱.ToString(); str3 = 主角背包.物件33[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件33); } else { 是否為消耗品02 = false; } break;
            case 34: str1 = 主角背包.物件34[1].屬性名稱.ToString(); str2 = 主角背包.物件34[2].屬性名稱.ToString(); str3 = 主角背包.物件34[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件34); } else { 是否為消耗品02 = false; } break;
            case 35: str1 = 主角背包.物件35[1].屬性名稱.ToString(); str2 = 主角背包.物件35[2].屬性名稱.ToString(); str3 = 主角背包.物件35[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件35); } else { 是否為消耗品02 = false; } break;
            case 36: str1 = 主角背包.物件36[1].屬性名稱.ToString(); str2 = 主角背包.物件36[2].屬性名稱.ToString(); str3 = 主角背包.物件36[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件36); } else { 是否為消耗品02 = false; } break;
            case 37: str1 = 主角背包.物件37[1].屬性名稱.ToString(); str2 = 主角背包.物件37[2].屬性名稱.ToString(); str3 = 主角背包.物件37[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件37); } else { 是否為消耗品02 = false; } break;
            case 38: str1 = 主角背包.物件38[1].屬性名稱.ToString(); str2 = 主角背包.物件38[2].屬性名稱.ToString(); str3 = 主角背包.物件38[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件38); } else { 是否為消耗品02 = false; } break;
            case 39: str1 = 主角背包.物件39[1].屬性名稱.ToString(); str2 = 主角背包.物件39[2].屬性名稱.ToString(); str3 = 主角背包.物件39[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件39); } else { 是否為消耗品02 = false; } break;
            case 40: str1 = 主角背包.物件40[1].屬性名稱.ToString(); str2 = 主角背包.物件40[2].屬性名稱.ToString(); str3 = 主角背包.物件40[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件40); } else { 是否為消耗品02 = false; } break;
            case 41: str1 = 主角背包.物件41[1].屬性名稱.ToString(); str2 = 主角背包.物件41[2].屬性名稱.ToString(); str3 = 主角背包.物件41[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件41); } else { 是否為消耗品02 = false; } break;
            case 42: str1 = 主角背包.物件42[1].屬性名稱.ToString(); str2 = 主角背包.物件42[2].屬性名稱.ToString(); str3 = 主角背包.物件42[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件42); } else { 是否為消耗品02 = false; } break;
            case 43: str1 = 主角背包.物件43[1].屬性名稱.ToString(); str2 = 主角背包.物件43[2].屬性名稱.ToString(); str3 = 主角背包.物件43[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件43); } else { 是否為消耗品02 = false; } break;
            case 44: str1 = 主角背包.物件44[1].屬性名稱.ToString(); str2 = 主角背包.物件44[2].屬性名稱.ToString(); str3 = 主角背包.物件44[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件44); } else { 是否為消耗品02 = false; } break;
            case 45: str1 = 主角背包.物件45[1].屬性名稱.ToString(); str2 = 主角背包.物件45[2].屬性名稱.ToString(); str3 = 主角背包.物件45[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件45); } else { 是否為消耗品02 = false; } break;
            case 46: str1 = 主角背包.物件46[1].屬性名稱.ToString(); str2 = 主角背包.物件46[2].屬性名稱.ToString(); str3 = 主角背包.物件46[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件46); } else { 是否為消耗品02 = false; } break;
            case 47: str1 = 主角背包.物件47[1].屬性名稱.ToString(); str2 = 主角背包.物件47[2].屬性名稱.ToString(); str3 = 主角背包.物件47[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件47); } else { 是否為消耗品02 = false; } break;
            case 48: str1 = 主角背包.物件48[1].屬性名稱.ToString(); str2 = 主角背包.物件48[2].屬性名稱.ToString(); str3 = 主角背包.物件48[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件48); } else { 是否為消耗品02 = false; } break;
            case 49: str1 = 主角背包.物件49[1].屬性名稱.ToString(); str2 = 主角背包.物件49[2].屬性名稱.ToString(); str3 = 主角背包.物件49[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件49); } else { 是否為消耗品02 = false; } break;
            case 50: str1 = 主角背包.物件50[1].屬性名稱.ToString(); str2 = 主角背包.物件50[2].屬性名稱.ToString(); str3 = 主角背包.物件50[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件50); } else { 是否為消耗品02 = false; } break;
            case 51: str1 = 主角背包.物件51[1].屬性名稱.ToString(); str2 = 主角背包.物件51[2].屬性名稱.ToString(); str3 = 主角背包.物件51[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件51); } else { 是否為消耗品02 = false; } break;
            case 52: str1 = 主角背包.物件52[1].屬性名稱.ToString(); str2 = 主角背包.物件52[2].屬性名稱.ToString(); str3 = 主角背包.物件52[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件52); } else { 是否為消耗品02 = false; } break;
            case 53: str1 = 主角背包.物件53[1].屬性名稱.ToString(); str2 = 主角背包.物件53[2].屬性名稱.ToString(); str3 = 主角背包.物件53[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件53); } else { 是否為消耗品02 = false; } break;
            case 54: str1 = 主角背包.物件54[1].屬性名稱.ToString(); str2 = 主角背包.物件54[2].屬性名稱.ToString(); str3 = 主角背包.物件54[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件54); } else { 是否為消耗品02 = false; } break;
            case 55: str1 = 主角背包.物件55[1].屬性名稱.ToString(); str2 = 主角背包.物件55[2].屬性名稱.ToString(); str3 = 主角背包.物件55[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件55); } else { 是否為消耗品02 = false; } break;
            case 56: str1 = 主角背包.物件56[1].屬性名稱.ToString(); str2 = 主角背包.物件56[2].屬性名稱.ToString(); str3 = 主角背包.物件56[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件56); } else { 是否為消耗品02 = false; } break;
            case 57: str1 = 主角背包.物件57[1].屬性名稱.ToString(); str2 = 主角背包.物件57[2].屬性名稱.ToString(); str3 = 主角背包.物件57[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件57); } else { 是否為消耗品02 = false; } break;
            case 58: str1 = 主角背包.物件58[1].屬性名稱.ToString(); str2 = 主角背包.物件58[2].屬性名稱.ToString(); str3 = 主角背包.物件58[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件58); } else { 是否為消耗品02 = false; } break;
            case 59: str1 = 主角背包.物件59[1].屬性名稱.ToString(); str2 = 主角背包.物件59[2].屬性名稱.ToString(); str3 = 主角背包.物件59[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件59); } else { 是否為消耗品02 = false; } break;
            case 60: str1 = 主角背包.物件60[1].屬性名稱.ToString(); str2 = 主角背包.物件60[2].屬性名稱.ToString(); str3 = 主角背包.物件60[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件60); } else { 是否為消耗品02 = false; } break;
            case 61: str1 = 主角背包.物件61[1].屬性名稱.ToString(); str2 = 主角背包.物件61[2].屬性名稱.ToString(); str3 = 主角背包.物件61[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件61); } else { 是否為消耗品02 = false; } break;
            case 62: str1 = 主角背包.物件62[1].屬性名稱.ToString(); str2 = 主角背包.物件62[2].屬性名稱.ToString(); str3 = 主角背包.物件62[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件62); } else { 是否為消耗品02 = false; } break;
            case 63: str1 = 主角背包.物件63[1].屬性名稱.ToString(); str2 = 主角背包.物件63[2].屬性名稱.ToString(); str3 = 主角背包.物件63[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件63); } else { 是否為消耗品02 = false; } break;
            case 64: str1 = 主角背包.物件64[1].屬性名稱.ToString(); str2 = 主角背包.物件64[2].屬性名稱.ToString(); str3 = 主角背包.物件64[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件64); } else { 是否為消耗品02 = false; } break;
            case 65: str1 = 主角背包.物件65[1].屬性名稱.ToString(); str2 = 主角背包.物件65[2].屬性名稱.ToString(); str3 = 主角背包.物件65[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件65); } else { 是否為消耗品02 = false; } break;
            case 66: str1 = 主角背包.物件66[1].屬性名稱.ToString(); str2 = 主角背包.物件66[2].屬性名稱.ToString(); str3 = 主角背包.物件66[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件66); } else { 是否為消耗品02 = false; } break;
            case 67: str1 = 主角背包.物件67[1].屬性名稱.ToString(); str2 = 主角背包.物件67[2].屬性名稱.ToString(); str3 = 主角背包.物件67[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件67); } else { 是否為消耗品02 = false; } break;
            case 68: str1 = 主角背包.物件68[1].屬性名稱.ToString(); str2 = 主角背包.物件68[2].屬性名稱.ToString(); str3 = 主角背包.物件68[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件68); } else { 是否為消耗品02 = false; } break;
            case 69: str1 = 主角背包.物件69[1].屬性名稱.ToString(); str2 = 主角背包.物件69[2].屬性名稱.ToString(); str3 = 主角背包.物件69[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件69); } else { 是否為消耗品02 = false; } break;
            case 70: str1 = 主角背包.物件70[1].屬性名稱.ToString(); str2 = 主角背包.物件70[2].屬性名稱.ToString(); str3 = 主角背包.物件70[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件70); } else { 是否為消耗品02 = false; } break;
            case 71: str1 = 主角背包.物件71[1].屬性名稱.ToString(); str2 = 主角背包.物件71[2].屬性名稱.ToString(); str3 = 主角背包.物件71[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件71); } else { 是否為消耗品02 = false; } break;
            case 72: str1 = 主角背包.物件72[1].屬性名稱.ToString(); str2 = 主角背包.物件72[2].屬性名稱.ToString(); str3 = 主角背包.物件72[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件72); } else { 是否為消耗品02 = false; } break;
            case 73: str1 = 主角背包.物件73[1].屬性名稱.ToString(); str2 = 主角背包.物件73[2].屬性名稱.ToString(); str3 = 主角背包.物件73[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件73); } else { 是否為消耗品02 = false; } break;
            case 74: str1 = 主角背包.物件74[1].屬性名稱.ToString(); str2 = 主角背包.物件74[2].屬性名稱.ToString(); str3 = 主角背包.物件74[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件74); } else { 是否為消耗品02 = false; } break;
            case 75: str1 = 主角背包.物件75[1].屬性名稱.ToString(); str2 = 主角背包.物件75[2].屬性名稱.ToString(); str3 = 主角背包.物件75[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件75); } else { 是否為消耗品02 = false; } break;
            case 76: str1 = 主角背包.物件76[1].屬性名稱.ToString(); str2 = 主角背包.物件76[2].屬性名稱.ToString(); str3 = 主角背包.物件76[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件76); } else { 是否為消耗品02 = false; } break;
            case 77: str1 = 主角背包.物件77[1].屬性名稱.ToString(); str2 = 主角背包.物件77[2].屬性名稱.ToString(); str3 = 主角背包.物件77[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件77); } else { 是否為消耗品02 = false; } break;
            case 78: str1 = 主角背包.物件78[1].屬性名稱.ToString(); str2 = 主角背包.物件78[2].屬性名稱.ToString(); str3 = 主角背包.物件78[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件78); } else { 是否為消耗品02 = false; } break;
            case 79: str1 = 主角背包.物件79[1].屬性名稱.ToString(); str2 = 主角背包.物件79[2].屬性名稱.ToString(); str3 = 主角背包.物件79[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件79); } else { 是否為消耗品02 = false; } break;
            case 80: str1 = 主角背包.物件80[1].屬性名稱.ToString(); str2 = 主角背包.物件80[2].屬性名稱.ToString(); str3 = 主角背包.物件80[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件80); } else { 是否為消耗品02 = false; } break;
            case 81: str1 = 主角背包.物件81[1].屬性名稱.ToString(); str2 = 主角背包.物件81[2].屬性名稱.ToString(); str3 = 主角背包.物件81[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件81); } else { 是否為消耗品02 = false; } break;
            case 82: str1 = 主角背包.物件82[1].屬性名稱.ToString(); str2 = 主角背包.物件82[2].屬性名稱.ToString(); str3 = 主角背包.物件82[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件82); } else { 是否為消耗品02 = false; } break;
            case 83: str1 = 主角背包.物件83[1].屬性名稱.ToString(); str2 = 主角背包.物件83[2].屬性名稱.ToString(); str3 = 主角背包.物件83[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件83); } else { 是否為消耗品02 = false; } break;
            case 84: str1 = 主角背包.物件84[1].屬性名稱.ToString(); str2 = 主角背包.物件84[2].屬性名稱.ToString(); str3 = 主角背包.物件84[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件84); } else { 是否為消耗品02 = false; } break;
            case 85: str1 = 主角背包.物件85[1].屬性名稱.ToString(); str2 = 主角背包.物件85[2].屬性名稱.ToString(); str3 = 主角背包.物件85[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件85); } else { 是否為消耗品02 = false; } break;
            case 86: str1 = 主角背包.物件86[1].屬性名稱.ToString(); str2 = 主角背包.物件86[2].屬性名稱.ToString(); str3 = 主角背包.物件86[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件86); } else { 是否為消耗品02 = false; } break;
            case 87: str1 = 主角背包.物件87[1].屬性名稱.ToString(); str2 = 主角背包.物件87[2].屬性名稱.ToString(); str3 = 主角背包.物件87[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件87); } else { 是否為消耗品02 = false; } break;
            case 88: str1 = 主角背包.物件88[1].屬性名稱.ToString(); str2 = 主角背包.物件88[2].屬性名稱.ToString(); str3 = 主角背包.物件88[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件88); } else { 是否為消耗品02 = false; } break;
            case 89: str1 = 主角背包.物件89[1].屬性名稱.ToString(); str2 = 主角背包.物件89[2].屬性名稱.ToString(); str3 = 主角背包.物件89[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件89); } else { 是否為消耗品02 = false; } break;
            case 90: str1 = 主角背包.物件90[1].屬性名稱.ToString(); str2 = 主角背包.物件90[2].屬性名稱.ToString(); str3 = 主角背包.物件90[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件90); } else { 是否為消耗品02 = false; } break;
            case 91: str1 = 主角背包.物件91[1].屬性名稱.ToString(); str2 = 主角背包.物件91[2].屬性名稱.ToString(); str3 = 主角背包.物件91[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件91); } else { 是否為消耗品02 = false; } break;
            case 92: str1 = 主角背包.物件92[1].屬性名稱.ToString(); str2 = 主角背包.物件92[2].屬性名稱.ToString(); str3 = 主角背包.物件92[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件92); } else { 是否為消耗品02 = false; } break;
            case 93: str1 = 主角背包.物件93[1].屬性名稱.ToString(); str2 = 主角背包.物件93[2].屬性名稱.ToString(); str3 = 主角背包.物件93[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件93); } else { 是否為消耗品02 = false; } break;
            case 94: str1 = 主角背包.物件94[1].屬性名稱.ToString(); str2 = 主角背包.物件94[2].屬性名稱.ToString(); str3 = 主角背包.物件94[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件94); } else { 是否為消耗品02 = false; } break;
            case 95: str1 = 主角背包.物件95[1].屬性名稱.ToString(); str2 = 主角背包.物件95[2].屬性名稱.ToString(); str3 = 主角背包.物件95[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件95); } else { 是否為消耗品02 = false; } break;
            case 96: str1 = 主角背包.物件96[1].屬性名稱.ToString(); str2 = 主角背包.物件96[2].屬性名稱.ToString(); str3 = 主角背包.物件96[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件96); } else { 是否為消耗品02 = false; } break;
            case 97: str1 = 主角背包.物件97[1].屬性名稱.ToString(); str2 = 主角背包.物件97[2].屬性名稱.ToString(); str3 = 主角背包.物件97[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件97); } else { 是否為消耗品02 = false; } break;
            case 98: str1 = 主角背包.物件98[1].屬性名稱.ToString(); str2 = 主角背包.物件98[2].屬性名稱.ToString(); str3 = 主角背包.物件98[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件98); } else { 是否為消耗品02 = false; } break;
            case 99: str1 = 主角背包.物件99[1].屬性名稱.ToString(); str2 = 主角背包.物件99[2].屬性名稱.ToString(); str3 = 主角背包.物件99[3].屬性名稱.ToString(); if (Enum.TryParse(str1, out 消耗品種類1) || Enum.TryParse(str2, out 消耗品種類1) || Enum.TryParse(str3, out 消耗品種類1)) { 是否為消耗品02 = true; 公共物件06.AddRange(主角背包.物件99); } else { 是否為消耗品02 = false; } break;
        }
    }

    public void 確認數量大於一05()
    {
        數量大一01 = false;
        if (公共物件05[4].屬性參數 > 1)
        {
            數量大一01 = true;
        }
    }

    public void 確認數量大於一06()
    {
        數量大一02 = false;
        if (公共物件05[4].屬性參數 > 1)
        {
            數量大一02 = true;
        }
    }

    //篩選傳入對比數據  對比數據確認為消耗品  這邊對比序列內容  如果通過代表可以疊加 兩者相同  回傳 是否相同=true;        UP函數開啟就傳送03了  只需要後面將目標物傳入04
    public void 對比序列()
    {
        string str4 = "";
        string str5 = "";
        if (公共物件04.Count == 公共物件03.Count) //公共04為被檢查的  03為選中的目標(滑鼠點的)  
        {
            for (int i = 0; i < 公共物件03.Count; i++)
            {
                str4 = 公共物件04[i].屬性名稱.ToString();
                str5 = 公共物件03[i].屬性名稱.ToString();
                if (str4 == str5)
                {
                    if (i != 4)
                    {
                        str4 = 公共物件04[i].屬性參數.ToString();
                        str5 = 公共物件03[i].屬性參數.ToString();
                        if (str4 == str5)
                        {
                            是否相同 = true;
                            公共記分板1.商店是否相同 = true;
                        }
                        else
                        {
                            是否相同 = false;
                            公共記分板1.商店是否相同 = false;
                            break;
                        }
                    }
                    else
                    {
                        是否相同 = true;   //只有在i=4的時候觸發
                        公共記分板1.商店是否相同 = true;
                    }
                }
                else
                {
                    是否相同 = false;
                    公共記分板1.商店是否相同 = false;
                    break;
                }
            }
        }
        else { Debug.Log("兩者長度不相同"); }
        if (是否相同) { Debug.Log("兩者相同"); }
        else { Debug.Log("兩者不相同"); }
    }

    public void 對比序列02()
    {
        string str4 = "";
        string str5 = "";
        if (公共物件05.Count == 公共物件06.Count) //公共04為販賣物  03為選中的目標(滑鼠點的)  
        {
            for (int i = 0; i < 公共物件05.Count; i++)
            {
                str4 = 公共物件05[i].屬性名稱.ToString();
                str5 = 公共物件06[i].屬性名稱.ToString();
                if (str4 == str5)
                {
                    if (i != 4)
                    {
                        str4 = 公共物件05[i].屬性參數.ToString();
                        str5 = 公共物件06[i].屬性參數.ToString();
                        if (str4 == str5)
                        {
                            是否相同 = true;
                            公共記分板1.商店是否相同 = true;
                        }
                        else
                        {
                            是否相同 = false;
                            公共記分板1.商店是否相同 = false;
                            break;
                        }
                    }
                    else
                    {
                        是否相同 = true;   //只有在i=4的時候觸發
                        公共記分板1.商店是否相同 = true;
                    }
                }
                else
                {
                    是否相同 = false;
                    公共記分板1.商店是否相同 = false;
                    break;
                }
            }
        }
        else { Debug.Log("兩者長度不相同"); }
        if (是否相同) { Debug.Log("兩者相同"); }
        else { Debug.Log("兩者不相同"); }
    }

    public void 手動複製(List<背包的系統.屬性設定> 複製物件)    //把X完整複製到指定的欄位
    {
        把X傳入公共3();//玩家NPC通用的
        for (int i = 0; i < 公共物件03.Count; i++)
        {
            string str = 公共物件03[i].屬性名稱;
            double data = 公共物件03[i].屬性參數;
            複製物件.Add(new 背包的系統.屬性設定(str, data));
        }
    }

    public void 商人物件購買()
    {
        把X丟進公共1();
        把公共丟進販賣();
    }

    public void 商人販賣物品退件()
    {
        把販賣區丟回公共1();
        把公共丟回商人包();
    }

    public void 把X丟進公共1()//把選中的(商人的) 丟去公共1   然後刪除  順帶清除判定列表
    {
        switch (公共X)
        {
            case 0: 公共物件.AddRange(商人.商品00); 商人.商品00.Clear(); 商人.商品存在列表[0] = false; break;
            case 1: 公共物件.AddRange(商人.商品01); 商人.商品01.Clear(); 商人.商品存在列表[1] = false; break;
            case 2: 公共物件.AddRange(商人.商品02); 商人.商品02.Clear(); 商人.商品存在列表[2] = false; break;
            case 3: 公共物件.AddRange(商人.商品03); 商人.商品03.Clear(); 商人.商品存在列表[3] = false; break;
            case 4: 公共物件.AddRange(商人.商品04); 商人.商品04.Clear(); 商人.商品存在列表[4] = false; break;
            case 5: 公共物件.AddRange(商人.商品05); 商人.商品05.Clear(); 商人.商品存在列表[5] = false; break;
            case 6: 公共物件.AddRange(商人.商品06); 商人.商品06.Clear(); 商人.商品存在列表[6] = false; break;
            case 7: 公共物件.AddRange(商人.商品07); 商人.商品07.Clear(); 商人.商品存在列表[7] = false; break;
            case 8: 公共物件.AddRange(商人.商品08); 商人.商品08.Clear(); 商人.商品存在列表[8] = false; break;
            case 9: 公共物件.AddRange(商人.商品09); 商人.商品09.Clear(); 商人.商品存在列表[9] = false; break;
            case 10: 公共物件.AddRange(商人.商品10); 商人.商品10.Clear(); 商人.商品存在列表[10] = false; break;
            case 11: 公共物件.AddRange(商人.商品11); 商人.商品11.Clear(); 商人.商品存在列表[11] = false; break;
            case 12: 公共物件.AddRange(商人.商品12); 商人.商品12.Clear(); 商人.商品存在列表[12] = false; break;
            case 13: 公共物件.AddRange(商人.商品13); 商人.商品13.Clear(); 商人.商品存在列表[13] = false; break;
            case 14: 公共物件.AddRange(商人.商品14); 商人.商品14.Clear(); 商人.商品存在列表[14] = false; break;
            case 15: 公共物件.AddRange(商人.商品15); 商人.商品15.Clear(); 商人.商品存在列表[15] = false; break;
            case 16: 公共物件.AddRange(商人.商品16); 商人.商品16.Clear(); 商人.商品存在列表[16] = false; break;
            case 17: 公共物件.AddRange(商人.商品17); 商人.商品17.Clear(); 商人.商品存在列表[17] = false; break;
            case 18: 公共物件.AddRange(商人.商品18); 商人.商品18.Clear(); 商人.商品存在列表[18] = false; break;
            case 19: 公共物件.AddRange(商人.商品19); 商人.商品19.Clear(); 商人.商品存在列表[19] = false; break;
            case 20: 公共物件.AddRange(商人.商品20); 商人.商品20.Clear(); 商人.商品存在列表[20] = false; break;
            case 21: 公共物件.AddRange(商人.商品21); 商人.商品21.Clear(); 商人.商品存在列表[21] = false; break;
            case 22: 公共物件.AddRange(商人.商品22); 商人.商品22.Clear(); 商人.商品存在列表[22] = false; break;
            case 23: 公共物件.AddRange(商人.商品23); 商人.商品23.Clear(); 商人.商品存在列表[23] = false; break;
            case 24: 公共物件.AddRange(商人.商品24); 商人.商品24.Clear(); 商人.商品存在列表[24] = false; break;
            case 25: 公共物件.AddRange(商人.商品25); 商人.商品25.Clear(); 商人.商品存在列表[25] = false; break;
            case 26: 公共物件.AddRange(商人.商品26); 商人.商品26.Clear(); 商人.商品存在列表[26] = false; break;
            case 27: 公共物件.AddRange(商人.商品27); 商人.商品27.Clear(); 商人.商品存在列表[27] = false; break;
            case 28: 公共物件.AddRange(商人.商品28); 商人.商品28.Clear(); 商人.商品存在列表[28] = false; break;
            case 29: 公共物件.AddRange(商人.商品29); 商人.商品29.Clear(); 商人.商品存在列表[29] = false; break;
            case 30: 公共物件.AddRange(商人.商品30); 商人.商品30.Clear(); 商人.商品存在列表[30] = false; break;
            case 31: 公共物件.AddRange(商人.商品31); 商人.商品31.Clear(); 商人.商品存在列表[31] = false; break;
            case 32: 公共物件.AddRange(商人.商品32); 商人.商品32.Clear(); 商人.商品存在列表[32] = false; break;
            case 33: 公共物件.AddRange(商人.商品33); 商人.商品33.Clear(); 商人.商品存在列表[33] = false; break;
            case 34: 公共物件.AddRange(商人.商品34); 商人.商品34.Clear(); 商人.商品存在列表[34] = false; break;
            case 35: 公共物件.AddRange(商人.商品35); 商人.商品35.Clear(); 商人.商品存在列表[35] = false; break;
            case 36: 公共物件.AddRange(商人.商品36); 商人.商品36.Clear(); 商人.商品存在列表[36] = false; break;
            case 37: 公共物件.AddRange(商人.商品37); 商人.商品37.Clear(); 商人.商品存在列表[37] = false; break;
            case 38: 公共物件.AddRange(商人.商品38); 商人.商品38.Clear(); 商人.商品存在列表[38] = false; break;
            case 39: 公共物件.AddRange(商人.商品39); 商人.商品39.Clear(); 商人.商品存在列表[39] = false; break;
            case 40: 公共物件.AddRange(商人.商品40); 商人.商品40.Clear(); 商人.商品存在列表[40] = false; break;
            case 41: 公共物件.AddRange(商人.商品41); 商人.商品41.Clear(); 商人.商品存在列表[41] = false; break;
            case 42: 公共物件.AddRange(商人.商品42); 商人.商品42.Clear(); 商人.商品存在列表[42] = false; break;
            case 43: 公共物件.AddRange(商人.商品43); 商人.商品43.Clear(); 商人.商品存在列表[43] = false; break;
            case 44: 公共物件.AddRange(商人.商品44); 商人.商品44.Clear(); 商人.商品存在列表[44] = false; break;
            case 45: 公共物件.AddRange(商人.商品45); 商人.商品45.Clear(); 商人.商品存在列表[45] = false; break;
            case 46: 公共物件.AddRange(商人.商品46); 商人.商品46.Clear(); 商人.商品存在列表[46] = false; break;
            case 47: 公共物件.AddRange(商人.商品47); 商人.商品47.Clear(); 商人.商品存在列表[47] = false; break;
            case 48: 公共物件.AddRange(商人.商品48); 商人.商品48.Clear(); 商人.商品存在列表[48] = false; break;
            case 49: 公共物件.AddRange(商人.商品49); 商人.商品49.Clear(); 商人.商品存在列表[49] = false; break;
            case 50: 公共物件.AddRange(商人.商品50); 商人.商品50.Clear(); 商人.商品存在列表[50] = false; break;
            case 51: 公共物件.AddRange(商人.商品51); 商人.商品51.Clear(); 商人.商品存在列表[51] = false; break;
            case 52: 公共物件.AddRange(商人.商品52); 商人.商品52.Clear(); 商人.商品存在列表[52] = false; break;
            case 53: 公共物件.AddRange(商人.商品53); 商人.商品53.Clear(); 商人.商品存在列表[53] = false; break;
            case 54: 公共物件.AddRange(商人.商品54); 商人.商品54.Clear(); 商人.商品存在列表[54] = false; break;
            case 55: 公共物件.AddRange(商人.商品55); 商人.商品55.Clear(); 商人.商品存在列表[55] = false; break;
            case 56: 公共物件.AddRange(商人.商品56); 商人.商品56.Clear(); 商人.商品存在列表[56] = false; break;
            case 57: 公共物件.AddRange(商人.商品57); 商人.商品57.Clear(); 商人.商品存在列表[57] = false; break;
            case 58: 公共物件.AddRange(商人.商品58); 商人.商品58.Clear(); 商人.商品存在列表[58] = false; break;
            case 59: 公共物件.AddRange(商人.商品59); 商人.商品59.Clear(); 商人.商品存在列表[59] = false; break;
            case 60: 公共物件.AddRange(商人.商品60); 商人.商品60.Clear(); 商人.商品存在列表[60] = false; break;
            case 61: 公共物件.AddRange(商人.商品61); 商人.商品61.Clear(); 商人.商品存在列表[61] = false; break;
            case 62: 公共物件.AddRange(商人.商品62); 商人.商品62.Clear(); 商人.商品存在列表[62] = false; break;
            case 63: 公共物件.AddRange(商人.商品63); 商人.商品63.Clear(); 商人.商品存在列表[63] = false; break;
            case 64: 公共物件.AddRange(商人.商品64); 商人.商品64.Clear(); 商人.商品存在列表[64] = false; break;
            case 65: 公共物件.AddRange(商人.商品65); 商人.商品65.Clear(); 商人.商品存在列表[65] = false; break;
            case 66: 公共物件.AddRange(商人.商品66); 商人.商品66.Clear(); 商人.商品存在列表[66] = false; break;
            case 67: 公共物件.AddRange(商人.商品67); 商人.商品67.Clear(); 商人.商品存在列表[67] = false; break;
            case 68: 公共物件.AddRange(商人.商品68); 商人.商品68.Clear(); 商人.商品存在列表[68] = false; break;
            case 69: 公共物件.AddRange(商人.商品69); 商人.商品69.Clear(); 商人.商品存在列表[69] = false; break;
            case 70: 公共物件.AddRange(商人.商品70); 商人.商品70.Clear(); 商人.商品存在列表[70] = false; break;
            case 71: 公共物件.AddRange(商人.商品71); 商人.商品71.Clear(); 商人.商品存在列表[71] = false; break;
            case 72: 公共物件.AddRange(商人.商品72); 商人.商品72.Clear(); 商人.商品存在列表[72] = false; break;
            case 73: 公共物件.AddRange(商人.商品73); 商人.商品73.Clear(); 商人.商品存在列表[73] = false; break;
            case 74: 公共物件.AddRange(商人.商品74); 商人.商品74.Clear(); 商人.商品存在列表[74] = false; break;
            case 75: 公共物件.AddRange(商人.商品75); 商人.商品75.Clear(); 商人.商品存在列表[75] = false; break;
            case 76: 公共物件.AddRange(商人.商品76); 商人.商品76.Clear(); 商人.商品存在列表[76] = false; break;
            case 77: 公共物件.AddRange(商人.商品77); 商人.商品77.Clear(); 商人.商品存在列表[77] = false; break;
            case 78: 公共物件.AddRange(商人.商品78); 商人.商品78.Clear(); 商人.商品存在列表[78] = false; break;
            case 79: 公共物件.AddRange(商人.商品79); 商人.商品79.Clear(); 商人.商品存在列表[79] = false; break;
            case 80: 公共物件.AddRange(商人.商品80); 商人.商品80.Clear(); 商人.商品存在列表[80] = false; break;
            case 81: 公共物件.AddRange(商人.商品81); 商人.商品81.Clear(); 商人.商品存在列表[81] = false; break;
            case 82: 公共物件.AddRange(商人.商品82); 商人.商品82.Clear(); 商人.商品存在列表[82] = false; break;
            case 83: 公共物件.AddRange(商人.商品83); 商人.商品83.Clear(); 商人.商品存在列表[83] = false; break;
            case 84: 公共物件.AddRange(商人.商品84); 商人.商品84.Clear(); 商人.商品存在列表[84] = false; break;
            case 85: 公共物件.AddRange(商人.商品85); 商人.商品85.Clear(); 商人.商品存在列表[85] = false; break;
            case 86: 公共物件.AddRange(商人.商品86); 商人.商品86.Clear(); 商人.商品存在列表[86] = false; break;
            case 87: 公共物件.AddRange(商人.商品87); 商人.商品87.Clear(); 商人.商品存在列表[87] = false; break;
            case 88: 公共物件.AddRange(商人.商品88); 商人.商品88.Clear(); 商人.商品存在列表[88] = false; break;
            case 89: 公共物件.AddRange(商人.商品89); 商人.商品89.Clear(); 商人.商品存在列表[89] = false; break;
            case 90: 公共物件.AddRange(商人.商品90); 商人.商品90.Clear(); 商人.商品存在列表[90] = false; break;
            case 91: 公共物件.AddRange(商人.商品91); 商人.商品91.Clear(); 商人.商品存在列表[91] = false; break;
            case 92: 公共物件.AddRange(商人.商品92); 商人.商品92.Clear(); 商人.商品存在列表[92] = false; break;
            case 93: 公共物件.AddRange(商人.商品93); 商人.商品93.Clear(); 商人.商品存在列表[93] = false; break;
            case 94: 公共物件.AddRange(商人.商品94); 商人.商品94.Clear(); 商人.商品存在列表[94] = false; break;
            case 95: 公共物件.AddRange(商人.商品95); 商人.商品95.Clear(); 商人.商品存在列表[95] = false; break;
            case 96: 公共物件.AddRange(商人.商品96); 商人.商品96.Clear(); 商人.商品存在列表[96] = false; break;
            case 97: 公共物件.AddRange(商人.商品97); 商人.商品97.Clear(); 商人.商品存在列表[97] = false; break;
            case 98: 公共物件.AddRange(商人.商品98); 商人.商品98.Clear(); 商人.商品存在列表[98] = false; break;
            case 99: 公共物件.AddRange(商人.商品99); 商人.商品99.Clear(); 商人.商品存在列表[99] = false; break;
        }
    }

    public void 把公共丟進販賣()//判斷商人的販賣區哪個是空的  然後把公共1丟進去
    {
        for (int i = 0; i < 50; i++) //篩出一個可以用的交易欄
        {
            if (!商人.準備賣出列表[i])
            {
                商人.準備賣出列表[i] = true;
                公共0 = i;
                break;
            }
        }
        switch (公共0)
        {
            case 0: 商人.準備賣出00.AddRange(公共物件); break;
            case 1: 商人.準備賣出01.AddRange(公共物件); break;
            case 2: 商人.準備賣出02.AddRange(公共物件); break;
            case 3: 商人.準備賣出03.AddRange(公共物件); break;
            case 4: 商人.準備賣出04.AddRange(公共物件); break;
            case 5: 商人.準備賣出05.AddRange(公共物件); break;
            case 6: 商人.準備賣出06.AddRange(公共物件); break;
            case 7: 商人.準備賣出07.AddRange(公共物件); break;
            case 8: 商人.準備賣出08.AddRange(公共物件); break;
            case 9: 商人.準備賣出09.AddRange(公共物件); break;
            case 10: 商人.準備賣出10.AddRange(公共物件); break;
            case 11: 商人.準備賣出11.AddRange(公共物件); break;
            case 12: 商人.準備賣出12.AddRange(公共物件); break;
            case 13: 商人.準備賣出13.AddRange(公共物件); break;
            case 14: 商人.準備賣出14.AddRange(公共物件); break;
            case 15: 商人.準備賣出15.AddRange(公共物件); break;
            case 16: 商人.準備賣出16.AddRange(公共物件); break;
            case 17: 商人.準備賣出17.AddRange(公共物件); break;
            case 18: 商人.準備賣出18.AddRange(公共物件); break;
            case 19: 商人.準備賣出19.AddRange(公共物件); break;
            case 20: 商人.準備賣出20.AddRange(公共物件); break;
            case 21: 商人.準備賣出21.AddRange(公共物件); break;
            case 22: 商人.準備賣出22.AddRange(公共物件); break;
            case 23: 商人.準備賣出23.AddRange(公共物件); break;
            case 24: 商人.準備賣出24.AddRange(公共物件); break;
            case 25: 商人.準備賣出25.AddRange(公共物件); break;
            case 26: 商人.準備賣出26.AddRange(公共物件); break;
            case 27: 商人.準備賣出27.AddRange(公共物件); break;
            case 28: 商人.準備賣出28.AddRange(公共物件); break;
            case 29: 商人.準備賣出29.AddRange(公共物件); break;
            case 30: 商人.準備賣出30.AddRange(公共物件); break;
            case 31: 商人.準備賣出31.AddRange(公共物件); break;
            case 32: 商人.準備賣出32.AddRange(公共物件); break;
            case 33: 商人.準備賣出33.AddRange(公共物件); break;
            case 34: 商人.準備賣出34.AddRange(公共物件); break;
            case 35: 商人.準備賣出35.AddRange(公共物件); break;
            case 36: 商人.準備賣出36.AddRange(公共物件); break;
            case 37: 商人.準備賣出37.AddRange(公共物件); break;
            case 38: 商人.準備賣出38.AddRange(公共物件); break;
            case 39: 商人.準備賣出39.AddRange(公共物件); break;
            case 40: 商人.準備賣出40.AddRange(公共物件); break;
            case 41: 商人.準備賣出41.AddRange(公共物件); break;
            case 42: 商人.準備賣出42.AddRange(公共物件); break;
            case 43: 商人.準備賣出43.AddRange(公共物件); break;
            case 44: 商人.準備賣出44.AddRange(公共物件); break;
            case 45: 商人.準備賣出45.AddRange(公共物件); break;
            case 46: 商人.準備賣出46.AddRange(公共物件); break;
            case 47: 商人.準備賣出47.AddRange(公共物件); break;
            case 48: 商人.準備賣出48.AddRange(公共物件); break;
            case 49: 商人.準備賣出49.AddRange(公共物件); break;
        }
    }

    public void 把販賣區丟回公共1()//讀取公共X(所選擇的按鈕) 在把物件丟進公共  然後刪除  再把bool切換
    {
        switch (公共X)
        {
            case 100: 公共物件.AddRange(商人.準備賣出00); 商人.準備賣出00.Clear(); 商人.準備賣出列表[0] = false; break;
            case 101: 公共物件.AddRange(商人.準備賣出01); 商人.準備賣出01.Clear(); 商人.準備賣出列表[1] = false; break;
            case 102: 公共物件.AddRange(商人.準備賣出02); 商人.準備賣出02.Clear(); 商人.準備賣出列表[2] = false; break;
            case 103: 公共物件.AddRange(商人.準備賣出03); 商人.準備賣出03.Clear(); 商人.準備賣出列表[3] = false; break;
            case 104: 公共物件.AddRange(商人.準備賣出04); 商人.準備賣出04.Clear(); 商人.準備賣出列表[4] = false; break;
            case 105: 公共物件.AddRange(商人.準備賣出05); 商人.準備賣出05.Clear(); 商人.準備賣出列表[5] = false; break;
            case 106: 公共物件.AddRange(商人.準備賣出06); 商人.準備賣出06.Clear(); 商人.準備賣出列表[6] = false; break;
            case 107: 公共物件.AddRange(商人.準備賣出07); 商人.準備賣出07.Clear(); 商人.準備賣出列表[7] = false; break;
            case 108: 公共物件.AddRange(商人.準備賣出08); 商人.準備賣出08.Clear(); 商人.準備賣出列表[8] = false; break;
            case 109: 公共物件.AddRange(商人.準備賣出09); 商人.準備賣出09.Clear(); 商人.準備賣出列表[9] = false; break;
            case 110: 公共物件.AddRange(商人.準備賣出10); 商人.準備賣出10.Clear(); 商人.準備賣出列表[10] = false; break;
            case 111: 公共物件.AddRange(商人.準備賣出11); 商人.準備賣出11.Clear(); 商人.準備賣出列表[11] = false; break;
            case 112: 公共物件.AddRange(商人.準備賣出12); 商人.準備賣出12.Clear(); 商人.準備賣出列表[12] = false; break;
            case 113: 公共物件.AddRange(商人.準備賣出13); 商人.準備賣出13.Clear(); 商人.準備賣出列表[13] = false; break;
            case 114: 公共物件.AddRange(商人.準備賣出14); 商人.準備賣出14.Clear(); 商人.準備賣出列表[14] = false; break;
            case 115: 公共物件.AddRange(商人.準備賣出15); 商人.準備賣出15.Clear(); 商人.準備賣出列表[15] = false; break;
            case 116: 公共物件.AddRange(商人.準備賣出16); 商人.準備賣出16.Clear(); 商人.準備賣出列表[16] = false; break;
            case 117: 公共物件.AddRange(商人.準備賣出17); 商人.準備賣出17.Clear(); 商人.準備賣出列表[17] = false; break;
            case 118: 公共物件.AddRange(商人.準備賣出18); 商人.準備賣出18.Clear(); 商人.準備賣出列表[18] = false; break;
            case 119: 公共物件.AddRange(商人.準備賣出19); 商人.準備賣出19.Clear(); 商人.準備賣出列表[19] = false; break;
            case 120: 公共物件.AddRange(商人.準備賣出20); 商人.準備賣出20.Clear(); 商人.準備賣出列表[20] = false; break;
            case 121: 公共物件.AddRange(商人.準備賣出21); 商人.準備賣出21.Clear(); 商人.準備賣出列表[21] = false; break;
            case 122: 公共物件.AddRange(商人.準備賣出22); 商人.準備賣出22.Clear(); 商人.準備賣出列表[22] = false; break;
            case 123: 公共物件.AddRange(商人.準備賣出23); 商人.準備賣出23.Clear(); 商人.準備賣出列表[23] = false; break;
            case 124: 公共物件.AddRange(商人.準備賣出24); 商人.準備賣出24.Clear(); 商人.準備賣出列表[24] = false; break;
            case 125: 公共物件.AddRange(商人.準備賣出25); 商人.準備賣出25.Clear(); 商人.準備賣出列表[25] = false; break;
            case 126: 公共物件.AddRange(商人.準備賣出26); 商人.準備賣出26.Clear(); 商人.準備賣出列表[26] = false; break;
            case 127: 公共物件.AddRange(商人.準備賣出27); 商人.準備賣出27.Clear(); 商人.準備賣出列表[27] = false; break;
            case 128: 公共物件.AddRange(商人.準備賣出28); 商人.準備賣出28.Clear(); 商人.準備賣出列表[28] = false; break;
            case 129: 公共物件.AddRange(商人.準備賣出29); 商人.準備賣出29.Clear(); 商人.準備賣出列表[29] = false; break;
            case 130: 公共物件.AddRange(商人.準備賣出30); 商人.準備賣出30.Clear(); 商人.準備賣出列表[30] = false; break;
            case 131: 公共物件.AddRange(商人.準備賣出31); 商人.準備賣出31.Clear(); 商人.準備賣出列表[31] = false; break;
            case 132: 公共物件.AddRange(商人.準備賣出32); 商人.準備賣出32.Clear(); 商人.準備賣出列表[32] = false; break;
            case 133: 公共物件.AddRange(商人.準備賣出33); 商人.準備賣出33.Clear(); 商人.準備賣出列表[33] = false; break;
            case 134: 公共物件.AddRange(商人.準備賣出34); 商人.準備賣出34.Clear(); 商人.準備賣出列表[34] = false; break;
            case 135: 公共物件.AddRange(商人.準備賣出35); 商人.準備賣出35.Clear(); 商人.準備賣出列表[35] = false; break;
            case 136: 公共物件.AddRange(商人.準備賣出36); 商人.準備賣出36.Clear(); 商人.準備賣出列表[36] = false; break;
            case 137: 公共物件.AddRange(商人.準備賣出37); 商人.準備賣出37.Clear(); 商人.準備賣出列表[37] = false; break;
            case 138: 公共物件.AddRange(商人.準備賣出38); 商人.準備賣出38.Clear(); 商人.準備賣出列表[38] = false; break;
            case 139: 公共物件.AddRange(商人.準備賣出39); 商人.準備賣出39.Clear(); 商人.準備賣出列表[39] = false; break;
            case 140: 公共物件.AddRange(商人.準備賣出40); 商人.準備賣出40.Clear(); 商人.準備賣出列表[40] = false; break;
            case 141: 公共物件.AddRange(商人.準備賣出41); 商人.準備賣出41.Clear(); 商人.準備賣出列表[41] = false; break;
            case 142: 公共物件.AddRange(商人.準備賣出42); 商人.準備賣出42.Clear(); 商人.準備賣出列表[42] = false; break;
            case 143: 公共物件.AddRange(商人.準備賣出43); 商人.準備賣出43.Clear(); 商人.準備賣出列表[43] = false; break;
            case 144: 公共物件.AddRange(商人.準備賣出44); 商人.準備賣出44.Clear(); 商人.準備賣出列表[44] = false; break;
            case 145: 公共物件.AddRange(商人.準備賣出45); 商人.準備賣出45.Clear(); 商人.準備賣出列表[45] = false; break;
            case 146: 公共物件.AddRange(商人.準備賣出46); 商人.準備賣出46.Clear(); 商人.準備賣出列表[46] = false; break;
            case 147: 公共物件.AddRange(商人.準備賣出47); 商人.準備賣出47.Clear(); 商人.準備賣出列表[47] = false; break;
            case 148: 公共物件.AddRange(商人.準備賣出48); 商人.準備賣出48.Clear(); 商人.準備賣出列表[48] = false; break;
            case 149: 公共物件.AddRange(商人.準備賣出49); 商人.準備賣出49.Clear(); 商人.準備賣出列表[49] = false; break;
        }
    }

    public void 把公共丟回商人包()//篩出商品存在列表 切換bool 然後把公共1丟進去 
    {
        for (int i = 0; i < 100; i++) //篩出一個可以用的背包
        {
            if (!商人.商品存在列表[i])
            {
                商人.商品存在列表[i] = true;
                公共0 = i;
                break;
            }
        }
        switch (公共0)
        {
            case 0: 商人.商品00.AddRange(公共物件); break;
            case 1: 商人.商品01.AddRange(公共物件); break;
            case 2: 商人.商品02.AddRange(公共物件); break;
            case 3: 商人.商品03.AddRange(公共物件); break;
            case 4: 商人.商品04.AddRange(公共物件); break;
            case 5: 商人.商品05.AddRange(公共物件); break;
            case 6: 商人.商品06.AddRange(公共物件); break;
            case 7: 商人.商品07.AddRange(公共物件); break;
            case 8: 商人.商品08.AddRange(公共物件); break;
            case 9: 商人.商品09.AddRange(公共物件); break;
            case 10: 商人.商品10.AddRange(公共物件); break;
            case 11: 商人.商品11.AddRange(公共物件); break;
            case 12: 商人.商品12.AddRange(公共物件); break;
            case 13: 商人.商品13.AddRange(公共物件); break;
            case 14: 商人.商品14.AddRange(公共物件); break;
            case 15: 商人.商品15.AddRange(公共物件); break;
            case 16: 商人.商品16.AddRange(公共物件); break;
            case 17: 商人.商品17.AddRange(公共物件); break;
            case 18: 商人.商品18.AddRange(公共物件); break;
            case 19: 商人.商品19.AddRange(公共物件); break;
            case 20: 商人.商品20.AddRange(公共物件); break;
            case 21: 商人.商品21.AddRange(公共物件); break;
            case 22: 商人.商品22.AddRange(公共物件); break;
            case 23: 商人.商品23.AddRange(公共物件); break;
            case 24: 商人.商品24.AddRange(公共物件); break;
            case 25: 商人.商品25.AddRange(公共物件); break;
            case 26: 商人.商品26.AddRange(公共物件); break;
            case 27: 商人.商品27.AddRange(公共物件); break;
            case 28: 商人.商品28.AddRange(公共物件); break;
            case 29: 商人.商品29.AddRange(公共物件); break;
            case 30: 商人.商品30.AddRange(公共物件); break;
            case 31: 商人.商品31.AddRange(公共物件); break;
            case 32: 商人.商品32.AddRange(公共物件); break;
            case 33: 商人.商品33.AddRange(公共物件); break;
            case 34: 商人.商品34.AddRange(公共物件); break;
            case 35: 商人.商品35.AddRange(公共物件); break;
            case 36: 商人.商品36.AddRange(公共物件); break;
            case 37: 商人.商品37.AddRange(公共物件); break;
            case 38: 商人.商品38.AddRange(公共物件); break;
            case 39: 商人.商品39.AddRange(公共物件); break;
            case 40: 商人.商品40.AddRange(公共物件); break;
            case 41: 商人.商品41.AddRange(公共物件); break;
            case 42: 商人.商品42.AddRange(公共物件); break;
            case 43: 商人.商品43.AddRange(公共物件); break;
            case 44: 商人.商品44.AddRange(公共物件); break;
            case 45: 商人.商品45.AddRange(公共物件); break;
            case 46: 商人.商品46.AddRange(公共物件); break;
            case 47: 商人.商品47.AddRange(公共物件); break;
            case 48: 商人.商品48.AddRange(公共物件); break;
            case 49: 商人.商品49.AddRange(公共物件); break;
            case 50: 商人.商品50.AddRange(公共物件); break;
            case 51: 商人.商品51.AddRange(公共物件); break;
            case 52: 商人.商品52.AddRange(公共物件); break;
            case 53: 商人.商品53.AddRange(公共物件); break;
            case 54: 商人.商品54.AddRange(公共物件); break;
            case 55: 商人.商品55.AddRange(公共物件); break;
            case 56: 商人.商品56.AddRange(公共物件); break;
            case 57: 商人.商品57.AddRange(公共物件); break;
            case 58: 商人.商品58.AddRange(公共物件); break;
            case 59: 商人.商品59.AddRange(公共物件); break;
            case 60: 商人.商品60.AddRange(公共物件); break;
            case 61: 商人.商品61.AddRange(公共物件); break;
            case 62: 商人.商品62.AddRange(公共物件); break;
            case 63: 商人.商品63.AddRange(公共物件); break;
            case 64: 商人.商品64.AddRange(公共物件); break;
            case 65: 商人.商品65.AddRange(公共物件); break;
            case 66: 商人.商品66.AddRange(公共物件); break;
            case 67: 商人.商品67.AddRange(公共物件); break;
            case 68: 商人.商品68.AddRange(公共物件); break;
            case 69: 商人.商品69.AddRange(公共物件); break;
            case 70: 商人.商品70.AddRange(公共物件); break;
            case 71: 商人.商品71.AddRange(公共物件); break;
            case 72: 商人.商品72.AddRange(公共物件); break;
            case 73: 商人.商品73.AddRange(公共物件); break;
            case 74: 商人.商品74.AddRange(公共物件); break;
            case 75: 商人.商品75.AddRange(公共物件); break;
            case 76: 商人.商品76.AddRange(公共物件); break;
            case 77: 商人.商品77.AddRange(公共物件); break;
            case 78: 商人.商品78.AddRange(公共物件); break;
            case 79: 商人.商品79.AddRange(公共物件); break;
            case 80: 商人.商品80.AddRange(公共物件); break;
            case 81: 商人.商品81.AddRange(公共物件); break;
            case 82: 商人.商品82.AddRange(公共物件); break;
            case 83: 商人.商品83.AddRange(公共物件); break;
            case 84: 商人.商品84.AddRange(公共物件); break;
            case 85: 商人.商品85.AddRange(公共物件); break;
            case 86: 商人.商品86.AddRange(公共物件); break;
            case 87: 商人.商品87.AddRange(公共物件); break;
            case 88: 商人.商品88.AddRange(公共物件); break;
            case 89: 商人.商品89.AddRange(公共物件); break;
            case 90: 商人.商品90.AddRange(公共物件); break;
            case 91: 商人.商品91.AddRange(公共物件); break;
            case 92: 商人.商品92.AddRange(公共物件); break;
            case 93: 商人.商品93.AddRange(公共物件); break;
            case 94: 商人.商品94.AddRange(公共物件); break;
            case 95: 商人.商品95.AddRange(公共物件); break;
            case 96: 商人.商品96.AddRange(公共物件); break;
            case 97: 商人.商品97.AddRange(公共物件); break;
            case 98: 商人.商品98.AddRange(公共物件); break;
            case 99: 商人.商品99.AddRange(公共物件); break;
        }
    }


    public void 玩家把X丟進公共1()//背包X >> 公共1     //0315確認
    {
        主角背包.物件存在列表[公共X] = false;
        switch (公共X)
        {
            case 0: 公共物件.AddRange(主角背包.物件00); 主角背包.物件00.Clear(); break;
            case 1: 公共物件.AddRange(主角背包.物件01); 主角背包.物件01.Clear(); break;
            case 2: 公共物件.AddRange(主角背包.物件02); 主角背包.物件02.Clear(); break;
            case 3: 公共物件.AddRange(主角背包.物件03); 主角背包.物件03.Clear(); break;
            case 4: 公共物件.AddRange(主角背包.物件04); 主角背包.物件04.Clear(); break;
            case 5: 公共物件.AddRange(主角背包.物件05); 主角背包.物件05.Clear(); break;
            case 6: 公共物件.AddRange(主角背包.物件06); 主角背包.物件06.Clear(); break;
            case 7: 公共物件.AddRange(主角背包.物件07); 主角背包.物件07.Clear(); break;
            case 8: 公共物件.AddRange(主角背包.物件08); 主角背包.物件08.Clear(); break;
            case 9: 公共物件.AddRange(主角背包.物件09); 主角背包.物件09.Clear(); break;
            case 10: 公共物件.AddRange(主角背包.物件10); 主角背包.物件10.Clear(); break;
            case 11: 公共物件.AddRange(主角背包.物件11); 主角背包.物件11.Clear(); break;
            case 12: 公共物件.AddRange(主角背包.物件12); 主角背包.物件12.Clear(); break;
            case 13: 公共物件.AddRange(主角背包.物件13); 主角背包.物件13.Clear(); break;
            case 14: 公共物件.AddRange(主角背包.物件14); 主角背包.物件14.Clear(); break;
            case 15: 公共物件.AddRange(主角背包.物件15); 主角背包.物件15.Clear(); break;
            case 16: 公共物件.AddRange(主角背包.物件16); 主角背包.物件16.Clear(); break;
            case 17: 公共物件.AddRange(主角背包.物件17); 主角背包.物件17.Clear(); break;
            case 18: 公共物件.AddRange(主角背包.物件18); 主角背包.物件18.Clear(); break;
            case 19: 公共物件.AddRange(主角背包.物件19); 主角背包.物件19.Clear(); break;
            case 20: 公共物件.AddRange(主角背包.物件20); 主角背包.物件20.Clear(); break;
            case 21: 公共物件.AddRange(主角背包.物件21); 主角背包.物件21.Clear(); break;
            case 22: 公共物件.AddRange(主角背包.物件22); 主角背包.物件22.Clear(); break;
            case 23: 公共物件.AddRange(主角背包.物件23); 主角背包.物件23.Clear(); break;
            case 24: 公共物件.AddRange(主角背包.物件24); 主角背包.物件24.Clear(); break;
            case 25: 公共物件.AddRange(主角背包.物件25); 主角背包.物件25.Clear(); break;
            case 26: 公共物件.AddRange(主角背包.物件26); 主角背包.物件26.Clear(); break;
            case 27: 公共物件.AddRange(主角背包.物件27); 主角背包.物件27.Clear(); break;
            case 28: 公共物件.AddRange(主角背包.物件28); 主角背包.物件28.Clear(); break;
            case 29: 公共物件.AddRange(主角背包.物件29); 主角背包.物件29.Clear(); break;
            case 30: 公共物件.AddRange(主角背包.物件30); 主角背包.物件30.Clear(); break;
            case 31: 公共物件.AddRange(主角背包.物件31); 主角背包.物件31.Clear(); break;
            case 32: 公共物件.AddRange(主角背包.物件32); 主角背包.物件32.Clear(); break;
            case 33: 公共物件.AddRange(主角背包.物件33); 主角背包.物件33.Clear(); break;
            case 34: 公共物件.AddRange(主角背包.物件34); 主角背包.物件34.Clear(); break;
            case 35: 公共物件.AddRange(主角背包.物件35); 主角背包.物件35.Clear(); break;
            case 36: 公共物件.AddRange(主角背包.物件36); 主角背包.物件36.Clear(); break;
            case 37: 公共物件.AddRange(主角背包.物件37); 主角背包.物件37.Clear(); break;
            case 38: 公共物件.AddRange(主角背包.物件38); 主角背包.物件38.Clear(); break;
            case 39: 公共物件.AddRange(主角背包.物件39); 主角背包.物件39.Clear(); break;
            case 40: 公共物件.AddRange(主角背包.物件40); 主角背包.物件40.Clear(); break;
            case 41: 公共物件.AddRange(主角背包.物件41); 主角背包.物件41.Clear(); break;
            case 42: 公共物件.AddRange(主角背包.物件42); 主角背包.物件42.Clear(); break;
            case 43: 公共物件.AddRange(主角背包.物件43); 主角背包.物件43.Clear(); break;
            case 44: 公共物件.AddRange(主角背包.物件44); 主角背包.物件44.Clear(); break;
            case 45: 公共物件.AddRange(主角背包.物件45); 主角背包.物件45.Clear(); break;
            case 46: 公共物件.AddRange(主角背包.物件46); 主角背包.物件46.Clear(); break;
            case 47: 公共物件.AddRange(主角背包.物件47); 主角背包.物件47.Clear(); break;
            case 48: 公共物件.AddRange(主角背包.物件48); 主角背包.物件48.Clear(); break;
            case 49: 公共物件.AddRange(主角背包.物件49); 主角背包.物件49.Clear(); break;
            case 50: 公共物件.AddRange(主角背包.物件50); 主角背包.物件50.Clear(); break;
            case 51: 公共物件.AddRange(主角背包.物件51); 主角背包.物件51.Clear(); break;
            case 52: 公共物件.AddRange(主角背包.物件52); 主角背包.物件52.Clear(); break;
            case 53: 公共物件.AddRange(主角背包.物件53); 主角背包.物件53.Clear(); break;
            case 54: 公共物件.AddRange(主角背包.物件54); 主角背包.物件54.Clear(); break;
            case 55: 公共物件.AddRange(主角背包.物件55); 主角背包.物件55.Clear(); break;
            case 56: 公共物件.AddRange(主角背包.物件56); 主角背包.物件56.Clear(); break;
            case 57: 公共物件.AddRange(主角背包.物件57); 主角背包.物件57.Clear(); break;
            case 58: 公共物件.AddRange(主角背包.物件58); 主角背包.物件58.Clear(); break;
            case 59: 公共物件.AddRange(主角背包.物件59); 主角背包.物件59.Clear(); break;
            case 60: 公共物件.AddRange(主角背包.物件60); 主角背包.物件60.Clear(); break;
            case 61: 公共物件.AddRange(主角背包.物件61); 主角背包.物件61.Clear(); break;
            case 62: 公共物件.AddRange(主角背包.物件62); 主角背包.物件62.Clear(); break;
            case 63: 公共物件.AddRange(主角背包.物件63); 主角背包.物件63.Clear(); break;
            case 64: 公共物件.AddRange(主角背包.物件64); 主角背包.物件64.Clear(); break;
            case 65: 公共物件.AddRange(主角背包.物件65); 主角背包.物件65.Clear(); break;
            case 66: 公共物件.AddRange(主角背包.物件66); 主角背包.物件66.Clear(); break;
            case 67: 公共物件.AddRange(主角背包.物件67); 主角背包.物件67.Clear(); break;
            case 68: 公共物件.AddRange(主角背包.物件68); 主角背包.物件68.Clear(); break;
            case 69: 公共物件.AddRange(主角背包.物件69); 主角背包.物件69.Clear(); break;
            case 70: 公共物件.AddRange(主角背包.物件70); 主角背包.物件70.Clear(); break;
            case 71: 公共物件.AddRange(主角背包.物件71); 主角背包.物件71.Clear(); break;
            case 72: 公共物件.AddRange(主角背包.物件72); 主角背包.物件72.Clear(); break;
            case 73: 公共物件.AddRange(主角背包.物件73); 主角背包.物件73.Clear(); break;
            case 74: 公共物件.AddRange(主角背包.物件74); 主角背包.物件74.Clear(); break;
            case 75: 公共物件.AddRange(主角背包.物件75); 主角背包.物件75.Clear(); break;
            case 76: 公共物件.AddRange(主角背包.物件76); 主角背包.物件76.Clear(); break;
            case 77: 公共物件.AddRange(主角背包.物件77); 主角背包.物件77.Clear(); break;
            case 78: 公共物件.AddRange(主角背包.物件78); 主角背包.物件78.Clear(); break;
            case 79: 公共物件.AddRange(主角背包.物件79); 主角背包.物件79.Clear(); break;
            case 80: 公共物件.AddRange(主角背包.物件80); 主角背包.物件80.Clear(); break;
            case 81: 公共物件.AddRange(主角背包.物件81); 主角背包.物件81.Clear(); break;
            case 82: 公共物件.AddRange(主角背包.物件82); 主角背包.物件82.Clear(); break;
            case 83: 公共物件.AddRange(主角背包.物件83); 主角背包.物件83.Clear(); break;
            case 84: 公共物件.AddRange(主角背包.物件84); 主角背包.物件84.Clear(); break;
            case 85: 公共物件.AddRange(主角背包.物件85); 主角背包.物件85.Clear(); break;
            case 86: 公共物件.AddRange(主角背包.物件86); 主角背包.物件86.Clear(); break;
            case 87: 公共物件.AddRange(主角背包.物件87); 主角背包.物件87.Clear(); break;
            case 88: 公共物件.AddRange(主角背包.物件88); 主角背包.物件88.Clear(); break;
            case 89: 公共物件.AddRange(主角背包.物件89); 主角背包.物件89.Clear(); break;
            case 90: 公共物件.AddRange(主角背包.物件90); 主角背包.物件90.Clear(); break;
            case 91: 公共物件.AddRange(主角背包.物件91); 主角背包.物件91.Clear(); break;
            case 92: 公共物件.AddRange(主角背包.物件92); 主角背包.物件92.Clear(); break;
            case 93: 公共物件.AddRange(主角背包.物件93); 主角背包.物件93.Clear(); break;
            case 94: 公共物件.AddRange(主角背包.物件94); 主角背包.物件94.Clear(); break;
            case 95: 公共物件.AddRange(主角背包.物件95); 主角背包.物件95.Clear(); break;
            case 96: 公共物件.AddRange(主角背包.物件96); 主角背包.物件96.Clear(); break;
            case 97: 公共物件.AddRange(主角背包.物件97); 主角背包.物件97.Clear(); break;
            case 98: 公共物件.AddRange(主角背包.物件98); 主角背包.物件98.Clear(); break;
            case 99: 公共物件.AddRange(主角背包.物件99); 主角背包.物件99.Clear(); break;
        }
    }

    public void 玩家把Y丟進公共2()//背包Y >> 公共2     //0315確認
    {
        主角背包.物件存在列表[公共Y] = false;
        switch (公共Y)
        {
            case 0: 公共物件02.AddRange(主角背包.物件00); 主角背包.物件00.Clear(); break;
            case 1: 公共物件02.AddRange(主角背包.物件01); 主角背包.物件01.Clear(); break;
            case 2: 公共物件02.AddRange(主角背包.物件02); 主角背包.物件02.Clear(); break;
            case 3: 公共物件02.AddRange(主角背包.物件03); 主角背包.物件03.Clear(); break;
            case 4: 公共物件02.AddRange(主角背包.物件04); 主角背包.物件04.Clear(); break;
            case 5: 公共物件02.AddRange(主角背包.物件05); 主角背包.物件05.Clear(); break;
            case 6: 公共物件02.AddRange(主角背包.物件06); 主角背包.物件06.Clear(); break;
            case 7: 公共物件02.AddRange(主角背包.物件07); 主角背包.物件07.Clear(); break;
            case 8: 公共物件02.AddRange(主角背包.物件08); 主角背包.物件08.Clear(); break;
            case 9: 公共物件02.AddRange(主角背包.物件09); 主角背包.物件09.Clear(); break;
            case 10: 公共物件02.AddRange(主角背包.物件10); 主角背包.物件10.Clear(); break;
            case 11: 公共物件02.AddRange(主角背包.物件11); 主角背包.物件11.Clear(); break;
            case 12: 公共物件02.AddRange(主角背包.物件12); 主角背包.物件12.Clear(); break;
            case 13: 公共物件02.AddRange(主角背包.物件13); 主角背包.物件13.Clear(); break;
            case 14: 公共物件02.AddRange(主角背包.物件14); 主角背包.物件14.Clear(); break;
            case 15: 公共物件02.AddRange(主角背包.物件15); 主角背包.物件15.Clear(); break;
            case 16: 公共物件02.AddRange(主角背包.物件16); 主角背包.物件16.Clear(); break;
            case 17: 公共物件02.AddRange(主角背包.物件17); 主角背包.物件17.Clear(); break;
            case 18: 公共物件02.AddRange(主角背包.物件18); 主角背包.物件18.Clear(); break;
            case 19: 公共物件02.AddRange(主角背包.物件19); 主角背包.物件19.Clear(); break;
            case 20: 公共物件02.AddRange(主角背包.物件20); 主角背包.物件20.Clear(); break;
            case 21: 公共物件02.AddRange(主角背包.物件21); 主角背包.物件21.Clear(); break;
            case 22: 公共物件02.AddRange(主角背包.物件22); 主角背包.物件22.Clear(); break;
            case 23: 公共物件02.AddRange(主角背包.物件23); 主角背包.物件23.Clear(); break;
            case 24: 公共物件02.AddRange(主角背包.物件24); 主角背包.物件24.Clear(); break;
            case 25: 公共物件02.AddRange(主角背包.物件25); 主角背包.物件25.Clear(); break;
            case 26: 公共物件02.AddRange(主角背包.物件26); 主角背包.物件26.Clear(); break;
            case 27: 公共物件02.AddRange(主角背包.物件27); 主角背包.物件27.Clear(); break;
            case 28: 公共物件02.AddRange(主角背包.物件28); 主角背包.物件28.Clear(); break;
            case 29: 公共物件02.AddRange(主角背包.物件29); 主角背包.物件29.Clear(); break;
            case 30: 公共物件02.AddRange(主角背包.物件30); 主角背包.物件30.Clear(); break;
            case 31: 公共物件02.AddRange(主角背包.物件31); 主角背包.物件31.Clear(); break;
            case 32: 公共物件02.AddRange(主角背包.物件32); 主角背包.物件32.Clear(); break;
            case 33: 公共物件02.AddRange(主角背包.物件33); 主角背包.物件33.Clear(); break;
            case 34: 公共物件02.AddRange(主角背包.物件34); 主角背包.物件34.Clear(); break;
            case 35: 公共物件02.AddRange(主角背包.物件35); 主角背包.物件35.Clear(); break;
            case 36: 公共物件02.AddRange(主角背包.物件36); 主角背包.物件36.Clear(); break;
            case 37: 公共物件02.AddRange(主角背包.物件37); 主角背包.物件37.Clear(); break;
            case 38: 公共物件02.AddRange(主角背包.物件38); 主角背包.物件38.Clear(); break;
            case 39: 公共物件02.AddRange(主角背包.物件39); 主角背包.物件39.Clear(); break;
            case 40: 公共物件02.AddRange(主角背包.物件40); 主角背包.物件40.Clear(); break;
            case 41: 公共物件02.AddRange(主角背包.物件41); 主角背包.物件41.Clear(); break;
            case 42: 公共物件02.AddRange(主角背包.物件42); 主角背包.物件42.Clear(); break;
            case 43: 公共物件02.AddRange(主角背包.物件43); 主角背包.物件43.Clear(); break;
            case 44: 公共物件02.AddRange(主角背包.物件44); 主角背包.物件44.Clear(); break;
            case 45: 公共物件02.AddRange(主角背包.物件45); 主角背包.物件45.Clear(); break;
            case 46: 公共物件02.AddRange(主角背包.物件46); 主角背包.物件46.Clear(); break;
            case 47: 公共物件02.AddRange(主角背包.物件47); 主角背包.物件47.Clear(); break;
            case 48: 公共物件02.AddRange(主角背包.物件48); 主角背包.物件48.Clear(); break;
            case 49: 公共物件02.AddRange(主角背包.物件49); 主角背包.物件49.Clear(); break;
            case 50: 公共物件02.AddRange(主角背包.物件50); 主角背包.物件50.Clear(); break;
            case 51: 公共物件02.AddRange(主角背包.物件51); 主角背包.物件51.Clear(); break;
            case 52: 公共物件02.AddRange(主角背包.物件52); 主角背包.物件52.Clear(); break;
            case 53: 公共物件02.AddRange(主角背包.物件53); 主角背包.物件53.Clear(); break;
            case 54: 公共物件02.AddRange(主角背包.物件54); 主角背包.物件54.Clear(); break;
            case 55: 公共物件02.AddRange(主角背包.物件55); 主角背包.物件55.Clear(); break;
            case 56: 公共物件02.AddRange(主角背包.物件56); 主角背包.物件56.Clear(); break;
            case 57: 公共物件02.AddRange(主角背包.物件57); 主角背包.物件57.Clear(); break;
            case 58: 公共物件02.AddRange(主角背包.物件58); 主角背包.物件58.Clear(); break;
            case 59: 公共物件02.AddRange(主角背包.物件59); 主角背包.物件59.Clear(); break;
            case 60: 公共物件02.AddRange(主角背包.物件60); 主角背包.物件60.Clear(); break;
            case 61: 公共物件02.AddRange(主角背包.物件61); 主角背包.物件61.Clear(); break;
            case 62: 公共物件02.AddRange(主角背包.物件62); 主角背包.物件62.Clear(); break;
            case 63: 公共物件02.AddRange(主角背包.物件63); 主角背包.物件63.Clear(); break;
            case 64: 公共物件02.AddRange(主角背包.物件64); 主角背包.物件64.Clear(); break;
            case 65: 公共物件02.AddRange(主角背包.物件65); 主角背包.物件65.Clear(); break;
            case 66: 公共物件02.AddRange(主角背包.物件66); 主角背包.物件66.Clear(); break;
            case 67: 公共物件02.AddRange(主角背包.物件67); 主角背包.物件67.Clear(); break;
            case 68: 公共物件02.AddRange(主角背包.物件68); 主角背包.物件68.Clear(); break;
            case 69: 公共物件02.AddRange(主角背包.物件69); 主角背包.物件69.Clear(); break;
            case 70: 公共物件02.AddRange(主角背包.物件70); 主角背包.物件70.Clear(); break;
            case 71: 公共物件02.AddRange(主角背包.物件71); 主角背包.物件71.Clear(); break;
            case 72: 公共物件02.AddRange(主角背包.物件72); 主角背包.物件72.Clear(); break;
            case 73: 公共物件02.AddRange(主角背包.物件73); 主角背包.物件73.Clear(); break;
            case 74: 公共物件02.AddRange(主角背包.物件74); 主角背包.物件74.Clear(); break;
            case 75: 公共物件02.AddRange(主角背包.物件75); 主角背包.物件75.Clear(); break;
            case 76: 公共物件02.AddRange(主角背包.物件76); 主角背包.物件76.Clear(); break;
            case 77: 公共物件02.AddRange(主角背包.物件77); 主角背包.物件77.Clear(); break;
            case 78: 公共物件02.AddRange(主角背包.物件78); 主角背包.物件78.Clear(); break;
            case 79: 公共物件02.AddRange(主角背包.物件79); 主角背包.物件79.Clear(); break;
            case 80: 公共物件02.AddRange(主角背包.物件80); 主角背包.物件80.Clear(); break;
            case 81: 公共物件02.AddRange(主角背包.物件81); 主角背包.物件81.Clear(); break;
            case 82: 公共物件02.AddRange(主角背包.物件82); 主角背包.物件82.Clear(); break;
            case 83: 公共物件02.AddRange(主角背包.物件83); 主角背包.物件83.Clear(); break;
            case 84: 公共物件02.AddRange(主角背包.物件84); 主角背包.物件84.Clear(); break;
            case 85: 公共物件02.AddRange(主角背包.物件85); 主角背包.物件85.Clear(); break;
            case 86: 公共物件02.AddRange(主角背包.物件86); 主角背包.物件86.Clear(); break;
            case 87: 公共物件02.AddRange(主角背包.物件87); 主角背包.物件87.Clear(); break;
            case 88: 公共物件02.AddRange(主角背包.物件88); 主角背包.物件88.Clear(); break;
            case 89: 公共物件02.AddRange(主角背包.物件89); 主角背包.物件89.Clear(); break;
            case 90: 公共物件02.AddRange(主角背包.物件90); 主角背包.物件90.Clear(); break;
            case 91: 公共物件02.AddRange(主角背包.物件91); 主角背包.物件91.Clear(); break;
            case 92: 公共物件02.AddRange(主角背包.物件92); 主角背包.物件92.Clear(); break;
            case 93: 公共物件02.AddRange(主角背包.物件93); 主角背包.物件93.Clear(); break;
            case 94: 公共物件02.AddRange(主角背包.物件94); 主角背包.物件94.Clear(); break;
            case 95: 公共物件02.AddRange(主角背包.物件95); 主角背包.物件95.Clear(); break;
            case 96: 公共物件02.AddRange(主角背包.物件96); 主角背包.物件96.Clear(); break;
            case 97: 公共物件02.AddRange(主角背包.物件97); 主角背包.物件97.Clear(); break;
            case 98: 公共物件02.AddRange(主角背包.物件98); 主角背包.物件98.Clear(); break;
            case 99: 公共物件02.AddRange(主角背包.物件99); 主角背包.物件99.Clear(); break;
        }

    }


    public void 玩家把公共1丟進Y()//公共1 >> 背包Y     //0315確認
    {
        主角背包.物件存在列表[公共Y] = true;
        switch (公共Y)//把公共丟進Y物品
        {
            case 0: 主角背包.物件00.AddRange(公共物件); break;
            case 1: 主角背包.物件01.AddRange(公共物件); break;
            case 2: 主角背包.物件02.AddRange(公共物件); break;
            case 3: 主角背包.物件03.AddRange(公共物件); break;
            case 4: 主角背包.物件04.AddRange(公共物件); break;
            case 5: 主角背包.物件05.AddRange(公共物件); break;
            case 6: 主角背包.物件06.AddRange(公共物件); break;
            case 7: 主角背包.物件07.AddRange(公共物件); break;
            case 8: 主角背包.物件08.AddRange(公共物件); break;
            case 9: 主角背包.物件09.AddRange(公共物件); break;
            case 10: 主角背包.物件10.AddRange(公共物件); break;
            case 11: 主角背包.物件11.AddRange(公共物件); break;
            case 12: 主角背包.物件12.AddRange(公共物件); break;
            case 13: 主角背包.物件13.AddRange(公共物件); break;
            case 14: 主角背包.物件14.AddRange(公共物件); break;
            case 15: 主角背包.物件15.AddRange(公共物件); break;
            case 16: 主角背包.物件16.AddRange(公共物件); break;
            case 17: 主角背包.物件17.AddRange(公共物件); break;
            case 18: 主角背包.物件18.AddRange(公共物件); break;
            case 19: 主角背包.物件19.AddRange(公共物件); break;
            case 20: 主角背包.物件20.AddRange(公共物件); break;
            case 21: 主角背包.物件21.AddRange(公共物件); break;
            case 22: 主角背包.物件22.AddRange(公共物件); break;
            case 23: 主角背包.物件23.AddRange(公共物件); break;
            case 24: 主角背包.物件24.AddRange(公共物件); break;
            case 25: 主角背包.物件25.AddRange(公共物件); break;
            case 26: 主角背包.物件26.AddRange(公共物件); break;
            case 27: 主角背包.物件27.AddRange(公共物件); break;
            case 28: 主角背包.物件28.AddRange(公共物件); break;
            case 29: 主角背包.物件29.AddRange(公共物件); break;
            case 30: 主角背包.物件30.AddRange(公共物件); break;
            case 31: 主角背包.物件31.AddRange(公共物件); break;
            case 32: 主角背包.物件32.AddRange(公共物件); break;
            case 33: 主角背包.物件33.AddRange(公共物件); break;
            case 34: 主角背包.物件34.AddRange(公共物件); break;
            case 35: 主角背包.物件35.AddRange(公共物件); break;
            case 36: 主角背包.物件36.AddRange(公共物件); break;
            case 37: 主角背包.物件37.AddRange(公共物件); break;
            case 38: 主角背包.物件38.AddRange(公共物件); break;
            case 39: 主角背包.物件39.AddRange(公共物件); break;
            case 40: 主角背包.物件40.AddRange(公共物件); break;
            case 41: 主角背包.物件41.AddRange(公共物件); break;
            case 42: 主角背包.物件42.AddRange(公共物件); break;
            case 43: 主角背包.物件43.AddRange(公共物件); break;
            case 44: 主角背包.物件44.AddRange(公共物件); break;
            case 45: 主角背包.物件45.AddRange(公共物件); break;
            case 46: 主角背包.物件46.AddRange(公共物件); break;
            case 47: 主角背包.物件47.AddRange(公共物件); break;
            case 48: 主角背包.物件48.AddRange(公共物件); break;
            case 49: 主角背包.物件49.AddRange(公共物件); break;
            case 50: 主角背包.物件50.AddRange(公共物件); break;
            case 51: 主角背包.物件51.AddRange(公共物件); break;
            case 52: 主角背包.物件52.AddRange(公共物件); break;
            case 53: 主角背包.物件53.AddRange(公共物件); break;
            case 54: 主角背包.物件54.AddRange(公共物件); break;
            case 55: 主角背包.物件55.AddRange(公共物件); break;
            case 56: 主角背包.物件56.AddRange(公共物件); break;
            case 57: 主角背包.物件57.AddRange(公共物件); break;
            case 58: 主角背包.物件58.AddRange(公共物件); break;
            case 59: 主角背包.物件59.AddRange(公共物件); break;
            case 60: 主角背包.物件60.AddRange(公共物件); break;
            case 61: 主角背包.物件61.AddRange(公共物件); break;
            case 62: 主角背包.物件62.AddRange(公共物件); break;
            case 63: 主角背包.物件63.AddRange(公共物件); break;
            case 64: 主角背包.物件64.AddRange(公共物件); break;
            case 65: 主角背包.物件65.AddRange(公共物件); break;
            case 66: 主角背包.物件66.AddRange(公共物件); break;
            case 67: 主角背包.物件67.AddRange(公共物件); break;
            case 68: 主角背包.物件68.AddRange(公共物件); break;
            case 69: 主角背包.物件69.AddRange(公共物件); break;
            case 70: 主角背包.物件70.AddRange(公共物件); break;
            case 71: 主角背包.物件71.AddRange(公共物件); break;
            case 72: 主角背包.物件72.AddRange(公共物件); break;
            case 73: 主角背包.物件73.AddRange(公共物件); break;
            case 74: 主角背包.物件74.AddRange(公共物件); break;
            case 75: 主角背包.物件75.AddRange(公共物件); break;
            case 76: 主角背包.物件76.AddRange(公共物件); break;
            case 77: 主角背包.物件77.AddRange(公共物件); break;
            case 78: 主角背包.物件78.AddRange(公共物件); break;
            case 79: 主角背包.物件79.AddRange(公共物件); break;
            case 80: 主角背包.物件80.AddRange(公共物件); break;
            case 81: 主角背包.物件81.AddRange(公共物件); break;
            case 82: 主角背包.物件82.AddRange(公共物件); break;
            case 83: 主角背包.物件83.AddRange(公共物件); break;
            case 84: 主角背包.物件84.AddRange(公共物件); break;
            case 85: 主角背包.物件85.AddRange(公共物件); break;
            case 86: 主角背包.物件86.AddRange(公共物件); break;
            case 87: 主角背包.物件87.AddRange(公共物件); break;
            case 88: 主角背包.物件88.AddRange(公共物件); break;
            case 89: 主角背包.物件89.AddRange(公共物件); break;
            case 90: 主角背包.物件90.AddRange(公共物件); break;
            case 91: 主角背包.物件91.AddRange(公共物件); break;
            case 92: 主角背包.物件92.AddRange(公共物件); break;
            case 93: 主角背包.物件93.AddRange(公共物件); break;
            case 94: 主角背包.物件94.AddRange(公共物件); break;
            case 95: 主角背包.物件95.AddRange(公共物件); break;
            case 96: 主角背包.物件96.AddRange(公共物件); break;
            case 97: 主角背包.物件97.AddRange(公共物件); break;
            case 98: 主角背包.物件98.AddRange(公共物件); break;
            case 99: 主角背包.物件99.AddRange(公共物件); break;
        }
    }

    public void 玩家把公共2丟進X()//公共2 >> 背包X     //0315確認
    {
        主角背包.物件存在列表[公共X] = true;
        switch (公共X)//把公共丟進Y物品
        {
            case 0: 主角背包.物件00.AddRange(公共物件02); break;
            case 1: 主角背包.物件01.AddRange(公共物件02); break;
            case 2: 主角背包.物件02.AddRange(公共物件02); break;
            case 3: 主角背包.物件03.AddRange(公共物件02); break;
            case 4: 主角背包.物件04.AddRange(公共物件02); break;
            case 5: 主角背包.物件05.AddRange(公共物件02); break;
            case 6: 主角背包.物件06.AddRange(公共物件02); break;
            case 7: 主角背包.物件07.AddRange(公共物件02); break;
            case 8: 主角背包.物件08.AddRange(公共物件02); break;
            case 9: 主角背包.物件09.AddRange(公共物件02); break;
            case 10: 主角背包.物件10.AddRange(公共物件02); break;
            case 11: 主角背包.物件11.AddRange(公共物件02); break;
            case 12: 主角背包.物件12.AddRange(公共物件02); break;
            case 13: 主角背包.物件13.AddRange(公共物件02); break;
            case 14: 主角背包.物件14.AddRange(公共物件02); break;
            case 15: 主角背包.物件15.AddRange(公共物件02); break;
            case 16: 主角背包.物件16.AddRange(公共物件02); break;
            case 17: 主角背包.物件17.AddRange(公共物件02); break;
            case 18: 主角背包.物件18.AddRange(公共物件02); break;
            case 19: 主角背包.物件19.AddRange(公共物件02); break;
            case 20: 主角背包.物件20.AddRange(公共物件02); break;
            case 21: 主角背包.物件21.AddRange(公共物件02); break;
            case 22: 主角背包.物件22.AddRange(公共物件02); break;
            case 23: 主角背包.物件23.AddRange(公共物件02); break;
            case 24: 主角背包.物件24.AddRange(公共物件02); break;
            case 25: 主角背包.物件25.AddRange(公共物件02); break;
            case 26: 主角背包.物件26.AddRange(公共物件02); break;
            case 27: 主角背包.物件27.AddRange(公共物件02); break;
            case 28: 主角背包.物件28.AddRange(公共物件02); break;
            case 29: 主角背包.物件29.AddRange(公共物件02); break;
            case 30: 主角背包.物件30.AddRange(公共物件02); break;
            case 31: 主角背包.物件31.AddRange(公共物件02); break;
            case 32: 主角背包.物件32.AddRange(公共物件02); break;
            case 33: 主角背包.物件33.AddRange(公共物件02); break;
            case 34: 主角背包.物件34.AddRange(公共物件02); break;
            case 35: 主角背包.物件35.AddRange(公共物件02); break;
            case 36: 主角背包.物件36.AddRange(公共物件02); break;
            case 37: 主角背包.物件37.AddRange(公共物件02); break;
            case 38: 主角背包.物件38.AddRange(公共物件02); break;
            case 39: 主角背包.物件39.AddRange(公共物件02); break;
            case 40: 主角背包.物件40.AddRange(公共物件02); break;
            case 41: 主角背包.物件41.AddRange(公共物件02); break;
            case 42: 主角背包.物件42.AddRange(公共物件02); break;
            case 43: 主角背包.物件43.AddRange(公共物件02); break;
            case 44: 主角背包.物件44.AddRange(公共物件02); break;
            case 45: 主角背包.物件45.AddRange(公共物件02); break;
            case 46: 主角背包.物件46.AddRange(公共物件02); break;
            case 47: 主角背包.物件47.AddRange(公共物件02); break;
            case 48: 主角背包.物件48.AddRange(公共物件02); break;
            case 49: 主角背包.物件49.AddRange(公共物件02); break;
            case 50: 主角背包.物件50.AddRange(公共物件02); break;
            case 51: 主角背包.物件51.AddRange(公共物件02); break;
            case 52: 主角背包.物件52.AddRange(公共物件02); break;
            case 53: 主角背包.物件53.AddRange(公共物件02); break;
            case 54: 主角背包.物件54.AddRange(公共物件02); break;
            case 55: 主角背包.物件55.AddRange(公共物件02); break;
            case 56: 主角背包.物件56.AddRange(公共物件02); break;
            case 57: 主角背包.物件57.AddRange(公共物件02); break;
            case 58: 主角背包.物件58.AddRange(公共物件02); break;
            case 59: 主角背包.物件59.AddRange(公共物件02); break;
            case 60: 主角背包.物件60.AddRange(公共物件02); break;
            case 61: 主角背包.物件61.AddRange(公共物件02); break;
            case 62: 主角背包.物件62.AddRange(公共物件02); break;
            case 63: 主角背包.物件63.AddRange(公共物件02); break;
            case 64: 主角背包.物件64.AddRange(公共物件02); break;
            case 65: 主角背包.物件65.AddRange(公共物件02); break;
            case 66: 主角背包.物件66.AddRange(公共物件02); break;
            case 67: 主角背包.物件67.AddRange(公共物件02); break;
            case 68: 主角背包.物件68.AddRange(公共物件02); break;
            case 69: 主角背包.物件69.AddRange(公共物件02); break;
            case 70: 主角背包.物件70.AddRange(公共物件02); break;
            case 71: 主角背包.物件71.AddRange(公共物件02); break;
            case 72: 主角背包.物件72.AddRange(公共物件02); break;
            case 73: 主角背包.物件73.AddRange(公共物件02); break;
            case 74: 主角背包.物件74.AddRange(公共物件02); break;
            case 75: 主角背包.物件75.AddRange(公共物件02); break;
            case 76: 主角背包.物件76.AddRange(公共物件02); break;
            case 77: 主角背包.物件77.AddRange(公共物件02); break;
            case 78: 主角背包.物件78.AddRange(公共物件02); break;
            case 79: 主角背包.物件79.AddRange(公共物件02); break;
            case 80: 主角背包.物件80.AddRange(公共物件02); break;
            case 81: 主角背包.物件81.AddRange(公共物件02); break;
            case 82: 主角背包.物件82.AddRange(公共物件02); break;
            case 83: 主角背包.物件83.AddRange(公共物件02); break;
            case 84: 主角背包.物件84.AddRange(公共物件02); break;
            case 85: 主角背包.物件85.AddRange(公共物件02); break;
            case 86: 主角背包.物件86.AddRange(公共物件02); break;
            case 87: 主角背包.物件87.AddRange(公共物件02); break;
            case 88: 主角背包.物件88.AddRange(公共物件02); break;
            case 89: 主角背包.物件89.AddRange(公共物件02); break;
            case 90: 主角背包.物件90.AddRange(公共物件02); break;
            case 91: 主角背包.物件91.AddRange(公共物件02); break;
            case 92: 主角背包.物件92.AddRange(公共物件02); break;
            case 93: 主角背包.物件93.AddRange(公共物件02); break;
            case 94: 主角背包.物件94.AddRange(公共物件02); break;
            case 95: 主角背包.物件95.AddRange(公共物件02); break;
            case 96: 主角背包.物件96.AddRange(公共物件02); break;
            case 97: 主角背包.物件97.AddRange(公共物件02); break;
            case 98: 主角背包.物件98.AddRange(公共物件02); break;
            case 99: 主角背包.物件99.AddRange(公共物件02); break;
        }
    }

    public void 玩家把公共1丟進販賣區()//公共1>>販賣區(無指定)      //0315確認
    {
        for (int i = 0; i < 50; i++) //篩出一個可以用的交易欄
        {
            if (!主角背包.販賣物存在列表[i])
            {
                主角背包.販賣物存在列表[i] = true;
                公共0 = i;
                break;
            }
        }
        switch (公共0)
        {
            case 0: 主角背包.販賣物00.AddRange(公共物件); break;
            case 1: 主角背包.販賣物01.AddRange(公共物件); break;
            case 2: 主角背包.販賣物02.AddRange(公共物件); break;
            case 3: 主角背包.販賣物03.AddRange(公共物件); break;
            case 4: 主角背包.販賣物04.AddRange(公共物件); break;
            case 5: 主角背包.販賣物05.AddRange(公共物件); break;
            case 6: 主角背包.販賣物06.AddRange(公共物件); break;
            case 7: 主角背包.販賣物07.AddRange(公共物件); break;
            case 8: 主角背包.販賣物08.AddRange(公共物件); break;
            case 9: 主角背包.販賣物09.AddRange(公共物件); break;
            case 10: 主角背包.販賣物10.AddRange(公共物件); break;
            case 11: 主角背包.販賣物11.AddRange(公共物件); break;
            case 12: 主角背包.販賣物12.AddRange(公共物件); break;
            case 13: 主角背包.販賣物13.AddRange(公共物件); break;
            case 14: 主角背包.販賣物14.AddRange(公共物件); break;
            case 15: 主角背包.販賣物15.AddRange(公共物件); break;
            case 16: 主角背包.販賣物16.AddRange(公共物件); break;
            case 17: 主角背包.販賣物17.AddRange(公共物件); break;
            case 18: 主角背包.販賣物18.AddRange(公共物件); break;
            case 19: 主角背包.販賣物19.AddRange(公共物件); break;
            case 20: 主角背包.販賣物20.AddRange(公共物件); break;
            case 21: 主角背包.販賣物21.AddRange(公共物件); break;
            case 22: 主角背包.販賣物22.AddRange(公共物件); break;
            case 23: 主角背包.販賣物23.AddRange(公共物件); break;
            case 24: 主角背包.販賣物24.AddRange(公共物件); break;
            case 25: 主角背包.販賣物25.AddRange(公共物件); break;
            case 26: 主角背包.販賣物26.AddRange(公共物件); break;
            case 27: 主角背包.販賣物27.AddRange(公共物件); break;
            case 28: 主角背包.販賣物28.AddRange(公共物件); break;
            case 29: 主角背包.販賣物29.AddRange(公共物件); break;
            case 30: 主角背包.販賣物30.AddRange(公共物件); break;
            case 31: 主角背包.販賣物31.AddRange(公共物件); break;
            case 32: 主角背包.販賣物32.AddRange(公共物件); break;
            case 33: 主角背包.販賣物33.AddRange(公共物件); break;
            case 34: 主角背包.販賣物34.AddRange(公共物件); break;
            case 35: 主角背包.販賣物35.AddRange(公共物件); break;
            case 36: 主角背包.販賣物36.AddRange(公共物件); break;
            case 37: 主角背包.販賣物37.AddRange(公共物件); break;
            case 38: 主角背包.販賣物38.AddRange(公共物件); break;
            case 39: 主角背包.販賣物39.AddRange(公共物件); break;
            case 40: 主角背包.販賣物40.AddRange(公共物件); break;
            case 41: 主角背包.販賣物41.AddRange(公共物件); break;
            case 42: 主角背包.販賣物42.AddRange(公共物件); break;
            case 43: 主角背包.販賣物43.AddRange(公共物件); break;
            case 44: 主角背包.販賣物44.AddRange(公共物件); break;
            case 45: 主角背包.販賣物45.AddRange(公共物件); break;
            case 46: 主角背包.販賣物46.AddRange(公共物件); break;
            case 47: 主角背包.販賣物47.AddRange(公共物件); break;
            case 48: 主角背包.販賣物48.AddRange(公共物件); break;
            case 49: 主角背包.販賣物49.AddRange(公共物件); break;
        }
    }

    public void 玩家把公共1丟進背包() //公共1 >> 背包(無指定)       //0315確認
    {
        for (int i = 0; i < 100; i++) //篩出一個可以用的交易欄
        {
            if (!主角背包.物件存在列表[i])
            {
                主角背包.物件存在列表[i] = true;
                公共0 = i;
                break;
            }
        }
        switch (公共0)
        {
            case 0: 主角背包.物件00.AddRange(公共物件); break;
            case 1: 主角背包.物件01.AddRange(公共物件); break;
            case 2: 主角背包.物件02.AddRange(公共物件); break;
            case 3: 主角背包.物件03.AddRange(公共物件); break;
            case 4: 主角背包.物件04.AddRange(公共物件); break;
            case 5: 主角背包.物件05.AddRange(公共物件); break;
            case 6: 主角背包.物件06.AddRange(公共物件); break;
            case 7: 主角背包.物件07.AddRange(公共物件); break;
            case 8: 主角背包.物件08.AddRange(公共物件); break;
            case 9: 主角背包.物件09.AddRange(公共物件); break;
            case 10: 主角背包.物件10.AddRange(公共物件); break;
            case 11: 主角背包.物件11.AddRange(公共物件); break;
            case 12: 主角背包.物件12.AddRange(公共物件); break;
            case 13: 主角背包.物件13.AddRange(公共物件); break;
            case 14: 主角背包.物件14.AddRange(公共物件); break;
            case 15: 主角背包.物件15.AddRange(公共物件); break;
            case 16: 主角背包.物件16.AddRange(公共物件); break;
            case 17: 主角背包.物件17.AddRange(公共物件); break;
            case 18: 主角背包.物件18.AddRange(公共物件); break;
            case 19: 主角背包.物件19.AddRange(公共物件); break;
            case 20: 主角背包.物件20.AddRange(公共物件); break;
            case 21: 主角背包.物件21.AddRange(公共物件); break;
            case 22: 主角背包.物件22.AddRange(公共物件); break;
            case 23: 主角背包.物件23.AddRange(公共物件); break;
            case 24: 主角背包.物件24.AddRange(公共物件); break;
            case 25: 主角背包.物件25.AddRange(公共物件); break;
            case 26: 主角背包.物件26.AddRange(公共物件); break;
            case 27: 主角背包.物件27.AddRange(公共物件); break;
            case 28: 主角背包.物件28.AddRange(公共物件); break;
            case 29: 主角背包.物件29.AddRange(公共物件); break;
            case 30: 主角背包.物件30.AddRange(公共物件); break;
            case 31: 主角背包.物件31.AddRange(公共物件); break;
            case 32: 主角背包.物件32.AddRange(公共物件); break;
            case 33: 主角背包.物件33.AddRange(公共物件); break;
            case 34: 主角背包.物件34.AddRange(公共物件); break;
            case 35: 主角背包.物件35.AddRange(公共物件); break;
            case 36: 主角背包.物件36.AddRange(公共物件); break;
            case 37: 主角背包.物件37.AddRange(公共物件); break;
            case 38: 主角背包.物件38.AddRange(公共物件); break;
            case 39: 主角背包.物件39.AddRange(公共物件); break;
            case 40: 主角背包.物件40.AddRange(公共物件); break;
            case 41: 主角背包.物件41.AddRange(公共物件); break;
            case 42: 主角背包.物件42.AddRange(公共物件); break;
            case 43: 主角背包.物件43.AddRange(公共物件); break;
            case 44: 主角背包.物件44.AddRange(公共物件); break;
            case 45: 主角背包.物件45.AddRange(公共物件); break;
            case 46: 主角背包.物件46.AddRange(公共物件); break;
            case 47: 主角背包.物件47.AddRange(公共物件); break;
            case 48: 主角背包.物件48.AddRange(公共物件); break;
            case 49: 主角背包.物件49.AddRange(公共物件); break;
            case 50: 主角背包.物件50.AddRange(公共物件); break;
            case 51: 主角背包.物件51.AddRange(公共物件); break;
            case 52: 主角背包.物件52.AddRange(公共物件); break;
            case 53: 主角背包.物件53.AddRange(公共物件); break;
            case 54: 主角背包.物件54.AddRange(公共物件); break;
            case 55: 主角背包.物件55.AddRange(公共物件); break;
            case 56: 主角背包.物件56.AddRange(公共物件); break;
            case 57: 主角背包.物件57.AddRange(公共物件); break;
            case 58: 主角背包.物件58.AddRange(公共物件); break;
            case 59: 主角背包.物件59.AddRange(公共物件); break;
            case 60: 主角背包.物件60.AddRange(公共物件); break;
            case 61: 主角背包.物件61.AddRange(公共物件); break;
            case 62: 主角背包.物件62.AddRange(公共物件); break;
            case 63: 主角背包.物件63.AddRange(公共物件); break;
            case 64: 主角背包.物件64.AddRange(公共物件); break;
            case 65: 主角背包.物件65.AddRange(公共物件); break;
            case 66: 主角背包.物件66.AddRange(公共物件); break;
            case 67: 主角背包.物件67.AddRange(公共物件); break;
            case 68: 主角背包.物件68.AddRange(公共物件); break;
            case 69: 主角背包.物件69.AddRange(公共物件); break;
            case 70: 主角背包.物件70.AddRange(公共物件); break;
            case 71: 主角背包.物件71.AddRange(公共物件); break;
            case 72: 主角背包.物件72.AddRange(公共物件); break;
            case 73: 主角背包.物件73.AddRange(公共物件); break;
            case 74: 主角背包.物件74.AddRange(公共物件); break;
            case 75: 主角背包.物件75.AddRange(公共物件); break;
            case 76: 主角背包.物件76.AddRange(公共物件); break;
            case 77: 主角背包.物件77.AddRange(公共物件); break;
            case 78: 主角背包.物件78.AddRange(公共物件); break;
            case 79: 主角背包.物件79.AddRange(公共物件); break;
            case 80: 主角背包.物件80.AddRange(公共物件); break;
            case 81: 主角背包.物件81.AddRange(公共物件); break;
            case 82: 主角背包.物件82.AddRange(公共物件); break;
            case 83: 主角背包.物件83.AddRange(公共物件); break;
            case 84: 主角背包.物件84.AddRange(公共物件); break;
            case 85: 主角背包.物件85.AddRange(公共物件); break;
            case 86: 主角背包.物件86.AddRange(公共物件); break;
            case 87: 主角背包.物件87.AddRange(公共物件); break;
            case 88: 主角背包.物件88.AddRange(公共物件); break;
            case 89: 主角背包.物件89.AddRange(公共物件); break;
            case 90: 主角背包.物件90.AddRange(公共物件); break;
            case 91: 主角背包.物件91.AddRange(公共物件); break;
            case 92: 主角背包.物件92.AddRange(公共物件); break;
            case 93: 主角背包.物件93.AddRange(公共物件); break;
            case 94: 主角背包.物件94.AddRange(公共物件); break;
            case 95: 主角背包.物件95.AddRange(公共物件); break;
            case 96: 主角背包.物件96.AddRange(公共物件); break;
            case 97: 主角背包.物件97.AddRange(公共物件); break;
            case 98: 主角背包.物件98.AddRange(公共物件); break;
            case 99: 主角背包.物件99.AddRange(公共物件); break;

        }
    }

    public void 玩家把販賣區X丟進公共1()//販賣X >> 公共1     //0315確認
    {
        主角背包.販賣物存在列表[公共X - 100] = false;
        switch (公共X)
        {
            case 100: 公共物件.AddRange(主角背包.販賣物00); 主角背包.販賣物00.Clear(); break;
            case 101: 公共物件.AddRange(主角背包.販賣物01); 主角背包.販賣物01.Clear(); break;
            case 102: 公共物件.AddRange(主角背包.販賣物02); 主角背包.販賣物02.Clear(); break;
            case 103: 公共物件.AddRange(主角背包.販賣物03); 主角背包.販賣物03.Clear(); break;
            case 104: 公共物件.AddRange(主角背包.販賣物04); 主角背包.販賣物04.Clear(); break;
            case 105: 公共物件.AddRange(主角背包.販賣物05); 主角背包.販賣物05.Clear(); break;
            case 106: 公共物件.AddRange(主角背包.販賣物06); 主角背包.販賣物06.Clear(); break;
            case 107: 公共物件.AddRange(主角背包.販賣物07); 主角背包.販賣物07.Clear(); break;
            case 108: 公共物件.AddRange(主角背包.販賣物08); 主角背包.販賣物08.Clear(); break;
            case 109: 公共物件.AddRange(主角背包.販賣物09); 主角背包.販賣物09.Clear(); break;
            case 110: 公共物件.AddRange(主角背包.販賣物10); 主角背包.販賣物10.Clear(); break;
            case 111: 公共物件.AddRange(主角背包.販賣物11); 主角背包.販賣物11.Clear(); break;
            case 112: 公共物件.AddRange(主角背包.販賣物12); 主角背包.販賣物12.Clear(); break;
            case 113: 公共物件.AddRange(主角背包.販賣物13); 主角背包.販賣物13.Clear(); break;
            case 114: 公共物件.AddRange(主角背包.販賣物14); 主角背包.販賣物14.Clear(); break;
            case 115: 公共物件.AddRange(主角背包.販賣物15); 主角背包.販賣物15.Clear(); break;
            case 116: 公共物件.AddRange(主角背包.販賣物16); 主角背包.販賣物16.Clear(); break;
            case 117: 公共物件.AddRange(主角背包.販賣物17); 主角背包.販賣物17.Clear(); break;
            case 118: 公共物件.AddRange(主角背包.販賣物18); 主角背包.販賣物18.Clear(); break;
            case 119: 公共物件.AddRange(主角背包.販賣物19); 主角背包.販賣物19.Clear(); break;
            case 120: 公共物件.AddRange(主角背包.販賣物20); 主角背包.販賣物20.Clear(); break;
            case 121: 公共物件.AddRange(主角背包.販賣物21); 主角背包.販賣物21.Clear(); break;
            case 122: 公共物件.AddRange(主角背包.販賣物22); 主角背包.販賣物22.Clear(); break;
            case 123: 公共物件.AddRange(主角背包.販賣物23); 主角背包.販賣物23.Clear(); break;
            case 124: 公共物件.AddRange(主角背包.販賣物24); 主角背包.販賣物24.Clear(); break;
            case 125: 公共物件.AddRange(主角背包.販賣物25); 主角背包.販賣物25.Clear(); break;
            case 126: 公共物件.AddRange(主角背包.販賣物26); 主角背包.販賣物26.Clear(); break;
            case 127: 公共物件.AddRange(主角背包.販賣物27); 主角背包.販賣物27.Clear(); break;
            case 128: 公共物件.AddRange(主角背包.販賣物28); 主角背包.販賣物28.Clear(); break;
            case 129: 公共物件.AddRange(主角背包.販賣物29); 主角背包.販賣物29.Clear(); break;
            case 130: 公共物件.AddRange(主角背包.販賣物30); 主角背包.販賣物30.Clear(); break;
            case 131: 公共物件.AddRange(主角背包.販賣物31); 主角背包.販賣物31.Clear(); break;
            case 132: 公共物件.AddRange(主角背包.販賣物32); 主角背包.販賣物32.Clear(); break;
            case 133: 公共物件.AddRange(主角背包.販賣物33); 主角背包.販賣物33.Clear(); break;
            case 134: 公共物件.AddRange(主角背包.販賣物34); 主角背包.販賣物34.Clear(); break;
            case 135: 公共物件.AddRange(主角背包.販賣物35); 主角背包.販賣物35.Clear(); break;
            case 136: 公共物件.AddRange(主角背包.販賣物36); 主角背包.販賣物36.Clear(); break;
            case 137: 公共物件.AddRange(主角背包.販賣物37); 主角背包.販賣物37.Clear(); break;
            case 138: 公共物件.AddRange(主角背包.販賣物38); 主角背包.販賣物38.Clear(); break;
            case 139: 公共物件.AddRange(主角背包.販賣物39); 主角背包.販賣物39.Clear(); break;
            case 140: 公共物件.AddRange(主角背包.販賣物40); 主角背包.販賣物40.Clear(); break;
            case 141: 公共物件.AddRange(主角背包.販賣物41); 主角背包.販賣物41.Clear(); break;
            case 142: 公共物件.AddRange(主角背包.販賣物42); 主角背包.販賣物42.Clear(); break;
            case 143: 公共物件.AddRange(主角背包.販賣物43); 主角背包.販賣物43.Clear(); break;
            case 144: 公共物件.AddRange(主角背包.販賣物44); 主角背包.販賣物44.Clear(); break;
            case 145: 公共物件.AddRange(主角背包.販賣物45); 主角背包.販賣物45.Clear(); break;
            case 146: 公共物件.AddRange(主角背包.販賣物46); 主角背包.販賣物46.Clear(); break;
            case 147: 公共物件.AddRange(主角背包.販賣物47); 主角背包.販賣物47.Clear(); break;
            case 148: 公共物件.AddRange(主角背包.販賣物48); 主角背包.販賣物48.Clear(); break;
            case 149: 公共物件.AddRange(主角背包.販賣物49); 主角背包.販賣物49.Clear(); break;
        }
    }

    public void 玩家把販賣區Y丟進公共2()//販賣Y >> 公共2     //0315確認
    {
        主角背包.販賣物存在列表[公共Y - 100] = false;
        switch (公共Y)
        {
            case 100: 公共物件02.AddRange(主角背包.販賣物00); 主角背包.販賣物00.Clear(); break;
            case 101: 公共物件02.AddRange(主角背包.販賣物01); 主角背包.販賣物01.Clear(); break;
            case 102: 公共物件02.AddRange(主角背包.販賣物02); 主角背包.販賣物02.Clear(); break;
            case 103: 公共物件02.AddRange(主角背包.販賣物03); 主角背包.販賣物03.Clear(); break;
            case 104: 公共物件02.AddRange(主角背包.販賣物04); 主角背包.販賣物04.Clear(); break;
            case 105: 公共物件02.AddRange(主角背包.販賣物05); 主角背包.販賣物05.Clear(); break;
            case 106: 公共物件02.AddRange(主角背包.販賣物06); 主角背包.販賣物06.Clear(); break;
            case 107: 公共物件02.AddRange(主角背包.販賣物07); 主角背包.販賣物07.Clear(); break;
            case 108: 公共物件02.AddRange(主角背包.販賣物08); 主角背包.販賣物08.Clear(); break;
            case 109: 公共物件02.AddRange(主角背包.販賣物09); 主角背包.販賣物09.Clear(); break;
            case 110: 公共物件02.AddRange(主角背包.販賣物10); 主角背包.販賣物10.Clear(); break;
            case 111: 公共物件02.AddRange(主角背包.販賣物11); 主角背包.販賣物11.Clear(); break;
            case 112: 公共物件02.AddRange(主角背包.販賣物12); 主角背包.販賣物12.Clear(); break;
            case 113: 公共物件02.AddRange(主角背包.販賣物13); 主角背包.販賣物13.Clear(); break;
            case 114: 公共物件02.AddRange(主角背包.販賣物14); 主角背包.販賣物14.Clear(); break;
            case 115: 公共物件02.AddRange(主角背包.販賣物15); 主角背包.販賣物15.Clear(); break;
            case 116: 公共物件02.AddRange(主角背包.販賣物16); 主角背包.販賣物16.Clear(); break;
            case 117: 公共物件02.AddRange(主角背包.販賣物17); 主角背包.販賣物17.Clear(); break;
            case 118: 公共物件02.AddRange(主角背包.販賣物18); 主角背包.販賣物18.Clear(); break;
            case 119: 公共物件02.AddRange(主角背包.販賣物19); 主角背包.販賣物19.Clear(); break;
            case 120: 公共物件02.AddRange(主角背包.販賣物20); 主角背包.販賣物20.Clear(); break;
            case 121: 公共物件02.AddRange(主角背包.販賣物21); 主角背包.販賣物21.Clear(); break;
            case 122: 公共物件02.AddRange(主角背包.販賣物22); 主角背包.販賣物22.Clear(); break;
            case 123: 公共物件02.AddRange(主角背包.販賣物23); 主角背包.販賣物23.Clear(); break;
            case 124: 公共物件02.AddRange(主角背包.販賣物24); 主角背包.販賣物24.Clear(); break;
            case 125: 公共物件02.AddRange(主角背包.販賣物25); 主角背包.販賣物25.Clear(); break;
            case 126: 公共物件02.AddRange(主角背包.販賣物26); 主角背包.販賣物26.Clear(); break;
            case 127: 公共物件02.AddRange(主角背包.販賣物27); 主角背包.販賣物27.Clear(); break;
            case 128: 公共物件02.AddRange(主角背包.販賣物28); 主角背包.販賣物28.Clear(); break;
            case 129: 公共物件02.AddRange(主角背包.販賣物29); 主角背包.販賣物29.Clear(); break;
            case 130: 公共物件02.AddRange(主角背包.販賣物30); 主角背包.販賣物30.Clear(); break;
            case 131: 公共物件02.AddRange(主角背包.販賣物31); 主角背包.販賣物31.Clear(); break;
            case 132: 公共物件02.AddRange(主角背包.販賣物32); 主角背包.販賣物32.Clear(); break;
            case 133: 公共物件02.AddRange(主角背包.販賣物33); 主角背包.販賣物33.Clear(); break;
            case 134: 公共物件02.AddRange(主角背包.販賣物34); 主角背包.販賣物34.Clear(); break;
            case 135: 公共物件02.AddRange(主角背包.販賣物35); 主角背包.販賣物35.Clear(); break;
            case 136: 公共物件02.AddRange(主角背包.販賣物36); 主角背包.販賣物36.Clear(); break;
            case 137: 公共物件02.AddRange(主角背包.販賣物37); 主角背包.販賣物37.Clear(); break;
            case 138: 公共物件02.AddRange(主角背包.販賣物38); 主角背包.販賣物38.Clear(); break;
            case 139: 公共物件02.AddRange(主角背包.販賣物39); 主角背包.販賣物39.Clear(); break;
            case 140: 公共物件02.AddRange(主角背包.販賣物40); 主角背包.販賣物40.Clear(); break;
            case 141: 公共物件02.AddRange(主角背包.販賣物41); 主角背包.販賣物41.Clear(); break;
            case 142: 公共物件02.AddRange(主角背包.販賣物42); 主角背包.販賣物42.Clear(); break;
            case 143: 公共物件02.AddRange(主角背包.販賣物43); 主角背包.販賣物43.Clear(); break;
            case 144: 公共物件02.AddRange(主角背包.販賣物44); 主角背包.販賣物44.Clear(); break;
            case 145: 公共物件02.AddRange(主角背包.販賣物45); 主角背包.販賣物45.Clear(); break;
            case 146: 公共物件02.AddRange(主角背包.販賣物46); 主角背包.販賣物46.Clear(); break;
            case 147: 公共物件02.AddRange(主角背包.販賣物47); 主角背包.販賣物47.Clear(); break;
            case 148: 公共物件02.AddRange(主角背包.販賣物48); 主角背包.販賣物48.Clear(); break;
            case 149: 公共物件02.AddRange(主角背包.販賣物49); 主角背包.販賣物49.Clear(); break;
        }
    }

    public void 玩家把公共1丟進指定販賣區()//公共1 >> 販賣Y     //0315確認
    {
        主角背包.販賣物存在列表[公共Y - 100] = true;
        switch (公共Y)
        {
            case 100: 主角背包.販賣物00.AddRange(公共物件); break;
            case 101: 主角背包.販賣物01.AddRange(公共物件); break;
            case 102: 主角背包.販賣物02.AddRange(公共物件); break;
            case 103: 主角背包.販賣物03.AddRange(公共物件); break;
            case 104: 主角背包.販賣物04.AddRange(公共物件); break;
            case 105: 主角背包.販賣物05.AddRange(公共物件); break;
            case 106: 主角背包.販賣物06.AddRange(公共物件); break;
            case 107: 主角背包.販賣物07.AddRange(公共物件); break;
            case 108: 主角背包.販賣物08.AddRange(公共物件); break;
            case 109: 主角背包.販賣物09.AddRange(公共物件); break;
            case 110: 主角背包.販賣物10.AddRange(公共物件); break;
            case 111: 主角背包.販賣物11.AddRange(公共物件); break;
            case 112: 主角背包.販賣物12.AddRange(公共物件); break;
            case 113: 主角背包.販賣物13.AddRange(公共物件); break;
            case 114: 主角背包.販賣物14.AddRange(公共物件); break;
            case 115: 主角背包.販賣物15.AddRange(公共物件); break;
            case 116: 主角背包.販賣物16.AddRange(公共物件); break;
            case 117: 主角背包.販賣物17.AddRange(公共物件); break;
            case 118: 主角背包.販賣物18.AddRange(公共物件); break;
            case 119: 主角背包.販賣物19.AddRange(公共物件); break;
            case 120: 主角背包.販賣物20.AddRange(公共物件); break;
            case 121: 主角背包.販賣物21.AddRange(公共物件); break;
            case 122: 主角背包.販賣物22.AddRange(公共物件); break;
            case 123: 主角背包.販賣物23.AddRange(公共物件); break;
            case 124: 主角背包.販賣物24.AddRange(公共物件); break;
            case 125: 主角背包.販賣物25.AddRange(公共物件); break;
            case 126: 主角背包.販賣物26.AddRange(公共物件); break;
            case 127: 主角背包.販賣物27.AddRange(公共物件); break;
            case 128: 主角背包.販賣物28.AddRange(公共物件); break;
            case 129: 主角背包.販賣物29.AddRange(公共物件); break;
            case 130: 主角背包.販賣物30.AddRange(公共物件); break;
            case 131: 主角背包.販賣物31.AddRange(公共物件); break;
            case 132: 主角背包.販賣物32.AddRange(公共物件); break;
            case 133: 主角背包.販賣物33.AddRange(公共物件); break;
            case 134: 主角背包.販賣物34.AddRange(公共物件); break;
            case 135: 主角背包.販賣物35.AddRange(公共物件); break;
            case 136: 主角背包.販賣物36.AddRange(公共物件); break;
            case 137: 主角背包.販賣物37.AddRange(公共物件); break;
            case 138: 主角背包.販賣物38.AddRange(公共物件); break;
            case 139: 主角背包.販賣物39.AddRange(公共物件); break;
            case 140: 主角背包.販賣物40.AddRange(公共物件); break;
            case 141: 主角背包.販賣物41.AddRange(公共物件); break;
            case 142: 主角背包.販賣物42.AddRange(公共物件); break;
            case 143: 主角背包.販賣物43.AddRange(公共物件); break;
            case 144: 主角背包.販賣物44.AddRange(公共物件); break;
            case 145: 主角背包.販賣物45.AddRange(公共物件); break;
            case 146: 主角背包.販賣物46.AddRange(公共物件); break;
            case 147: 主角背包.販賣物47.AddRange(公共物件); break;
            case 148: 主角背包.販賣物48.AddRange(公共物件); break;
            case 149: 主角背包.販賣物49.AddRange(公共物件); break;
        }
    }

    public void 玩家把公共2丟進指定販賣區()//公共2 >> 販賣X      //0315確認
    {

        主角背包.販賣物存在列表[公共X - 100] = true;
        switch (公共X)
        {
            case 100: 主角背包.販賣物00.AddRange(公共物件02); break;
            case 101: 主角背包.販賣物01.AddRange(公共物件02); break;
            case 102: 主角背包.販賣物02.AddRange(公共物件02); break;
            case 103: 主角背包.販賣物03.AddRange(公共物件02); break;
            case 104: 主角背包.販賣物04.AddRange(公共物件02); break;
            case 105: 主角背包.販賣物05.AddRange(公共物件02); break;
            case 106: 主角背包.販賣物06.AddRange(公共物件02); break;
            case 107: 主角背包.販賣物07.AddRange(公共物件02); break;
            case 108: 主角背包.販賣物08.AddRange(公共物件02); break;
            case 109: 主角背包.販賣物09.AddRange(公共物件02); break;
            case 110: 主角背包.販賣物10.AddRange(公共物件02); break;
            case 111: 主角背包.販賣物11.AddRange(公共物件02); break;
            case 112: 主角背包.販賣物12.AddRange(公共物件02); break;
            case 113: 主角背包.販賣物13.AddRange(公共物件02); break;
            case 114: 主角背包.販賣物14.AddRange(公共物件02); break;
            case 115: 主角背包.販賣物15.AddRange(公共物件02); break;
            case 116: 主角背包.販賣物16.AddRange(公共物件02); break;
            case 117: 主角背包.販賣物17.AddRange(公共物件02); break;
            case 118: 主角背包.販賣物18.AddRange(公共物件02); break;
            case 119: 主角背包.販賣物19.AddRange(公共物件02); break;
            case 120: 主角背包.販賣物20.AddRange(公共物件02); break;
            case 121: 主角背包.販賣物21.AddRange(公共物件02); break;
            case 122: 主角背包.販賣物22.AddRange(公共物件02); break;
            case 123: 主角背包.販賣物23.AddRange(公共物件02); break;
            case 124: 主角背包.販賣物24.AddRange(公共物件02); break;
            case 125: 主角背包.販賣物25.AddRange(公共物件02); break;
            case 126: 主角背包.販賣物26.AddRange(公共物件02); break;
            case 127: 主角背包.販賣物27.AddRange(公共物件02); break;
            case 128: 主角背包.販賣物28.AddRange(公共物件02); break;
            case 129: 主角背包.販賣物29.AddRange(公共物件02); break;
            case 130: 主角背包.販賣物30.AddRange(公共物件02); break;
            case 131: 主角背包.販賣物31.AddRange(公共物件02); break;
            case 132: 主角背包.販賣物32.AddRange(公共物件02); break;
            case 133: 主角背包.販賣物33.AddRange(公共物件02); break;
            case 134: 主角背包.販賣物34.AddRange(公共物件02); break;
            case 135: 主角背包.販賣物35.AddRange(公共物件02); break;
            case 136: 主角背包.販賣物36.AddRange(公共物件02); break;
            case 137: 主角背包.販賣物37.AddRange(公共物件02); break;
            case 138: 主角背包.販賣物38.AddRange(公共物件02); break;
            case 139: 主角背包.販賣物39.AddRange(公共物件02); break;
            case 140: 主角背包.販賣物40.AddRange(公共物件02); break;
            case 141: 主角背包.販賣物41.AddRange(公共物件02); break;
            case 142: 主角背包.販賣物42.AddRange(公共物件02); break;
            case 143: 主角背包.販賣物43.AddRange(公共物件02); break;
            case 144: 主角背包.販賣物44.AddRange(公共物件02); break;
            case 145: 主角背包.販賣物45.AddRange(公共物件02); break;
            case 146: 主角背包.販賣物46.AddRange(公共物件02); break;
            case 147: 主角背包.販賣物47.AddRange(公共物件02); break;
            case 148: 主角背包.販賣物48.AddRange(公共物件02); break;
            case 149: 主角背包.販賣物49.AddRange(公共物件02); break;
        }
    }

    public void 把物件傳入顯示()      //0315確認
    {
        公共記分板1.顯示用物件.Clear();
        if (公共Z == 0)//玩家 
        {
            switch (公共X)
            {
                case 0: 公共記分板1.顯示用物件.AddRange(主角背包.物件00); break;
                case 1: 公共記分板1.顯示用物件.AddRange(主角背包.物件01); break;
                case 2: 公共記分板1.顯示用物件.AddRange(主角背包.物件02); break;
                case 3: 公共記分板1.顯示用物件.AddRange(主角背包.物件03); break;
                case 4: 公共記分板1.顯示用物件.AddRange(主角背包.物件04); break;
                case 5: 公共記分板1.顯示用物件.AddRange(主角背包.物件05); break;
                case 6: 公共記分板1.顯示用物件.AddRange(主角背包.物件06); break;
                case 7: 公共記分板1.顯示用物件.AddRange(主角背包.物件07); break;
                case 8: 公共記分板1.顯示用物件.AddRange(主角背包.物件08); break;
                case 9: 公共記分板1.顯示用物件.AddRange(主角背包.物件09); break;
                case 10: 公共記分板1.顯示用物件.AddRange(主角背包.物件10); break;
                case 11: 公共記分板1.顯示用物件.AddRange(主角背包.物件11); break;
                case 12: 公共記分板1.顯示用物件.AddRange(主角背包.物件12); break;
                case 13: 公共記分板1.顯示用物件.AddRange(主角背包.物件13); break;
                case 14: 公共記分板1.顯示用物件.AddRange(主角背包.物件14); break;
                case 15: 公共記分板1.顯示用物件.AddRange(主角背包.物件15); break;
                case 16: 公共記分板1.顯示用物件.AddRange(主角背包.物件16); break;
                case 17: 公共記分板1.顯示用物件.AddRange(主角背包.物件17); break;
                case 18: 公共記分板1.顯示用物件.AddRange(主角背包.物件18); break;
                case 19: 公共記分板1.顯示用物件.AddRange(主角背包.物件19); break;
                case 20: 公共記分板1.顯示用物件.AddRange(主角背包.物件20); break;
                case 21: 公共記分板1.顯示用物件.AddRange(主角背包.物件21); break;
                case 22: 公共記分板1.顯示用物件.AddRange(主角背包.物件22); break;
                case 23: 公共記分板1.顯示用物件.AddRange(主角背包.物件23); break;
                case 24: 公共記分板1.顯示用物件.AddRange(主角背包.物件24); break;
                case 25: 公共記分板1.顯示用物件.AddRange(主角背包.物件25); break;
                case 26: 公共記分板1.顯示用物件.AddRange(主角背包.物件26); break;
                case 27: 公共記分板1.顯示用物件.AddRange(主角背包.物件27); break;
                case 28: 公共記分板1.顯示用物件.AddRange(主角背包.物件28); break;
                case 29: 公共記分板1.顯示用物件.AddRange(主角背包.物件29); break;
                case 30: 公共記分板1.顯示用物件.AddRange(主角背包.物件30); break;
                case 31: 公共記分板1.顯示用物件.AddRange(主角背包.物件31); break;
                case 32: 公共記分板1.顯示用物件.AddRange(主角背包.物件32); break;
                case 33: 公共記分板1.顯示用物件.AddRange(主角背包.物件33); break;
                case 34: 公共記分板1.顯示用物件.AddRange(主角背包.物件34); break;
                case 35: 公共記分板1.顯示用物件.AddRange(主角背包.物件35); break;
                case 36: 公共記分板1.顯示用物件.AddRange(主角背包.物件36); break;
                case 37: 公共記分板1.顯示用物件.AddRange(主角背包.物件37); break;
                case 38: 公共記分板1.顯示用物件.AddRange(主角背包.物件38); break;
                case 39: 公共記分板1.顯示用物件.AddRange(主角背包.物件39); break;
                case 40: 公共記分板1.顯示用物件.AddRange(主角背包.物件40); break;
                case 41: 公共記分板1.顯示用物件.AddRange(主角背包.物件41); break;
                case 42: 公共記分板1.顯示用物件.AddRange(主角背包.物件42); break;
                case 43: 公共記分板1.顯示用物件.AddRange(主角背包.物件43); break;
                case 44: 公共記分板1.顯示用物件.AddRange(主角背包.物件44); break;
                case 45: 公共記分板1.顯示用物件.AddRange(主角背包.物件45); break;
                case 46: 公共記分板1.顯示用物件.AddRange(主角背包.物件46); break;
                case 47: 公共記分板1.顯示用物件.AddRange(主角背包.物件47); break;
                case 48: 公共記分板1.顯示用物件.AddRange(主角背包.物件48); break;
                case 49: 公共記分板1.顯示用物件.AddRange(主角背包.物件49); break;
                case 50: 公共記分板1.顯示用物件.AddRange(主角背包.物件50); break;
                case 51: 公共記分板1.顯示用物件.AddRange(主角背包.物件51); break;
                case 52: 公共記分板1.顯示用物件.AddRange(主角背包.物件52); break;
                case 53: 公共記分板1.顯示用物件.AddRange(主角背包.物件53); break;
                case 54: 公共記分板1.顯示用物件.AddRange(主角背包.物件54); break;
                case 55: 公共記分板1.顯示用物件.AddRange(主角背包.物件55); break;
                case 56: 公共記分板1.顯示用物件.AddRange(主角背包.物件56); break;
                case 57: 公共記分板1.顯示用物件.AddRange(主角背包.物件57); break;
                case 58: 公共記分板1.顯示用物件.AddRange(主角背包.物件58); break;
                case 59: 公共記分板1.顯示用物件.AddRange(主角背包.物件59); break;
                case 60: 公共記分板1.顯示用物件.AddRange(主角背包.物件60); break;
                case 61: 公共記分板1.顯示用物件.AddRange(主角背包.物件61); break;
                case 62: 公共記分板1.顯示用物件.AddRange(主角背包.物件62); break;
                case 63: 公共記分板1.顯示用物件.AddRange(主角背包.物件63); break;
                case 64: 公共記分板1.顯示用物件.AddRange(主角背包.物件64); break;
                case 65: 公共記分板1.顯示用物件.AddRange(主角背包.物件65); break;
                case 66: 公共記分板1.顯示用物件.AddRange(主角背包.物件66); break;
                case 67: 公共記分板1.顯示用物件.AddRange(主角背包.物件67); break;
                case 68: 公共記分板1.顯示用物件.AddRange(主角背包.物件68); break;
                case 69: 公共記分板1.顯示用物件.AddRange(主角背包.物件69); break;
                case 70: 公共記分板1.顯示用物件.AddRange(主角背包.物件70); break;
                case 71: 公共記分板1.顯示用物件.AddRange(主角背包.物件71); break;
                case 72: 公共記分板1.顯示用物件.AddRange(主角背包.物件72); break;
                case 73: 公共記分板1.顯示用物件.AddRange(主角背包.物件73); break;
                case 74: 公共記分板1.顯示用物件.AddRange(主角背包.物件74); break;
                case 75: 公共記分板1.顯示用物件.AddRange(主角背包.物件75); break;
                case 76: 公共記分板1.顯示用物件.AddRange(主角背包.物件76); break;
                case 77: 公共記分板1.顯示用物件.AddRange(主角背包.物件77); break;
                case 78: 公共記分板1.顯示用物件.AddRange(主角背包.物件78); break;
                case 79: 公共記分板1.顯示用物件.AddRange(主角背包.物件79); break;
                case 80: 公共記分板1.顯示用物件.AddRange(主角背包.物件80); break;
                case 81: 公共記分板1.顯示用物件.AddRange(主角背包.物件81); break;
                case 82: 公共記分板1.顯示用物件.AddRange(主角背包.物件82); break;
                case 83: 公共記分板1.顯示用物件.AddRange(主角背包.物件83); break;
                case 84: 公共記分板1.顯示用物件.AddRange(主角背包.物件84); break;
                case 85: 公共記分板1.顯示用物件.AddRange(主角背包.物件85); break;
                case 86: 公共記分板1.顯示用物件.AddRange(主角背包.物件86); break;
                case 87: 公共記分板1.顯示用物件.AddRange(主角背包.物件87); break;
                case 88: 公共記分板1.顯示用物件.AddRange(主角背包.物件88); break;
                case 89: 公共記分板1.顯示用物件.AddRange(主角背包.物件89); break;
                case 90: 公共記分板1.顯示用物件.AddRange(主角背包.物件90); break;
                case 91: 公共記分板1.顯示用物件.AddRange(主角背包.物件91); break;
                case 92: 公共記分板1.顯示用物件.AddRange(主角背包.物件92); break;
                case 93: 公共記分板1.顯示用物件.AddRange(主角背包.物件93); break;
                case 94: 公共記分板1.顯示用物件.AddRange(主角背包.物件94); break;
                case 95: 公共記分板1.顯示用物件.AddRange(主角背包.物件95); break;
                case 96: 公共記分板1.顯示用物件.AddRange(主角背包.物件96); break;
                case 97: 公共記分板1.顯示用物件.AddRange(主角背包.物件97); break;
                case 98: 公共記分板1.顯示用物件.AddRange(主角背包.物件98); break;
                case 99: 公共記分板1.顯示用物件.AddRange(主角背包.物件99); break;
                case 100: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物00); break;
                case 101: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物01); break;
                case 102: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物02); break;
                case 103: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物03); break;
                case 104: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物04); break;
                case 105: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物05); break;
                case 106: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物06); break;
                case 107: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物07); break;
                case 108: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物08); break;
                case 109: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物09); break;
                case 110: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物10); break;
                case 111: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物11); break;
                case 112: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物12); break;
                case 113: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物13); break;
                case 114: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物14); break;
                case 115: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物15); break;
                case 116: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物16); break;
                case 117: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物17); break;
                case 118: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物18); break;
                case 119: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物19); break;
                case 120: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物20); break;
                case 121: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物21); break;
                case 122: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物22); break;
                case 123: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物23); break;
                case 124: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物24); break;
                case 125: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物25); break;
                case 126: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物26); break;
                case 127: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物27); break;
                case 128: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物28); break;
                case 129: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物29); break;
                case 130: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物30); break;
                case 131: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物31); break;
                case 132: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物32); break;
                case 133: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物33); break;
                case 134: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物34); break;
                case 135: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物35); break;
                case 136: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物36); break;
                case 137: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物37); break;
                case 138: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物38); break;
                case 139: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物39); break;
                case 140: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物40); break;
                case 141: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物41); break;
                case 142: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物42); break;
                case 143: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物43); break;
                case 144: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物44); break;
                case 145: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物45); break;
                case 146: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物46); break;
                case 147: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物47); break;
                case 148: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物48); break;
                case 149: 公共記分板1.顯示用物件.AddRange(主角背包.販賣物49); break;
            }
        }
        else//商人
        {
            switch (公共X)
            {
                case 0:  公共記分板1.顯示用物件.AddRange(商人.商品00); break;
                case 1:  公共記分板1.顯示用物件.AddRange(商人.商品01); break;
                case 2:  公共記分板1.顯示用物件.AddRange(商人.商品02); break;
                case 3:  公共記分板1.顯示用物件.AddRange(商人.商品03); break;
                case 4:  公共記分板1.顯示用物件.AddRange(商人.商品04); break;
                case 5:  公共記分板1.顯示用物件.AddRange(商人.商品05); break;
                case 6:  公共記分板1.顯示用物件.AddRange(商人.商品06); break;
                case 7:  公共記分板1.顯示用物件.AddRange(商人.商品07); break;
                case 8:  公共記分板1.顯示用物件.AddRange(商人.商品08); break;
                case 9:  公共記分板1.顯示用物件.AddRange(商人.商品09); break;
                case 10: 公共記分板1.顯示用物件.AddRange(商人.商品10); break;
                case 11: 公共記分板1.顯示用物件.AddRange(商人.商品11); break;
                case 12: 公共記分板1.顯示用物件.AddRange(商人.商品12); break;
                case 13: 公共記分板1.顯示用物件.AddRange(商人.商品13); break;
                case 14: 公共記分板1.顯示用物件.AddRange(商人.商品14); break;
                case 15: 公共記分板1.顯示用物件.AddRange(商人.商品15); break;
                case 16: 公共記分板1.顯示用物件.AddRange(商人.商品16); break;
                case 17: 公共記分板1.顯示用物件.AddRange(商人.商品17); break;
                case 18: 公共記分板1.顯示用物件.AddRange(商人.商品18); break;
                case 19: 公共記分板1.顯示用物件.AddRange(商人.商品19); break;
                case 20: 公共記分板1.顯示用物件.AddRange(商人.商品20); break;
                case 21: 公共記分板1.顯示用物件.AddRange(商人.商品21); break;
                case 22: 公共記分板1.顯示用物件.AddRange(商人.商品22); break;
                case 23: 公共記分板1.顯示用物件.AddRange(商人.商品23); break;
                case 24: 公共記分板1.顯示用物件.AddRange(商人.商品24); break;
                case 25: 公共記分板1.顯示用物件.AddRange(商人.商品25); break;
                case 26: 公共記分板1.顯示用物件.AddRange(商人.商品26); break;
                case 27: 公共記分板1.顯示用物件.AddRange(商人.商品27); break;
                case 28: 公共記分板1.顯示用物件.AddRange(商人.商品28); break;
                case 29: 公共記分板1.顯示用物件.AddRange(商人.商品29); break;
                case 30: 公共記分板1.顯示用物件.AddRange(商人.商品30); break;
                case 31: 公共記分板1.顯示用物件.AddRange(商人.商品31); break;
                case 32: 公共記分板1.顯示用物件.AddRange(商人.商品32); break;
                case 33: 公共記分板1.顯示用物件.AddRange(商人.商品33); break;
                case 34: 公共記分板1.顯示用物件.AddRange(商人.商品34); break;
                case 35: 公共記分板1.顯示用物件.AddRange(商人.商品35); break;
                case 36: 公共記分板1.顯示用物件.AddRange(商人.商品36); break;
                case 37: 公共記分板1.顯示用物件.AddRange(商人.商品37); break;
                case 38: 公共記分板1.顯示用物件.AddRange(商人.商品38); break;
                case 39: 公共記分板1.顯示用物件.AddRange(商人.商品39); break;
                case 40: 公共記分板1.顯示用物件.AddRange(商人.商品40); break;
                case 41: 公共記分板1.顯示用物件.AddRange(商人.商品41); break;
                case 42: 公共記分板1.顯示用物件.AddRange(商人.商品42); break;
                case 43: 公共記分板1.顯示用物件.AddRange(商人.商品43); break;
                case 44: 公共記分板1.顯示用物件.AddRange(商人.商品44); break;
                case 45: 公共記分板1.顯示用物件.AddRange(商人.商品45); break;
                case 46: 公共記分板1.顯示用物件.AddRange(商人.商品46); break;
                case 47: 公共記分板1.顯示用物件.AddRange(商人.商品47); break;
                case 48: 公共記分板1.顯示用物件.AddRange(商人.商品48); break;
                case 49: 公共記分板1.顯示用物件.AddRange(商人.商品49); break;
                case 50: 公共記分板1.顯示用物件.AddRange(商人.商品50); break;
                case 51: 公共記分板1.顯示用物件.AddRange(商人.商品51); break;
                case 52: 公共記分板1.顯示用物件.AddRange(商人.商品52); break;
                case 53: 公共記分板1.顯示用物件.AddRange(商人.商品53); break;
                case 54: 公共記分板1.顯示用物件.AddRange(商人.商品54); break;
                case 55: 公共記分板1.顯示用物件.AddRange(商人.商品55); break;
                case 56: 公共記分板1.顯示用物件.AddRange(商人.商品56); break;
                case 57: 公共記分板1.顯示用物件.AddRange(商人.商品57); break;
                case 58: 公共記分板1.顯示用物件.AddRange(商人.商品58); break;
                case 59: 公共記分板1.顯示用物件.AddRange(商人.商品59); break;
                case 60: 公共記分板1.顯示用物件.AddRange(商人.商品60); break;
                case 61: 公共記分板1.顯示用物件.AddRange(商人.商品61); break;
                case 62: 公共記分板1.顯示用物件.AddRange(商人.商品62); break;
                case 63: 公共記分板1.顯示用物件.AddRange(商人.商品63); break;
                case 64: 公共記分板1.顯示用物件.AddRange(商人.商品64); break;
                case 65: 公共記分板1.顯示用物件.AddRange(商人.商品65); break;
                case 66: 公共記分板1.顯示用物件.AddRange(商人.商品66); break;
                case 67: 公共記分板1.顯示用物件.AddRange(商人.商品67); break;
                case 68: 公共記分板1.顯示用物件.AddRange(商人.商品68); break;
                case 69: 公共記分板1.顯示用物件.AddRange(商人.商品69); break;
                case 70: 公共記分板1.顯示用物件.AddRange(商人.商品70); break;
                case 71: 公共記分板1.顯示用物件.AddRange(商人.商品71); break;
                case 72: 公共記分板1.顯示用物件.AddRange(商人.商品72); break;
                case 73: 公共記分板1.顯示用物件.AddRange(商人.商品73); break;
                case 74: 公共記分板1.顯示用物件.AddRange(商人.商品74); break;
                case 75: 公共記分板1.顯示用物件.AddRange(商人.商品75); break;
                case 76: 公共記分板1.顯示用物件.AddRange(商人.商品76); break;
                case 77: 公共記分板1.顯示用物件.AddRange(商人.商品77); break;
                case 78: 公共記分板1.顯示用物件.AddRange(商人.商品78); break;
                case 79: 公共記分板1.顯示用物件.AddRange(商人.商品79); break;
                case 80: 公共記分板1.顯示用物件.AddRange(商人.商品80); break;
                case 81: 公共記分板1.顯示用物件.AddRange(商人.商品81); break;
                case 82: 公共記分板1.顯示用物件.AddRange(商人.商品82); break;
                case 83: 公共記分板1.顯示用物件.AddRange(商人.商品83); break;
                case 84: 公共記分板1.顯示用物件.AddRange(商人.商品84); break;
                case 85: 公共記分板1.顯示用物件.AddRange(商人.商品85); break;
                case 86: 公共記分板1.顯示用物件.AddRange(商人.商品86); break;
                case 87: 公共記分板1.顯示用物件.AddRange(商人.商品87); break;
                case 88: 公共記分板1.顯示用物件.AddRange(商人.商品88); break;
                case 89: 公共記分板1.顯示用物件.AddRange(商人.商品89); break;
                case 90: 公共記分板1.顯示用物件.AddRange(商人.商品90); break;
                case 91: 公共記分板1.顯示用物件.AddRange(商人.商品91); break;
                case 92: 公共記分板1.顯示用物件.AddRange(商人.商品92); break;
                case 93: 公共記分板1.顯示用物件.AddRange(商人.商品93); break;
                case 94: 公共記分板1.顯示用物件.AddRange(商人.商品94); break;
                case 95: 公共記分板1.顯示用物件.AddRange(商人.商品95); break;
                case 96: 公共記分板1.顯示用物件.AddRange(商人.商品96); break;
                case 97: 公共記分板1.顯示用物件.AddRange(商人.商品97); break;
                case 98: 公共記分板1.顯示用物件.AddRange(商人.商品98); break;
                case 99: 公共記分板1.顯示用物件.AddRange(商人.商品99); break;
                case 100: 公共記分板1.顯示用物件.AddRange(商人.準備賣出00); break;
                case 101: 公共記分板1.顯示用物件.AddRange(商人.準備賣出01); break;
                case 102: 公共記分板1.顯示用物件.AddRange(商人.準備賣出02); break;
                case 103: 公共記分板1.顯示用物件.AddRange(商人.準備賣出03); break;
                case 104: 公共記分板1.顯示用物件.AddRange(商人.準備賣出04); break;
                case 105: 公共記分板1.顯示用物件.AddRange(商人.準備賣出05); break;
                case 106: 公共記分板1.顯示用物件.AddRange(商人.準備賣出06); break;
                case 107: 公共記分板1.顯示用物件.AddRange(商人.準備賣出07); break;
                case 108: 公共記分板1.顯示用物件.AddRange(商人.準備賣出08); break;
                case 109: 公共記分板1.顯示用物件.AddRange(商人.準備賣出09); break;
                case 110: 公共記分板1.顯示用物件.AddRange(商人.準備賣出10); break;
                case 111: 公共記分板1.顯示用物件.AddRange(商人.準備賣出11); break;
                case 112: 公共記分板1.顯示用物件.AddRange(商人.準備賣出12); break;
                case 113: 公共記分板1.顯示用物件.AddRange(商人.準備賣出13); break;
                case 114: 公共記分板1.顯示用物件.AddRange(商人.準備賣出14); break;
                case 115: 公共記分板1.顯示用物件.AddRange(商人.準備賣出15); break;
                case 116: 公共記分板1.顯示用物件.AddRange(商人.準備賣出16); break;
                case 117: 公共記分板1.顯示用物件.AddRange(商人.準備賣出17); break;
                case 118: 公共記分板1.顯示用物件.AddRange(商人.準備賣出18); break;
                case 119: 公共記分板1.顯示用物件.AddRange(商人.準備賣出19); break;
                case 120: 公共記分板1.顯示用物件.AddRange(商人.準備賣出20); break;
                case 121: 公共記分板1.顯示用物件.AddRange(商人.準備賣出21); break;
                case 122: 公共記分板1.顯示用物件.AddRange(商人.準備賣出22); break;
                case 123: 公共記分板1.顯示用物件.AddRange(商人.準備賣出23); break;
                case 124: 公共記分板1.顯示用物件.AddRange(商人.準備賣出24); break;
                case 125: 公共記分板1.顯示用物件.AddRange(商人.準備賣出25); break;
                case 126: 公共記分板1.顯示用物件.AddRange(商人.準備賣出26); break;
                case 127: 公共記分板1.顯示用物件.AddRange(商人.準備賣出27); break;
                case 128: 公共記分板1.顯示用物件.AddRange(商人.準備賣出28); break;
                case 129: 公共記分板1.顯示用物件.AddRange(商人.準備賣出29); break;
                case 130: 公共記分板1.顯示用物件.AddRange(商人.準備賣出30); break;
                case 131: 公共記分板1.顯示用物件.AddRange(商人.準備賣出31); break;
                case 132: 公共記分板1.顯示用物件.AddRange(商人.準備賣出32); break;
                case 133: 公共記分板1.顯示用物件.AddRange(商人.準備賣出33); break;
                case 134: 公共記分板1.顯示用物件.AddRange(商人.準備賣出34); break;
                case 135: 公共記分板1.顯示用物件.AddRange(商人.準備賣出35); break;
                case 136: 公共記分板1.顯示用物件.AddRange(商人.準備賣出36); break;
                case 137: 公共記分板1.顯示用物件.AddRange(商人.準備賣出37); break;
                case 138: 公共記分板1.顯示用物件.AddRange(商人.準備賣出38); break;
                case 139: 公共記分板1.顯示用物件.AddRange(商人.準備賣出39); break;
                case 140: 公共記分板1.顯示用物件.AddRange(商人.準備賣出40); break;
                case 141: 公共記分板1.顯示用物件.AddRange(商人.準備賣出41); break;
                case 142: 公共記分板1.顯示用物件.AddRange(商人.準備賣出42); break;
                case 143: 公共記分板1.顯示用物件.AddRange(商人.準備賣出43); break;
                case 144: 公共記分板1.顯示用物件.AddRange(商人.準備賣出44); break;
                case 145: 公共記分板1.顯示用物件.AddRange(商人.準備賣出45); break;
                case 146: 公共記分板1.顯示用物件.AddRange(商人.準備賣出46); break;
                case 147: 公共記分板1.顯示用物件.AddRange(商人.準備賣出47); break;
                case 148: 公共記分板1.顯示用物件.AddRange(商人.準備賣出48); break;
                case 149: 公共記分板1.顯示用物件.AddRange(商人.準備賣出49); break;
            }
        }
    }

    public GameObject 物件詳細模板;

    public Transform 轉換過背包框;

    public void 生成顯示板()
    {
        公共記分板1.展示框存在 = true;

        把物件傳入顯示();
        物件詳細模板 = 實例記分板1.物品詳細顯示;//之後寫判定   判定物品種類用不同的顯示框  


        轉換過背包框 = 背包框.GetComponent<Transform>();//把背包框設定成主相機
        GameObject 顯示框框 = Instantiate(物件詳細模板, 轉換過背包框);
        // 顯示框框.transform.localPosition = new Vector2(135f, -170f);
        實例記分板1.複製的物品詳細顯示 = 顯示框框;

        Vector2 mouseWorldPosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
        mouseWorldPosition.x += 130f;
        mouseWorldPosition.y = 140f;
        if (mouseWorldPosition.y > 134f) mouseWorldPosition.y = 134f;
        //顯示框框.transform.SetParent(背包框2.transform.parent);   //在生成的時候直接定位好
        顯示框框.transform.localPosition = mouseWorldPosition;
    }
    public void 把X傳入公共3() //玩家跟NPC通用
    {
        公共物件03.Clear();
        if (公共Z == 0)//玩家
        {
            switch (公共X)
            {
                case 0: 公共物件03.AddRange(主角背包.物件00); break;
                case 1: 公共物件03.AddRange(主角背包.物件01); break;
                case 2: 公共物件03.AddRange(主角背包.物件02); break;
                case 3: 公共物件03.AddRange(主角背包.物件03); break;
                case 4: 公共物件03.AddRange(主角背包.物件04); break;
                case 5: 公共物件03.AddRange(主角背包.物件05); break;
                case 6: 公共物件03.AddRange(主角背包.物件06); break;
                case 7: 公共物件03.AddRange(主角背包.物件07); break;
                case 8: 公共物件03.AddRange(主角背包.物件08); break;
                case 9: 公共物件03.AddRange(主角背包.物件09); break;
                case 10: 公共物件03.AddRange(主角背包.物件10); break;
                case 11: 公共物件03.AddRange(主角背包.物件11); break;
                case 12: 公共物件03.AddRange(主角背包.物件12); break;
                case 13: 公共物件03.AddRange(主角背包.物件13); break;
                case 14: 公共物件03.AddRange(主角背包.物件14); break;
                case 15: 公共物件03.AddRange(主角背包.物件15); break;
                case 16: 公共物件03.AddRange(主角背包.物件16); break;
                case 17: 公共物件03.AddRange(主角背包.物件17); break;
                case 18: 公共物件03.AddRange(主角背包.物件18); break;
                case 19: 公共物件03.AddRange(主角背包.物件19); break;
                case 20: 公共物件03.AddRange(主角背包.物件20); break;
                case 21: 公共物件03.AddRange(主角背包.物件21); break;
                case 22: 公共物件03.AddRange(主角背包.物件22); break;
                case 23: 公共物件03.AddRange(主角背包.物件23); break;
                case 24: 公共物件03.AddRange(主角背包.物件24); break;
                case 25: 公共物件03.AddRange(主角背包.物件25); break;
                case 26: 公共物件03.AddRange(主角背包.物件26); break;
                case 27: 公共物件03.AddRange(主角背包.物件27); break;
                case 28: 公共物件03.AddRange(主角背包.物件28); break;
                case 29: 公共物件03.AddRange(主角背包.物件29); break;
                case 30: 公共物件03.AddRange(主角背包.物件30); break;
                case 31: 公共物件03.AddRange(主角背包.物件31); break;
                case 32: 公共物件03.AddRange(主角背包.物件32); break;
                case 33: 公共物件03.AddRange(主角背包.物件33); break;
                case 34: 公共物件03.AddRange(主角背包.物件34); break;
                case 35: 公共物件03.AddRange(主角背包.物件35); break;
                case 36: 公共物件03.AddRange(主角背包.物件36); break;
                case 37: 公共物件03.AddRange(主角背包.物件37); break;
                case 38: 公共物件03.AddRange(主角背包.物件38); break;
                case 39: 公共物件03.AddRange(主角背包.物件39); break;
                case 40: 公共物件03.AddRange(主角背包.物件40); break;
                case 41: 公共物件03.AddRange(主角背包.物件41); break;
                case 42: 公共物件03.AddRange(主角背包.物件42); break;
                case 43: 公共物件03.AddRange(主角背包.物件43); break;
                case 44: 公共物件03.AddRange(主角背包.物件44); break;
                case 45: 公共物件03.AddRange(主角背包.物件45); break;
                case 46: 公共物件03.AddRange(主角背包.物件46); break;
                case 47: 公共物件03.AddRange(主角背包.物件47); break;
                case 48: 公共物件03.AddRange(主角背包.物件48); break;
                case 49: 公共物件03.AddRange(主角背包.物件49); break;
                case 50: 公共物件03.AddRange(主角背包.物件50); break;
                case 51: 公共物件03.AddRange(主角背包.物件51); break;
                case 52: 公共物件03.AddRange(主角背包.物件52); break;
                case 53: 公共物件03.AddRange(主角背包.物件53); break;
                case 54: 公共物件03.AddRange(主角背包.物件54); break;
                case 55: 公共物件03.AddRange(主角背包.物件55); break;
                case 56: 公共物件03.AddRange(主角背包.物件56); break;
                case 57: 公共物件03.AddRange(主角背包.物件57); break;
                case 58: 公共物件03.AddRange(主角背包.物件58); break;
                case 59: 公共物件03.AddRange(主角背包.物件59); break;
                case 60: 公共物件03.AddRange(主角背包.物件60); break;
                case 61: 公共物件03.AddRange(主角背包.物件61); break;
                case 62: 公共物件03.AddRange(主角背包.物件62); break;
                case 63: 公共物件03.AddRange(主角背包.物件63); break;
                case 64: 公共物件03.AddRange(主角背包.物件64); break;
                case 65: 公共物件03.AddRange(主角背包.物件65); break;
                case 66: 公共物件03.AddRange(主角背包.物件66); break;
                case 67: 公共物件03.AddRange(主角背包.物件67); break;
                case 68: 公共物件03.AddRange(主角背包.物件68); break;
                case 69: 公共物件03.AddRange(主角背包.物件69); break;
                case 70: 公共物件03.AddRange(主角背包.物件70); break;
                case 71: 公共物件03.AddRange(主角背包.物件71); break;
                case 72: 公共物件03.AddRange(主角背包.物件72); break;
                case 73: 公共物件03.AddRange(主角背包.物件73); break;
                case 74: 公共物件03.AddRange(主角背包.物件74); break;
                case 75: 公共物件03.AddRange(主角背包.物件75); break;
                case 76: 公共物件03.AddRange(主角背包.物件76); break;
                case 77: 公共物件03.AddRange(主角背包.物件77); break;
                case 78: 公共物件03.AddRange(主角背包.物件78); break;
                case 79: 公共物件03.AddRange(主角背包.物件79); break;
                case 80: 公共物件03.AddRange(主角背包.物件80); break;
                case 81: 公共物件03.AddRange(主角背包.物件81); break;
                case 82: 公共物件03.AddRange(主角背包.物件82); break;
                case 83: 公共物件03.AddRange(主角背包.物件83); break;
                case 84: 公共物件03.AddRange(主角背包.物件84); break;
                case 85: 公共物件03.AddRange(主角背包.物件85); break;
                case 86: 公共物件03.AddRange(主角背包.物件86); break;
                case 87: 公共物件03.AddRange(主角背包.物件87); break;
                case 88: 公共物件03.AddRange(主角背包.物件88); break;
                case 89: 公共物件03.AddRange(主角背包.物件89); break;
                case 90: 公共物件03.AddRange(主角背包.物件90); break;
                case 91: 公共物件03.AddRange(主角背包.物件91); break;
                case 92: 公共物件03.AddRange(主角背包.物件92); break;
                case 93: 公共物件03.AddRange(主角背包.物件93); break;
                case 94: 公共物件03.AddRange(主角背包.物件94); break;
                case 95: 公共物件03.AddRange(主角背包.物件95); break;
                case 96: 公共物件03.AddRange(主角背包.物件96); break;
                case 97: 公共物件03.AddRange(主角背包.物件97); break;
                case 98: 公共物件03.AddRange(主角背包.物件98); break;
                case 99: 公共物件03.AddRange(主角背包.物件99); break;
                case 100: 公共物件03.AddRange(主角背包.販賣物00); break;
                case 101: 公共物件03.AddRange(主角背包.販賣物01); break;
                case 102: 公共物件03.AddRange(主角背包.販賣物02); break;
                case 103: 公共物件03.AddRange(主角背包.販賣物03); break;
                case 104: 公共物件03.AddRange(主角背包.販賣物04); break;
                case 105: 公共物件03.AddRange(主角背包.販賣物05); break;
                case 106: 公共物件03.AddRange(主角背包.販賣物06); break;
                case 107: 公共物件03.AddRange(主角背包.販賣物07); break;
                case 108: 公共物件03.AddRange(主角背包.販賣物08); break;
                case 109: 公共物件03.AddRange(主角背包.販賣物09); break;
                case 110: 公共物件03.AddRange(主角背包.販賣物10); break;
                case 111: 公共物件03.AddRange(主角背包.販賣物11); break;
                case 112: 公共物件03.AddRange(主角背包.販賣物12); break;
                case 113: 公共物件03.AddRange(主角背包.販賣物13); break;
                case 114: 公共物件03.AddRange(主角背包.販賣物14); break;
                case 115: 公共物件03.AddRange(主角背包.販賣物15); break;
                case 116: 公共物件03.AddRange(主角背包.販賣物16); break;
                case 117: 公共物件03.AddRange(主角背包.販賣物17); break;
                case 118: 公共物件03.AddRange(主角背包.販賣物18); break;
                case 119: 公共物件03.AddRange(主角背包.販賣物19); break;
                case 120: 公共物件03.AddRange(主角背包.販賣物20); break;
                case 121: 公共物件03.AddRange(主角背包.販賣物21); break;
                case 122: 公共物件03.AddRange(主角背包.販賣物22); break;
                case 123: 公共物件03.AddRange(主角背包.販賣物23); break;
                case 124: 公共物件03.AddRange(主角背包.販賣物24); break;
                case 125: 公共物件03.AddRange(主角背包.販賣物25); break;
                case 126: 公共物件03.AddRange(主角背包.販賣物26); break;
                case 127: 公共物件03.AddRange(主角背包.販賣物27); break;
                case 128: 公共物件03.AddRange(主角背包.販賣物28); break;
                case 129: 公共物件03.AddRange(主角背包.販賣物29); break;
                case 130: 公共物件03.AddRange(主角背包.販賣物30); break;
                case 131: 公共物件03.AddRange(主角背包.販賣物31); break;
                case 132: 公共物件03.AddRange(主角背包.販賣物32); break;
                case 133: 公共物件03.AddRange(主角背包.販賣物33); break;
                case 134: 公共物件03.AddRange(主角背包.販賣物34); break;
                case 135: 公共物件03.AddRange(主角背包.販賣物35); break;
                case 136: 公共物件03.AddRange(主角背包.販賣物36); break;
                case 137: 公共物件03.AddRange(主角背包.販賣物37); break;
                case 138: 公共物件03.AddRange(主角背包.販賣物38); break;
                case 139: 公共物件03.AddRange(主角背包.販賣物39); break;
                case 140: 公共物件03.AddRange(主角背包.販賣物40); break;
                case 141: 公共物件03.AddRange(主角背包.販賣物41); break;
                case 142: 公共物件03.AddRange(主角背包.販賣物42); break;
                case 143: 公共物件03.AddRange(主角背包.販賣物43); break;
                case 144: 公共物件03.AddRange(主角背包.販賣物44); break;
                case 145: 公共物件03.AddRange(主角背包.販賣物45); break;
                case 146: 公共物件03.AddRange(主角背包.販賣物46); break;
                case 147: 公共物件03.AddRange(主角背包.販賣物47); break;
                case 148: 公共物件03.AddRange(主角背包.販賣物48); break;
                case 149: 公共物件03.AddRange(主角背包.販賣物49); break;
            }
        }
        else //NPC
        {
            switch (公共X)
            {
                case 0: 公共物件03.AddRange(商人.商品00); break;
                case 1: 公共物件03.AddRange(商人.商品01); break;
                case 2: 公共物件03.AddRange(商人.商品02); break;
                case 3: 公共物件03.AddRange(商人.商品03); break;
                case 4: 公共物件03.AddRange(商人.商品04); break;
                case 5: 公共物件03.AddRange(商人.商品05); break;
                case 6: 公共物件03.AddRange(商人.商品06); break;
                case 7: 公共物件03.AddRange(商人.商品07); break;
                case 8: 公共物件03.AddRange(商人.商品08); break;
                case 9: 公共物件03.AddRange(商人.商品09); break;
                case 10: 公共物件03.AddRange(商人.商品10); break;
                case 11: 公共物件03.AddRange(商人.商品11); break;
                case 12: 公共物件03.AddRange(商人.商品12); break;
                case 13: 公共物件03.AddRange(商人.商品13); break;
                case 14: 公共物件03.AddRange(商人.商品14); break;
                case 15: 公共物件03.AddRange(商人.商品15); break;
                case 16: 公共物件03.AddRange(商人.商品16); break;
                case 17: 公共物件03.AddRange(商人.商品17); break;
                case 18: 公共物件03.AddRange(商人.商品18); break;
                case 19: 公共物件03.AddRange(商人.商品19); break;
                case 20: 公共物件03.AddRange(商人.商品20); break;
                case 21: 公共物件03.AddRange(商人.商品21); break;
                case 22: 公共物件03.AddRange(商人.商品22); break;
                case 23: 公共物件03.AddRange(商人.商品23); break;
                case 24: 公共物件03.AddRange(商人.商品24); break;
                case 25: 公共物件03.AddRange(商人.商品25); break;
                case 26: 公共物件03.AddRange(商人.商品26); break;
                case 27: 公共物件03.AddRange(商人.商品27); break;
                case 28: 公共物件03.AddRange(商人.商品28); break;
                case 29: 公共物件03.AddRange(商人.商品29); break;
                case 30: 公共物件03.AddRange(商人.商品30); break;
                case 31: 公共物件03.AddRange(商人.商品31); break;
                case 32: 公共物件03.AddRange(商人.商品32); break;
                case 33: 公共物件03.AddRange(商人.商品33); break;
                case 34: 公共物件03.AddRange(商人.商品34); break;
                case 35: 公共物件03.AddRange(商人.商品35); break;
                case 36: 公共物件03.AddRange(商人.商品36); break;
                case 37: 公共物件03.AddRange(商人.商品37); break;
                case 38: 公共物件03.AddRange(商人.商品38); break;
                case 39: 公共物件03.AddRange(商人.商品39); break;
                case 40: 公共物件03.AddRange(商人.商品40); break;
                case 41: 公共物件03.AddRange(商人.商品41); break;
                case 42: 公共物件03.AddRange(商人.商品42); break;
                case 43: 公共物件03.AddRange(商人.商品43); break;
                case 44: 公共物件03.AddRange(商人.商品44); break;
                case 45: 公共物件03.AddRange(商人.商品45); break;
                case 46: 公共物件03.AddRange(商人.商品46); break;
                case 47: 公共物件03.AddRange(商人.商品47); break;
                case 48: 公共物件03.AddRange(商人.商品48); break;
                case 49: 公共物件03.AddRange(商人.商品49); break;
                case 50: 公共物件03.AddRange(商人.商品50); break;
                case 51: 公共物件03.AddRange(商人.商品51); break;
                case 52: 公共物件03.AddRange(商人.商品52); break;
                case 53: 公共物件03.AddRange(商人.商品53); break;
                case 54: 公共物件03.AddRange(商人.商品54); break;
                case 55: 公共物件03.AddRange(商人.商品55); break;
                case 56: 公共物件03.AddRange(商人.商品56); break;
                case 57: 公共物件03.AddRange(商人.商品57); break;
                case 58: 公共物件03.AddRange(商人.商品58); break;
                case 59: 公共物件03.AddRange(商人.商品59); break;
                case 60: 公共物件03.AddRange(商人.商品60); break;
                case 61: 公共物件03.AddRange(商人.商品61); break;
                case 62: 公共物件03.AddRange(商人.商品62); break;
                case 63: 公共物件03.AddRange(商人.商品63); break;
                case 64: 公共物件03.AddRange(商人.商品64); break;
                case 65: 公共物件03.AddRange(商人.商品65); break;
                case 66: 公共物件03.AddRange(商人.商品66); break;
                case 67: 公共物件03.AddRange(商人.商品67); break;
                case 68: 公共物件03.AddRange(商人.商品68); break;
                case 69: 公共物件03.AddRange(商人.商品69); break;
                case 70: 公共物件03.AddRange(商人.商品70); break;
                case 71: 公共物件03.AddRange(商人.商品71); break;
                case 72: 公共物件03.AddRange(商人.商品72); break;
                case 73: 公共物件03.AddRange(商人.商品73); break;
                case 74: 公共物件03.AddRange(商人.商品74); break;
                case 75: 公共物件03.AddRange(商人.商品75); break;
                case 76: 公共物件03.AddRange(商人.商品76); break;
                case 77: 公共物件03.AddRange(商人.商品77); break;
                case 78: 公共物件03.AddRange(商人.商品78); break;
                case 79: 公共物件03.AddRange(商人.商品79); break;
                case 80: 公共物件03.AddRange(商人.商品80); break;
                case 81: 公共物件03.AddRange(商人.商品81); break;
                case 82: 公共物件03.AddRange(商人.商品82); break;
                case 83: 公共物件03.AddRange(商人.商品83); break;
                case 84: 公共物件03.AddRange(商人.商品84); break;
                case 85: 公共物件03.AddRange(商人.商品85); break;
                case 86: 公共物件03.AddRange(商人.商品86); break;
                case 87: 公共物件03.AddRange(商人.商品87); break;
                case 88: 公共物件03.AddRange(商人.商品88); break;
                case 89: 公共物件03.AddRange(商人.商品89); break;
                case 90: 公共物件03.AddRange(商人.商品90); break;
                case 91: 公共物件03.AddRange(商人.商品91); break;
                case 92: 公共物件03.AddRange(商人.商品92); break;
                case 93: 公共物件03.AddRange(商人.商品93); break;
                case 94: 公共物件03.AddRange(商人.商品94); break;
                case 95: 公共物件03.AddRange(商人.商品95); break;
                case 96: 公共物件03.AddRange(商人.商品96); break;
                case 97: 公共物件03.AddRange(商人.商品97); break;
                case 98: 公共物件03.AddRange(商人.商品98); break;
                case 99: 公共物件03.AddRange(商人.商品99); break;
                case 100: 公共物件03.AddRange(商人.準備賣出00); break;
                case 101: 公共物件03.AddRange(商人.準備賣出01); break;
                case 102: 公共物件03.AddRange(商人.準備賣出02); break;
                case 103: 公共物件03.AddRange(商人.準備賣出03); break;
                case 104: 公共物件03.AddRange(商人.準備賣出04); break;
                case 105: 公共物件03.AddRange(商人.準備賣出05); break;
                case 106: 公共物件03.AddRange(商人.準備賣出06); break;
                case 107: 公共物件03.AddRange(商人.準備賣出07); break;
                case 108: 公共物件03.AddRange(商人.準備賣出08); break;
                case 109: 公共物件03.AddRange(商人.準備賣出09); break;
                case 110: 公共物件03.AddRange(商人.準備賣出10); break;
                case 111: 公共物件03.AddRange(商人.準備賣出11); break;
                case 112: 公共物件03.AddRange(商人.準備賣出12); break;
                case 113: 公共物件03.AddRange(商人.準備賣出13); break;
                case 114: 公共物件03.AddRange(商人.準備賣出14); break;
                case 115: 公共物件03.AddRange(商人.準備賣出15); break;
                case 116: 公共物件03.AddRange(商人.準備賣出16); break;
                case 117: 公共物件03.AddRange(商人.準備賣出17); break;
                case 118: 公共物件03.AddRange(商人.準備賣出18); break;
                case 119: 公共物件03.AddRange(商人.準備賣出19); break;
                case 120: 公共物件03.AddRange(商人.準備賣出20); break;
                case 121: 公共物件03.AddRange(商人.準備賣出21); break;
                case 122: 公共物件03.AddRange(商人.準備賣出22); break;
                case 123: 公共物件03.AddRange(商人.準備賣出23); break;
                case 124: 公共物件03.AddRange(商人.準備賣出24); break;
                case 125: 公共物件03.AddRange(商人.準備賣出25); break;
                case 126: 公共物件03.AddRange(商人.準備賣出26); break;
                case 127: 公共物件03.AddRange(商人.準備賣出27); break;
                case 128: 公共物件03.AddRange(商人.準備賣出28); break;
                case 129: 公共物件03.AddRange(商人.準備賣出29); break;
                case 130: 公共物件03.AddRange(商人.準備賣出30); break;
                case 131: 公共物件03.AddRange(商人.準備賣出31); break;
                case 132: 公共物件03.AddRange(商人.準備賣出32); break;
                case 133: 公共物件03.AddRange(商人.準備賣出33); break;
                case 134: 公共物件03.AddRange(商人.準備賣出34); break;
                case 135: 公共物件03.AddRange(商人.準備賣出35); break;
                case 136: 公共物件03.AddRange(商人.準備賣出36); break;
                case 137: 公共物件03.AddRange(商人.準備賣出37); break;
                case 138: 公共物件03.AddRange(商人.準備賣出38); break;
                case 139: 公共物件03.AddRange(商人.準備賣出39); break;
                case 140: 公共物件03.AddRange(商人.準備賣出40); break;
                case 141: 公共物件03.AddRange(商人.準備賣出41); break;
                case 142: 公共物件03.AddRange(商人.準備賣出42); break;
                case 143: 公共物件03.AddRange(商人.準備賣出43); break;
                case 144: 公共物件03.AddRange(商人.準備賣出44); break;
                case 145: 公共物件03.AddRange(商人.準備賣出45); break;
                case 146: 公共物件03.AddRange(商人.準備賣出46); break;
                case 147: 公共物件03.AddRange(商人.準備賣出47); break;
                case 148: 公共物件03.AddRange(商人.準備賣出48); break;
                case 149: 公共物件03.AddRange(商人.準備賣出49); break;
            }
        }
    }

    public void 獲取X的數量並刪除()
    {
        if (公共X < 100)
        {
            主角背包.物件存在列表[公共X] = false;
            switch (公共X)
            {
                case 0: 數量 = 主角背包.物件00[4].屬性參數; 主角背包.物件00.Clear(); break;
                case 1: 數量 = 主角背包.物件01[4].屬性參數; 主角背包.物件01.Clear(); break;
                case 2: 數量 = 主角背包.物件02[4].屬性參數; 主角背包.物件02.Clear(); break;
                case 3: 數量 = 主角背包.物件03[4].屬性參數; 主角背包.物件03.Clear(); break;
                case 4: 數量 = 主角背包.物件04[4].屬性參數; 主角背包.物件04.Clear(); break;
                case 5: 數量 = 主角背包.物件05[4].屬性參數; 主角背包.物件05.Clear(); break;
                case 6: 數量 = 主角背包.物件06[4].屬性參數; 主角背包.物件06.Clear(); break;
                case 7: 數量 = 主角背包.物件07[4].屬性參數; 主角背包.物件07.Clear(); break;
                case 8: 數量 = 主角背包.物件08[4].屬性參數; 主角背包.物件08.Clear(); break;
                case 9: 數量 = 主角背包.物件09[4].屬性參數; 主角背包.物件09.Clear(); break;
                case 10: 數量 = 主角背包.物件10[4].屬性參數; 主角背包.物件10.Clear(); break;
                case 11: 數量 = 主角背包.物件11[4].屬性參數; 主角背包.物件11.Clear(); break;
                case 12: 數量 = 主角背包.物件12[4].屬性參數; 主角背包.物件12.Clear(); break;
                case 13: 數量 = 主角背包.物件13[4].屬性參數; 主角背包.物件13.Clear(); break;
                case 14: 數量 = 主角背包.物件14[4].屬性參數; 主角背包.物件14.Clear(); break;
                case 15: 數量 = 主角背包.物件15[4].屬性參數; 主角背包.物件15.Clear(); break;
                case 16: 數量 = 主角背包.物件16[4].屬性參數; 主角背包.物件16.Clear(); break;
                case 17: 數量 = 主角背包.物件17[4].屬性參數; 主角背包.物件17.Clear(); break;
                case 18: 數量 = 主角背包.物件18[4].屬性參數; 主角背包.物件18.Clear(); break;
                case 19: 數量 = 主角背包.物件19[4].屬性參數; 主角背包.物件19.Clear(); break;
                case 20: 數量 = 主角背包.物件20[4].屬性參數; 主角背包.物件20.Clear(); break;
                case 21: 數量 = 主角背包.物件21[4].屬性參數; 主角背包.物件21.Clear(); break;
                case 22: 數量 = 主角背包.物件22[4].屬性參數; 主角背包.物件22.Clear(); break;
                case 23: 數量 = 主角背包.物件23[4].屬性參數; 主角背包.物件23.Clear(); break;
                case 24: 數量 = 主角背包.物件24[4].屬性參數; 主角背包.物件24.Clear(); break;
                case 25: 數量 = 主角背包.物件25[4].屬性參數; 主角背包.物件25.Clear(); break;
                case 26: 數量 = 主角背包.物件26[4].屬性參數; 主角背包.物件26.Clear(); break;
                case 27: 數量 = 主角背包.物件27[4].屬性參數; 主角背包.物件27.Clear(); break;
                case 28: 數量 = 主角背包.物件28[4].屬性參數; 主角背包.物件28.Clear(); break;
                case 29: 數量 = 主角背包.物件29[4].屬性參數; 主角背包.物件29.Clear(); break;
                case 30: 數量 = 主角背包.物件30[4].屬性參數; 主角背包.物件30.Clear(); break;
                case 31: 數量 = 主角背包.物件31[4].屬性參數; 主角背包.物件31.Clear(); break;
                case 32: 數量 = 主角背包.物件32[4].屬性參數; 主角背包.物件32.Clear(); break;
                case 33: 數量 = 主角背包.物件33[4].屬性參數; 主角背包.物件33.Clear(); break;
                case 34: 數量 = 主角背包.物件34[4].屬性參數; 主角背包.物件34.Clear(); break;
                case 35: 數量 = 主角背包.物件35[4].屬性參數; 主角背包.物件35.Clear(); break;
                case 36: 數量 = 主角背包.物件36[4].屬性參數; 主角背包.物件36.Clear(); break;
                case 37: 數量 = 主角背包.物件37[4].屬性參數; 主角背包.物件37.Clear(); break;
                case 38: 數量 = 主角背包.物件38[4].屬性參數; 主角背包.物件38.Clear(); break;
                case 39: 數量 = 主角背包.物件39[4].屬性參數; 主角背包.物件39.Clear(); break;
                case 40: 數量 = 主角背包.物件40[4].屬性參數; 主角背包.物件40.Clear(); break;
                case 41: 數量 = 主角背包.物件41[4].屬性參數; 主角背包.物件41.Clear(); break;
                case 42: 數量 = 主角背包.物件42[4].屬性參數; 主角背包.物件42.Clear(); break;
                case 43: 數量 = 主角背包.物件43[4].屬性參數; 主角背包.物件43.Clear(); break;
                case 44: 數量 = 主角背包.物件44[4].屬性參數; 主角背包.物件44.Clear(); break;
                case 45: 數量 = 主角背包.物件45[4].屬性參數; 主角背包.物件45.Clear(); break;
                case 46: 數量 = 主角背包.物件46[4].屬性參數; 主角背包.物件46.Clear(); break;
                case 47: 數量 = 主角背包.物件47[4].屬性參數; 主角背包.物件47.Clear(); break;
                case 48: 數量 = 主角背包.物件48[4].屬性參數; 主角背包.物件48.Clear(); break;
                case 49: 數量 = 主角背包.物件49[4].屬性參數; 主角背包.物件49.Clear(); break;
                case 50: 數量 = 主角背包.物件50[4].屬性參數; 主角背包.物件50.Clear(); break;
                case 51: 數量 = 主角背包.物件51[4].屬性參數; 主角背包.物件51.Clear(); break;
                case 52: 數量 = 主角背包.物件52[4].屬性參數; 主角背包.物件52.Clear(); break;
                case 53: 數量 = 主角背包.物件53[4].屬性參數; 主角背包.物件53.Clear(); break;
                case 54: 數量 = 主角背包.物件54[4].屬性參數; 主角背包.物件54.Clear(); break;
                case 55: 數量 = 主角背包.物件55[4].屬性參數; 主角背包.物件55.Clear(); break;
                case 56: 數量 = 主角背包.物件56[4].屬性參數; 主角背包.物件56.Clear(); break;
                case 57: 數量 = 主角背包.物件57[4].屬性參數; 主角背包.物件57.Clear(); break;
                case 58: 數量 = 主角背包.物件58[4].屬性參數; 主角背包.物件58.Clear(); break;
                case 59: 數量 = 主角背包.物件59[4].屬性參數; 主角背包.物件59.Clear(); break;
                case 60: 數量 = 主角背包.物件60[4].屬性參數; 主角背包.物件60.Clear(); break;
                case 61: 數量 = 主角背包.物件61[4].屬性參數; 主角背包.物件61.Clear(); break;
                case 62: 數量 = 主角背包.物件62[4].屬性參數; 主角背包.物件62.Clear(); break;
                case 63: 數量 = 主角背包.物件63[4].屬性參數; 主角背包.物件63.Clear(); break;
                case 64: 數量 = 主角背包.物件64[4].屬性參數; 主角背包.物件64.Clear(); break;
                case 65: 數量 = 主角背包.物件65[4].屬性參數; 主角背包.物件65.Clear(); break;
                case 66: 數量 = 主角背包.物件66[4].屬性參數; 主角背包.物件66.Clear(); break;
                case 67: 數量 = 主角背包.物件67[4].屬性參數; 主角背包.物件67.Clear(); break;
                case 68: 數量 = 主角背包.物件68[4].屬性參數; 主角背包.物件68.Clear(); break;
                case 69: 數量 = 主角背包.物件69[4].屬性參數; 主角背包.物件69.Clear(); break;
                case 70: 數量 = 主角背包.物件70[4].屬性參數; 主角背包.物件70.Clear(); break;
                case 71: 數量 = 主角背包.物件71[4].屬性參數; 主角背包.物件71.Clear(); break;
                case 72: 數量 = 主角背包.物件72[4].屬性參數; 主角背包.物件72.Clear(); break;
                case 73: 數量 = 主角背包.物件73[4].屬性參數; 主角背包.物件73.Clear(); break;
                case 74: 數量 = 主角背包.物件74[4].屬性參數; 主角背包.物件74.Clear(); break;
                case 75: 數量 = 主角背包.物件75[4].屬性參數; 主角背包.物件75.Clear(); break;
                case 76: 數量 = 主角背包.物件76[4].屬性參數; 主角背包.物件76.Clear(); break;
                case 77: 數量 = 主角背包.物件77[4].屬性參數; 主角背包.物件77.Clear(); break;
                case 78: 數量 = 主角背包.物件78[4].屬性參數; 主角背包.物件78.Clear(); break;
                case 79: 數量 = 主角背包.物件79[4].屬性參數; 主角背包.物件79.Clear(); break;
                case 80: 數量 = 主角背包.物件80[4].屬性參數; 主角背包.物件80.Clear(); break;
                case 81: 數量 = 主角背包.物件81[4].屬性參數; 主角背包.物件81.Clear(); break;
                case 82: 數量 = 主角背包.物件82[4].屬性參數; 主角背包.物件82.Clear(); break;
                case 83: 數量 = 主角背包.物件83[4].屬性參數; 主角背包.物件83.Clear(); break;
                case 84: 數量 = 主角背包.物件84[4].屬性參數; 主角背包.物件84.Clear(); break;
                case 85: 數量 = 主角背包.物件85[4].屬性參數; 主角背包.物件85.Clear(); break;
                case 86: 數量 = 主角背包.物件86[4].屬性參數; 主角背包.物件86.Clear(); break;
                case 87: 數量 = 主角背包.物件87[4].屬性參數; 主角背包.物件87.Clear(); break;
                case 88: 數量 = 主角背包.物件88[4].屬性參數; 主角背包.物件88.Clear(); break;
                case 89: 數量 = 主角背包.物件89[4].屬性參數; 主角背包.物件89.Clear(); break;
                case 90: 數量 = 主角背包.物件90[4].屬性參數; 主角背包.物件90.Clear(); break;
                case 91: 數量 = 主角背包.物件91[4].屬性參數; 主角背包.物件91.Clear(); break;
                case 92: 數量 = 主角背包.物件92[4].屬性參數; 主角背包.物件92.Clear(); break;
                case 93: 數量 = 主角背包.物件93[4].屬性參數; 主角背包.物件93.Clear(); break;
                case 94: 數量 = 主角背包.物件94[4].屬性參數; 主角背包.物件94.Clear(); break;
                case 95: 數量 = 主角背包.物件95[4].屬性參數; 主角背包.物件95.Clear(); break;
                case 96: 數量 = 主角背包.物件96[4].屬性參數; 主角背包.物件96.Clear(); break;
                case 97: 數量 = 主角背包.物件97[4].屬性參數; 主角背包.物件97.Clear(); break;
                case 98: 數量 = 主角背包.物件98[4].屬性參數; 主角背包.物件98.Clear(); break;
                case 99: 數量 = 主角背包.物件99[4].屬性參數; 主角背包.物件99.Clear(); break;
            }
        }
        else
        {
            主角背包.物件存在列表[公共X - 100] = false;
            switch (公共X)
            {
                case 100: 數量 = 主角背包.販賣物00[4].屬性參數; 主角背包.販賣物00.Clear(); break;
                case 101: 數量 = 主角背包.販賣物01[4].屬性參數; 主角背包.販賣物01.Clear(); break;
                case 102: 數量 = 主角背包.販賣物02[4].屬性參數; 主角背包.販賣物02.Clear(); break;
                case 103: 數量 = 主角背包.販賣物03[4].屬性參數; 主角背包.販賣物03.Clear(); break;
                case 104: 數量 = 主角背包.販賣物04[4].屬性參數; 主角背包.販賣物04.Clear(); break;
                case 105: 數量 = 主角背包.販賣物05[4].屬性參數; 主角背包.販賣物05.Clear(); break;
                case 106: 數量 = 主角背包.販賣物06[4].屬性參數; 主角背包.販賣物06.Clear(); break;
                case 107: 數量 = 主角背包.販賣物07[4].屬性參數; 主角背包.販賣物07.Clear(); break;
                case 108: 數量 = 主角背包.販賣物08[4].屬性參數; 主角背包.販賣物08.Clear(); break;
                case 109: 數量 = 主角背包.販賣物09[4].屬性參數; 主角背包.販賣物09.Clear(); break;
                case 110: 數量 = 主角背包.販賣物10[4].屬性參數; 主角背包.販賣物10.Clear(); break;
                case 111: 數量 = 主角背包.販賣物11[4].屬性參數; 主角背包.販賣物11.Clear(); break;
                case 112: 數量 = 主角背包.販賣物12[4].屬性參數; 主角背包.販賣物12.Clear(); break;
                case 113: 數量 = 主角背包.販賣物13[4].屬性參數; 主角背包.販賣物13.Clear(); break;
                case 114: 數量 = 主角背包.販賣物14[4].屬性參數; 主角背包.販賣物14.Clear(); break;
                case 115: 數量 = 主角背包.販賣物15[4].屬性參數; 主角背包.販賣物15.Clear(); break;
                case 116: 數量 = 主角背包.販賣物16[4].屬性參數; 主角背包.販賣物16.Clear(); break;
                case 117: 數量 = 主角背包.販賣物17[4].屬性參數; 主角背包.販賣物17.Clear(); break;
                case 118: 數量 = 主角背包.販賣物18[4].屬性參數; 主角背包.販賣物18.Clear(); break;
                case 119: 數量 = 主角背包.販賣物19[4].屬性參數; 主角背包.販賣物19.Clear(); break;
                case 120: 數量 = 主角背包.販賣物20[4].屬性參數; 主角背包.販賣物20.Clear(); break;
                case 121: 數量 = 主角背包.販賣物21[4].屬性參數; 主角背包.販賣物21.Clear(); break;
                case 122: 數量 = 主角背包.販賣物22[4].屬性參數; 主角背包.販賣物22.Clear(); break;
                case 123: 數量 = 主角背包.販賣物23[4].屬性參數; 主角背包.販賣物23.Clear(); break;
                case 124: 數量 = 主角背包.販賣物24[4].屬性參數; 主角背包.販賣物24.Clear(); break;
                case 125: 數量 = 主角背包.販賣物25[4].屬性參數; 主角背包.販賣物25.Clear(); break;
                case 126: 數量 = 主角背包.販賣物26[4].屬性參數; 主角背包.販賣物26.Clear(); break;
                case 127: 數量 = 主角背包.販賣物27[4].屬性參數; 主角背包.販賣物27.Clear(); break;
                case 128: 數量 = 主角背包.販賣物28[4].屬性參數; 主角背包.販賣物28.Clear(); break;
                case 129: 數量 = 主角背包.販賣物29[4].屬性參數; 主角背包.販賣物29.Clear(); break;
                case 130: 數量 = 主角背包.販賣物30[4].屬性參數; 主角背包.販賣物30.Clear(); break;
                case 131: 數量 = 主角背包.販賣物31[4].屬性參數; 主角背包.販賣物31.Clear(); break;
                case 132: 數量 = 主角背包.販賣物32[4].屬性參數; 主角背包.販賣物32.Clear(); break;
                case 133: 數量 = 主角背包.販賣物33[4].屬性參數; 主角背包.販賣物33.Clear(); break;
                case 134: 數量 = 主角背包.販賣物34[4].屬性參數; 主角背包.販賣物34.Clear(); break;
                case 135: 數量 = 主角背包.販賣物35[4].屬性參數; 主角背包.販賣物35.Clear(); break;
                case 136: 數量 = 主角背包.販賣物36[4].屬性參數; 主角背包.販賣物36.Clear(); break;
                case 137: 數量 = 主角背包.販賣物37[4].屬性參數; 主角背包.販賣物37.Clear(); break;
                case 138: 數量 = 主角背包.販賣物38[4].屬性參數; 主角背包.販賣物38.Clear(); break;
                case 139: 數量 = 主角背包.販賣物39[4].屬性參數; 主角背包.販賣物39.Clear(); break;
                case 140: 數量 = 主角背包.販賣物40[4].屬性參數; 主角背包.販賣物40.Clear(); break;
                case 141: 數量 = 主角背包.販賣物41[4].屬性參數; 主角背包.販賣物41.Clear(); break;
                case 142: 數量 = 主角背包.販賣物42[4].屬性參數; 主角背包.販賣物42.Clear(); break;
                case 143: 數量 = 主角背包.販賣物43[4].屬性參數; 主角背包.販賣物43.Clear(); break;
                case 144: 數量 = 主角背包.販賣物44[4].屬性參數; 主角背包.販賣物44.Clear(); break;
                case 145: 數量 = 主角背包.販賣物45[4].屬性參數; 主角背包.販賣物45.Clear(); break;
                case 146: 數量 = 主角背包.販賣物46[4].屬性參數; 主角背包.販賣物46.Clear(); break;
                case 147: 數量 = 主角背包.販賣物47[4].屬性參數; 主角背包.販賣物47.Clear(); break;
                case 148: 數量 = 主角背包.販賣物48[4].屬性參數; 主角背包.販賣物48.Clear(); break;
                case 149: 數量 = 主角背包.販賣物49[4].屬性參數; 主角背包.販賣物49.Clear(); break;
            }
        }
    }
    public void 把數量疊加到Y()
    {
        if (公共Y < 100)
        {
            switch (公共Y)
            {
                case 0: 主角背包.物件00[4].屬性參數 += 數量; break;
                case 1: 主角背包.物件01[4].屬性參數 += 數量; break;
                case 2: 主角背包.物件02[4].屬性參數 += 數量; break;
                case 3: 主角背包.物件03[4].屬性參數 += 數量; break;
                case 4: 主角背包.物件04[4].屬性參數 += 數量; break;
                case 5: 主角背包.物件05[4].屬性參數 += 數量; break;
                case 6: 主角背包.物件06[4].屬性參數 += 數量; break;
                case 7: 主角背包.物件07[4].屬性參數 += 數量; break;
                case 8: 主角背包.物件08[4].屬性參數 += 數量; break;
                case 9: 主角背包.物件09[4].屬性參數 += 數量; break;
                case 10: 主角背包.物件10[4].屬性參數 += 數量; break;
                case 11: 主角背包.物件11[4].屬性參數 += 數量; break;
                case 12: 主角背包.物件12[4].屬性參數 += 數量; break;
                case 13: 主角背包.物件13[4].屬性參數 += 數量; break;
                case 14: 主角背包.物件14[4].屬性參數 += 數量; break;
                case 15: 主角背包.物件15[4].屬性參數 += 數量; break;
                case 16: 主角背包.物件16[4].屬性參數 += 數量; break;
                case 17: 主角背包.物件17[4].屬性參數 += 數量; break;
                case 18: 主角背包.物件18[4].屬性參數 += 數量; break;
                case 19: 主角背包.物件19[4].屬性參數 += 數量; break;
                case 20: 主角背包.物件20[4].屬性參數 += 數量; break;
                case 21: 主角背包.物件21[4].屬性參數 += 數量; break;
                case 22: 主角背包.物件22[4].屬性參數 += 數量; break;
                case 23: 主角背包.物件23[4].屬性參數 += 數量; break;
                case 24: 主角背包.物件24[4].屬性參數 += 數量; break;
                case 25: 主角背包.物件25[4].屬性參數 += 數量; break;
                case 26: 主角背包.物件26[4].屬性參數 += 數量; break;
                case 27: 主角背包.物件27[4].屬性參數 += 數量; break;
                case 28: 主角背包.物件28[4].屬性參數 += 數量; break;
                case 29: 主角背包.物件29[4].屬性參數 += 數量; break;
                case 30: 主角背包.物件30[4].屬性參數 += 數量; break;
                case 31: 主角背包.物件31[4].屬性參數 += 數量; break;
                case 32: 主角背包.物件32[4].屬性參數 += 數量; break;
                case 33: 主角背包.物件33[4].屬性參數 += 數量; break;
                case 34: 主角背包.物件34[4].屬性參數 += 數量; break;
                case 35: 主角背包.物件35[4].屬性參數 += 數量; break;
                case 36: 主角背包.物件36[4].屬性參數 += 數量; break;
                case 37: 主角背包.物件37[4].屬性參數 += 數量; break;
                case 38: 主角背包.物件38[4].屬性參數 += 數量; break;
                case 39: 主角背包.物件39[4].屬性參數 += 數量; break;
                case 40: 主角背包.物件40[4].屬性參數 += 數量; break;
                case 41: 主角背包.物件41[4].屬性參數 += 數量; break;
                case 42: 主角背包.物件42[4].屬性參數 += 數量; break;
                case 43: 主角背包.物件43[4].屬性參數 += 數量; break;
                case 44: 主角背包.物件44[4].屬性參數 += 數量; break;
                case 45: 主角背包.物件45[4].屬性參數 += 數量; break;
                case 46: 主角背包.物件46[4].屬性參數 += 數量; break;
                case 47: 主角背包.物件47[4].屬性參數 += 數量; break;
                case 48: 主角背包.物件48[4].屬性參數 += 數量; break;
                case 49: 主角背包.物件49[4].屬性參數 += 數量; break;
                case 50: 主角背包.物件50[4].屬性參數 += 數量; break;
                case 51: 主角背包.物件51[4].屬性參數 += 數量; break;
                case 52: 主角背包.物件52[4].屬性參數 += 數量; break;
                case 53: 主角背包.物件53[4].屬性參數 += 數量; break;
                case 54: 主角背包.物件54[4].屬性參數 += 數量; break;
                case 55: 主角背包.物件55[4].屬性參數 += 數量; break;
                case 56: 主角背包.物件56[4].屬性參數 += 數量; break;
                case 57: 主角背包.物件57[4].屬性參數 += 數量; break;
                case 58: 主角背包.物件58[4].屬性參數 += 數量; break;
                case 59: 主角背包.物件59[4].屬性參數 += 數量; break;
                case 60: 主角背包.物件60[4].屬性參數 += 數量; break;
                case 61: 主角背包.物件61[4].屬性參數 += 數量; break;
                case 62: 主角背包.物件62[4].屬性參數 += 數量; break;
                case 63: 主角背包.物件63[4].屬性參數 += 數量; break;
                case 64: 主角背包.物件64[4].屬性參數 += 數量; break;
                case 65: 主角背包.物件65[4].屬性參數 += 數量; break;
                case 66: 主角背包.物件66[4].屬性參數 += 數量; break;
                case 67: 主角背包.物件67[4].屬性參數 += 數量; break;
                case 68: 主角背包.物件68[4].屬性參數 += 數量; break;
                case 69: 主角背包.物件69[4].屬性參數 += 數量; break;
                case 70: 主角背包.物件70[4].屬性參數 += 數量; break;
                case 71: 主角背包.物件71[4].屬性參數 += 數量; break;
                case 72: 主角背包.物件72[4].屬性參數 += 數量; break;
                case 73: 主角背包.物件73[4].屬性參數 += 數量; break;
                case 74: 主角背包.物件74[4].屬性參數 += 數量; break;
                case 75: 主角背包.物件75[4].屬性參數 += 數量; break;
                case 76: 主角背包.物件76[4].屬性參數 += 數量; break;
                case 77: 主角背包.物件77[4].屬性參數 += 數量; break;
                case 78: 主角背包.物件78[4].屬性參數 += 數量; break;
                case 79: 主角背包.物件79[4].屬性參數 += 數量; break;
                case 80: 主角背包.物件80[4].屬性參數 += 數量; break;
                case 81: 主角背包.物件81[4].屬性參數 += 數量; break;
                case 82: 主角背包.物件82[4].屬性參數 += 數量; break;
                case 83: 主角背包.物件83[4].屬性參數 += 數量; break;
                case 84: 主角背包.物件84[4].屬性參數 += 數量; break;
                case 85: 主角背包.物件85[4].屬性參數 += 數量; break;
                case 86: 主角背包.物件86[4].屬性參數 += 數量; break;
                case 87: 主角背包.物件87[4].屬性參數 += 數量; break;
                case 88: 主角背包.物件88[4].屬性參數 += 數量; break;
                case 89: 主角背包.物件89[4].屬性參數 += 數量; break;
                case 90: 主角背包.物件90[4].屬性參數 += 數量; break;
                case 91: 主角背包.物件91[4].屬性參數 += 數量; break;
                case 92: 主角背包.物件92[4].屬性參數 += 數量; break;
                case 93: 主角背包.物件93[4].屬性參數 += 數量; break;
                case 94: 主角背包.物件94[4].屬性參數 += 數量; break;
                case 95: 主角背包.物件95[4].屬性參數 += 數量; break;
                case 96: 主角背包.物件96[4].屬性參數 += 數量; break;
                case 97: 主角背包.物件97[4].屬性參數 += 數量; break;
                case 98: 主角背包.物件98[4].屬性參數 += 數量; break;
                case 99: 主角背包.物件99[4].屬性參數 += 數量; break;
            }
        }
        else
        {
            switch (公共Y)
            {
                case 100: 主角背包.販賣物00[4].屬性參數 += 數量; break;
                case 101: 主角背包.販賣物01[4].屬性參數 += 數量; break;
                case 102: 主角背包.販賣物02[4].屬性參數 += 數量; break;
                case 103: 主角背包.販賣物03[4].屬性參數 += 數量; break;
                case 104: 主角背包.販賣物04[4].屬性參數 += 數量; break;
                case 105: 主角背包.販賣物05[4].屬性參數 += 數量; break;
                case 106: 主角背包.販賣物06[4].屬性參數 += 數量; break;
                case 107: 主角背包.販賣物07[4].屬性參數 += 數量; break;
                case 108: 主角背包.販賣物08[4].屬性參數 += 數量; break;
                case 109: 主角背包.販賣物09[4].屬性參數 += 數量; break;
                case 110: 主角背包.販賣物10[4].屬性參數 += 數量; break;
                case 111: 主角背包.販賣物11[4].屬性參數 += 數量; break;
                case 112: 主角背包.販賣物12[4].屬性參數 += 數量; break;
                case 113: 主角背包.販賣物13[4].屬性參數 += 數量; break;
                case 114: 主角背包.販賣物14[4].屬性參數 += 數量; break;
                case 115: 主角背包.販賣物15[4].屬性參數 += 數量; break;
                case 116: 主角背包.販賣物16[4].屬性參數 += 數量; break;
                case 117: 主角背包.販賣物17[4].屬性參數 += 數量; break;
                case 118: 主角背包.販賣物18[4].屬性參數 += 數量; break;
                case 119: 主角背包.販賣物19[4].屬性參數 += 數量; break;
                case 120: 主角背包.販賣物20[4].屬性參數 += 數量; break;
                case 121: 主角背包.販賣物21[4].屬性參數 += 數量; break;
                case 122: 主角背包.販賣物22[4].屬性參數 += 數量; break;
                case 123: 主角背包.販賣物23[4].屬性參數 += 數量; break;
                case 124: 主角背包.販賣物24[4].屬性參數 += 數量; break;
                case 125: 主角背包.販賣物25[4].屬性參數 += 數量; break;
                case 126: 主角背包.販賣物26[4].屬性參數 += 數量; break;
                case 127: 主角背包.販賣物27[4].屬性參數 += 數量; break;
                case 128: 主角背包.販賣物28[4].屬性參數 += 數量; break;
                case 129: 主角背包.販賣物29[4].屬性參數 += 數量; break;
                case 130: 主角背包.販賣物30[4].屬性參數 += 數量; break;
                case 131: 主角背包.販賣物31[4].屬性參數 += 數量; break;
                case 132: 主角背包.販賣物32[4].屬性參數 += 數量; break;
                case 133: 主角背包.販賣物33[4].屬性參數 += 數量; break;
                case 134: 主角背包.販賣物34[4].屬性參數 += 數量; break;
                case 135: 主角背包.販賣物35[4].屬性參數 += 數量; break;
                case 136: 主角背包.販賣物36[4].屬性參數 += 數量; break;
                case 137: 主角背包.販賣物37[4].屬性參數 += 數量; break;
                case 138: 主角背包.販賣物38[4].屬性參數 += 數量; break;
                case 139: 主角背包.販賣物39[4].屬性參數 += 數量; break;
                case 140: 主角背包.販賣物40[4].屬性參數 += 數量; break;
                case 141: 主角背包.販賣物41[4].屬性參數 += 數量; break;
                case 142: 主角背包.販賣物42[4].屬性參數 += 數量; break;
                case 143: 主角背包.販賣物43[4].屬性參數 += 數量; break;
                case 144: 主角背包.販賣物44[4].屬性參數 += 數量; break;
                case 145: 主角背包.販賣物45[4].屬性參數 += 數量; break;
                case 146: 主角背包.販賣物46[4].屬性參數 += 數量; break;
                case 147: 主角背包.販賣物47[4].屬性參數 += 數量; break;
                case 148: 主角背包.販賣物48[4].屬性參數 += 數量; break;
                case 149: 主角背包.販賣物49[4].屬性參數 += 數量; break;
            }
        }
    }
}


